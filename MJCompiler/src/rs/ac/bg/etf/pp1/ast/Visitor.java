// generated with ast extension for cup
// version 0.8
// 16/8/2021 1:54:16


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Unmatched Unmatched);
    public void visit(Matched Matched);
    public void visit(SingleVar SingleVar);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(AddOpers AddOpers);
    public void visit(StatementList StatementList);
    public void visit(DesignatorStmt DesignatorStmt);
    public void visit(MulOpers MulOpers);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(DeclList DeclList);
    public void visit(Designator Designator);
    public void visit(Condition Condition);
    public void visit(Value Value);
    public void visit(DesignatorName DesignatorName);
    public void visit(ActualParamList ActualParamList);
    public void visit(MethodVarDecl MethodVarDecl);
    public void visit(RelOpers RelOpers);
    public void visit(Vars Vars);
    public void visit(FormalParamList FormalParamList);
    public void visit(Expr Expr);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(ActualPars ActualPars);
    public void visit(ConstVars ConstVars);
    public void visit(MoreFactorList MoreFactorList);
    public void visit(MoreTermList MoreTermList);
    public void visit(ProgVarDecl ProgVarDecl);
    public void visit(Statement Statement);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(FormPars FormPars);
    public void visit(RelopNE RelopNE);
    public void visit(RelopLE RelopLE);
    public void visit(RelopGE RelopGE);
    public void visit(RelopLT RelopLT);
    public void visit(RelopEQ RelopEQ);
    public void visit(RelopGT RelopGT);
    public void visit(Modop Modop);
    public void visit(Divop Divop);
    public void visit(Mulop Mulop);
    public void visit(Subop Subop);
    public void visit(Addop Addop);
    public void visit(Designator_1 Designator_1);
    public void visit(Designator_0 Designator_0);
    public void visit(ActualParam ActualParam);
    public void visit(ActualParams ActualParams);
    public void visit(NoActuals NoActuals);
    public void visit(Actuals Actuals);
    public void visit(FactorNewExpr FactorNewExpr);
    public void visit(FactorNew FactorNew);
    public void visit(FactorExpr FactorExpr);
    public void visit(FactorDesignator FactorDesignator);
    public void visit(FactorCharConst FactorCharConst);
    public void visit(FactorBoolConst FactorBoolConst);
    public void visit(FactorNumConst FactorNumConst);
    public void visit(NoMoreFactor NoMoreFactor);
    public void visit(MoreFactor MoreFactor);
    public void visit(Term Term);
    public void visit(NoMoreTerm NoMoreTerm);
    public void visit(MoreTerm MoreTerm);
    public void visit(ErrorExpr ErrorExpr);
    public void visit(NegExpr NegExpr);
    public void visit(PosExpr PosExpr);
    public void visit(FuncCall FuncCall);
    public void visit(Decrement Decrement);
    public void visit(Increment Increment);
    public void visit(Assignment Assignment);
    public void visit(CondFactExpr CondFactExpr);
    public void visit(CondFactRelop CondFactRelop);
    public void visit(CondTermFact CondTermFact);
    public void visit(CondTermAnd CondTermAnd);
    public void visit(Orr Orr);
    public void visit(ConditionTerm ConditionTerm);
    public void visit(ConditionOr ConditionOr);
    public void visit(Cond Cond);
    public void visit(IfBody IfBody);
    public void visit(IfWord IfWord);
    public void visit(StmtIf StmtIf);
    public void visit(StmtIfElse StmtIfElse);
    public void visit(StmtList StmtList);
    public void visit(StmtReturn StmtReturn);
    public void visit(StmtReturnExpr StmtReturnExpr);
    public void visit(StmtPrintNum StmtPrintNum);
    public void visit(StmtPrint StmtPrint);
    public void visit(StmtRead StmtRead);
    public void visit(ErrorStmt ErrorStmt);
    public void visit(StatementDesignator StatementDesignator);
    public void visit(NoStmt NoStmt);
    public void visit(Statements Statements);
    public void visit(FormalParDeclArr FormalParDeclArr);
    public void visit(FormalParDecl FormalParDecl);
    public void visit(SingleFormalParamDecl SingleFormalParamDecl);
    public void visit(FormalParamDecls FormalParamDecls);
    public void visit(NoFormalParam NoFormalParam);
    public void visit(FormalParams FormalParams);
    public void visit(MethodVoidType MethodVoidType);
    public void visit(MethodReturnType MethodReturnType);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDecl NoMethodDecl);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(NoMethodVarDecl NoMethodVarDecl);
    public void visit(MethodVarDeclList MethodVarDeclList);
    public void visit(Type Type);
    public void visit(ErrorSingleVar ErrorSingleVar);
    public void visit(Variable Variable);
    public void visit(VarArray VarArray);
    public void visit(VarDecl_1 VarDecl_1);
    public void visit(VarDecl_0 VarDecl_0);
    public void visit(VarDecl VarDecl);
    public void visit(CharConst CharConst);
    public void visit(BoolConst BoolConst);
    public void visit(NumConst NumConst);
    public void visit(SingleConst SingleConst);
    public void visit(ConstDecl_1 ConstDecl_1);
    public void visit(ConstDecl_0 ConstDecl_0);
    public void visit(ConstDecl ConstDecl);
    public void visit(ProgConst ProgConst);
    public void visit(ProgVar ProgVar);
    public void visit(ErrorVarComma ErrorVarComma);
    public void visit(ErrorVarSemi ErrorVarSemi);
    public void visit(NoDecls NoDecls);
    public void visit(Declarations Declarations);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
