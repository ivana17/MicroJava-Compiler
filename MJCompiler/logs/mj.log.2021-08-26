ERROR 15:25:43,451 - Nema dovoljno argumenata! ( Ocekivani ulaz: <ulaz>.mj <izlaz>.obj )
ERROR 15:26:08,350 - Nema dovoljno argumenata! ( Ocekivani ulaz: <ulaz>.mj <izlaz>.obj )
ERROR 15:26:29,221 - Ulazni fajl [program.mj] ne postoji!
ERROR 15:27:29,666 - Ulazni fajl [program.mj] ne postoji!
ERROR 16:44:47,105 - Ulazni fajl [program.mj] ne postoji!
INFO  16:45:15,773 - Kompajliranje ulaznog fajla test\program.mj
INFO  16:45:15,805 - #2 program
INFO  16:45:15,805 - #9 MJProgram
INFO  16:45:15,805 - #9 int
INFO  16:45:15,806 - #9 x
INFO  16:45:15,806 - #28 ;
INFO  16:45:15,806 - #9 int
INFO  16:45:15,807 - #9 y
INFO  16:45:15,807 - #28 ;
INFO  16:45:15,807 - #21 {
INFO  16:45:15,807 - #9 int
INFO  16:45:15,808 - #9 k
INFO  16:45:15,809 - #30 (
INFO  16:45:15,809 - #31 )
INFO  16:45:15,810 - #9 int
INFO  16:45:15,810 - #9 c
INFO  16:45:15,810 - #28 ;
INFO  16:45:15,810 - #21 {
INFO  16:45:15,810 - #9 c
INFO  16:45:15,811 - #25 =
INFO  16:45:15,811 - #10 2
INFO  16:45:15,811 - #28 ;
INFO  16:45:15,811 - #37 return
INFO  16:45:15,812 - #9 c
INFO  16:45:15,812 - #14 +
INFO  16:45:15,812 - #10 2
INFO  16:45:15,812 - #28 ;
INFO  16:45:15,812 - #22 }
INFO  16:45:15,813 - #9 int
INFO  16:45:15,813 - #9 main
INFO  16:45:15,813 - #30 (
INFO  16:45:15,813 - #31 )
INFO  16:45:15,813 - #21 {
INFO  16:45:15,814 - #3 print
INFO  16:45:15,814 - #30 (
INFO  16:45:15,814 - #10 1
INFO  16:45:15,814 - #31 )
INFO  16:45:15,814 - #28 ;
INFO  16:45:15,814 - #9 x
INFO  16:45:15,814 - #25 =
INFO  16:45:15,814 - #10 88
INFO  16:45:15,814 - #14 +
INFO  16:45:15,814 - #10 2
INFO  16:45:15,814 - #28 ;
INFO  16:45:15,814 - #3 print
INFO  16:45:15,814 - #30 (
INFO  16:45:15,814 - #9 x
INFO  16:45:15,814 - #31 )
INFO  16:45:15,814 - #28 ;
INFO  16:45:15,814 - #37 return
INFO  16:45:15,815 - #10 1
INFO  16:45:15,815 - #28 ;
INFO  16:45:15,815 - #22 }
INFO  16:45:15,815 - #22 }
INFO  16:45:15,816 - 
================SINTAKSNO STABLO====================

INFO  16:45:15,818 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      NoVarDecl(
      ) [NoVarDecl]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             x
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         int
        ) [Type]
        VarDecl_0(
          Variable(
           y
          ) [Variable]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                Addop(
                ) [Addop]
                TermExpr(
                  FactorTerm(
                    ValFactor(
                      NumConst(
                       2
                      ) [NumConst]
                    ) [ValFactor]
                  ) [FactorTerm]
                ) [TermExpr]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         1
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   x
                  ) [Designator_1]
                  AddExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         88
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                    Addop(
                    ) [Addop]
                    TermExpr(
                      FactorTerm(
                        ValFactor(
                          NumConst(
                           2
                          ) [NumConst]
                        ) [ValFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                  ) [AddExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  16:45:15,828 - 
================SEMANTICKA OBRADA====================

INFO  16:45:15,832 - Deklarisana promenljiva x na liniji 2
INFO  16:45:15,832 - Deklarisana promenljiva y na liniji 2
INFO  16:45:15,832 - Obradjuje se funkcija k na liniji 6
INFO  16:45:15,832 - Deklarisana promenljiva c na liniji 6
INFO  16:45:15,832 - Obradjuje se funkcija main na liniji 11
INFO  16:45:15,833 - 
================GENERISANJE KODA====================

INFO  16:45:57,998 - Kompajliranje ulaznog fajla test\program.mj
INFO  16:45:58,031 - #2 program
INFO  16:45:58,031 - #9 MJProgram
INFO  16:45:58,031 - #9 int
INFO  16:45:58,032 - #9 x
INFO  16:45:58,032 - #28 ;
INFO  16:45:58,032 - #9 int
INFO  16:45:58,033 - #9 y
INFO  16:45:58,033 - #28 ;
INFO  16:45:58,033 - #21 {
INFO  16:45:58,033 - #9 int
INFO  16:45:58,034 - #9 k
INFO  16:45:58,034 - #30 (
INFO  16:45:58,034 - #31 )
INFO  16:45:58,035 - #9 int
INFO  16:45:58,035 - #9 c
INFO  16:45:58,035 - #28 ;
INFO  16:45:58,035 - #21 {
INFO  16:45:58,035 - #9 c
INFO  16:45:58,036 - #25 =
INFO  16:45:58,036 - #10 2
INFO  16:45:58,036 - #28 ;
INFO  16:45:58,036 - #37 return
INFO  16:45:58,037 - #9 c
INFO  16:45:58,037 - #14 +
INFO  16:45:58,037 - #10 2
INFO  16:45:58,037 - #28 ;
INFO  16:45:58,037 - #22 }
INFO  16:45:58,037 - #9 int
INFO  16:45:58,038 - #9 main
INFO  16:45:58,038 - #30 (
INFO  16:45:58,038 - #31 )
INFO  16:45:58,038 - #21 {
INFO  16:45:58,038 - #3 print
INFO  16:45:58,038 - #30 (
INFO  16:45:58,038 - #10 1
INFO  16:45:58,038 - #31 )
INFO  16:45:58,039 - #28 ;
INFO  16:45:58,039 - #9 x
INFO  16:45:58,039 - #25 =
INFO  16:45:58,039 - #10 88
INFO  16:45:58,039 - #14 +
INFO  16:45:58,039 - #10 2
INFO  16:45:58,039 - #28 ;
INFO  16:45:58,039 - #3 print
INFO  16:45:58,039 - #30 (
INFO  16:45:58,039 - #9 x
INFO  16:45:58,039 - #31 )
INFO  16:45:58,039 - #28 ;
INFO  16:45:58,039 - #37 return
INFO  16:45:58,039 - #10 1
INFO  16:45:58,040 - #28 ;
INFO  16:45:58,040 - #22 }
INFO  16:45:58,040 - #22 }
INFO  16:45:58,040 - 
================SINTAKSNO STABLO====================

INFO  16:45:58,041 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      NoVarDecl(
      ) [NoVarDecl]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             x
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         int
        ) [Type]
        VarDecl_0(
          Variable(
           y
          ) [Variable]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                Addop(
                ) [Addop]
                TermExpr(
                  FactorTerm(
                    ValFactor(
                      NumConst(
                       2
                      ) [NumConst]
                    ) [ValFactor]
                  ) [FactorTerm]
                ) [TermExpr]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         1
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   x
                  ) [Designator_1]
                  AddExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         88
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                    Addop(
                    ) [Addop]
                    TermExpr(
                      FactorTerm(
                        ValFactor(
                          NumConst(
                           2
                          ) [NumConst]
                        ) [ValFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                  ) [AddExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  16:45:58,054 - 
================SEMANTICKA OBRADA====================

INFO  16:45:58,057 - Deklarisana promenljiva x na liniji 2
INFO  16:45:58,057 - Deklarisana promenljiva y na liniji 2
INFO  16:45:58,057 - Obradjuje se funkcija k na liniji 6
INFO  16:45:58,057 - Deklarisana promenljiva c na liniji 6
INFO  16:45:58,057 - Obradjuje se funkcija main na liniji 11
INFO  16:45:58,058 - 
================GENERISANJE KODA====================

INFO  16:45:58,062 - Parsiranje uspesno zavrseno!
INFO  17:14:24,399 - Kompajliranje ulaznog fajla test\program.mj
INFO  17:14:24,431 - #2 program
INFO  17:14:24,431 - #9 MJProgram
INFO  17:14:24,431 - #9 int
INFO  17:14:24,432 - #9 x
INFO  17:14:24,433 - #28 ;
INFO  17:14:24,433 - #9 int
INFO  17:14:24,434 - #9 y
INFO  17:14:24,434 - #28 ;
INFO  17:14:24,434 - #21 {
INFO  17:14:24,434 - #9 int
INFO  17:14:24,434 - #9 k
INFO  17:14:24,434 - #30 (
INFO  17:14:24,435 - #31 )
INFO  17:14:24,435 - #9 int
INFO  17:14:24,436 - #9 c
INFO  17:14:24,436 - #28 ;
INFO  17:14:24,436 - #21 {
INFO  17:14:24,436 - #9 c
INFO  17:14:24,436 - #25 =
INFO  17:14:24,437 - #10 2
INFO  17:14:24,437 - #28 ;
INFO  17:14:24,438 - #37 return
INFO  17:14:24,438 - #9 c
INFO  17:14:24,438 - #14 +
INFO  17:14:24,438 - #10 2
INFO  17:14:24,439 - #28 ;
INFO  17:14:24,440 - #22 }
INFO  17:14:24,440 - #9 int
INFO  17:14:24,441 - #9 main
INFO  17:14:24,441 - #30 (
INFO  17:14:24,441 - #31 )
INFO  17:14:24,441 - #21 {
INFO  17:14:24,441 - #3 print
INFO  17:14:24,441 - #30 (
INFO  17:14:24,442 - #10 1
INFO  17:14:24,442 - #31 )
INFO  17:14:24,442 - #28 ;
INFO  17:14:24,442 - #9 x
INFO  17:14:24,442 - #25 =
INFO  17:14:24,442 - #10 88
INFO  17:14:24,442 - #14 +
INFO  17:14:24,442 - #10 2
INFO  17:14:24,442 - #28 ;
INFO  17:14:24,442 - #3 print
INFO  17:14:24,443 - #30 (
INFO  17:14:24,443 - #9 x
INFO  17:14:24,443 - #31 )
INFO  17:14:24,443 - #28 ;
INFO  17:14:24,443 - #37 return
INFO  17:14:24,443 - #10 1
INFO  17:14:24,443 - #28 ;
INFO  17:14:24,443 - #22 }
INFO  17:14:24,443 - #22 }
INFO  17:14:24,444 - 
================SINTAKSNO STABLO====================

INFO  17:14:24,445 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      NoVarDecl(
      ) [NoVarDecl]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             x
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         int
        ) [Type]
        VarDecl_0(
          Variable(
           y
          ) [Variable]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                Addop(
                ) [Addop]
                TermExpr(
                  FactorTerm(
                    ValFactor(
                      NumConst(
                       2
                      ) [NumConst]
                    ) [ValFactor]
                  ) [FactorTerm]
                ) [TermExpr]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         1
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   x
                  ) [Designator_1]
                  AddExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         88
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                    Addop(
                    ) [Addop]
                    TermExpr(
                      FactorTerm(
                        ValFactor(
                          NumConst(
                           2
                          ) [NumConst]
                        ) [ValFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                  ) [AddExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  17:14:24,456 - 
================SEMANTICKA OBRADA====================

INFO  17:14:24,460 - Deklarisana promenljiva x na liniji 2
INFO  17:14:24,460 - Deklarisana promenljiva y na liniji 2
INFO  17:14:24,460 - Obradjuje se funkcija k na liniji 6
INFO  17:14:24,460 - Deklarisana promenljiva c na liniji 6
INFO  17:14:24,460 - Obradjuje se funkcija main na liniji 11
INFO  17:14:24,461 - 
================GENERISANJE KODA====================

INFO  17:14:24,467 - Parsiranje uspesno zavrseno!
INFO  17:14:48,154 - Kompajliranje ulaznog fajla test\program.mj
INFO  17:14:48,186 - #2 program
INFO  17:14:48,186 - #9 MJProgram
INFO  17:14:48,186 - #9 int
INFO  17:14:48,187 - #9 x
INFO  17:14:48,187 - #28 ;
INFO  17:14:48,188 - #9 int
INFO  17:14:48,189 - #9 y
INFO  17:14:48,189 - #28 ;
INFO  17:14:48,189 - #21 {
INFO  17:14:48,189 - #9 int
INFO  17:14:48,190 - #9 k
INFO  17:14:48,190 - #30 (
INFO  17:14:48,190 - #31 )
INFO  17:14:48,191 - #9 int
INFO  17:14:48,191 - #9 c
INFO  17:14:48,191 - #28 ;
INFO  17:14:48,191 - #21 {
INFO  17:14:48,191 - #9 c
INFO  17:14:48,192 - #25 =
INFO  17:14:48,192 - #10 2
INFO  17:14:48,192 - #28 ;
INFO  17:14:48,192 - #37 return
INFO  17:14:48,193 - #9 c
INFO  17:14:48,193 - #14 +
INFO  17:14:48,193 - #10 2
INFO  17:14:48,193 - #28 ;
INFO  17:14:48,193 - #22 }
INFO  17:14:48,194 - #9 int
INFO  17:14:48,194 - #9 main
INFO  17:14:48,194 - #30 (
INFO  17:14:48,194 - #31 )
INFO  17:14:48,194 - #21 {
INFO  17:14:48,194 - #3 print
INFO  17:14:48,194 - #30 (
INFO  17:14:48,195 - #10 1
INFO  17:14:48,195 - #31 )
INFO  17:14:48,195 - #28 ;
INFO  17:14:48,195 - #9 x
INFO  17:14:48,195 - #25 =
INFO  17:14:48,195 - #10 88
INFO  17:14:48,195 - #14 +
INFO  17:14:48,195 - #10 9
INFO  17:14:48,195 - #28 ;
INFO  17:14:48,195 - #3 print
INFO  17:14:48,195 - #30 (
INFO  17:14:48,195 - #9 x
INFO  17:14:48,195 - #31 )
INFO  17:14:48,195 - #28 ;
INFO  17:14:48,195 - #37 return
INFO  17:14:48,196 - #10 1
INFO  17:14:48,196 - #28 ;
INFO  17:14:48,196 - #22 }
INFO  17:14:48,196 - #22 }
INFO  17:14:48,197 - 
================SINTAKSNO STABLO====================

INFO  17:14:48,198 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      NoVarDecl(
      ) [NoVarDecl]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             x
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         int
        ) [Type]
        VarDecl_0(
          Variable(
           y
          ) [Variable]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                Addop(
                ) [Addop]
                TermExpr(
                  FactorTerm(
                    ValFactor(
                      NumConst(
                       2
                      ) [NumConst]
                    ) [ValFactor]
                  ) [FactorTerm]
                ) [TermExpr]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         1
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   x
                  ) [Designator_1]
                  AddExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         88
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                    Addop(
                    ) [Addop]
                    TermExpr(
                      FactorTerm(
                        ValFactor(
                          NumConst(
                           9
                          ) [NumConst]
                        ) [ValFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                  ) [AddExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  17:14:48,209 - 
================SEMANTICKA OBRADA====================

INFO  17:14:48,212 - Deklarisana promenljiva x na liniji 2
INFO  17:14:48,212 - Deklarisana promenljiva y na liniji 2
INFO  17:14:48,212 - Obradjuje se funkcija k na liniji 6
INFO  17:14:48,213 - Deklarisana promenljiva c na liniji 6
INFO  17:14:48,213 - Obradjuje se funkcija main na liniji 11
INFO  17:14:48,214 - 
================GENERISANJE KODA====================

INFO  17:14:48,219 - Parsiranje uspesno zavrseno!
INFO  17:15:55,483 - Kompajliranje ulaznog fajla test\program.mj
INFO  17:15:55,520 - #2 program
INFO  17:15:55,520 - #9 MJProgram
INFO  17:15:55,520 - #9 int
INFO  17:15:55,521 - #9 x
INFO  17:15:55,521 - #28 ;
INFO  17:15:55,521 - #9 int
INFO  17:15:55,522 - #9 y
INFO  17:15:55,522 - #28 ;
INFO  17:15:55,522 - #21 {
INFO  17:15:55,522 - #9 int
INFO  17:15:55,523 - #9 k
INFO  17:15:55,523 - #30 (
INFO  17:15:55,524 - #31 )
INFO  17:15:55,524 - #9 int
INFO  17:15:55,524 - #9 c
INFO  17:15:55,524 - #28 ;
INFO  17:15:55,524 - #21 {
INFO  17:15:55,524 - #9 c
INFO  17:15:55,525 - #25 =
INFO  17:15:55,525 - #10 2
INFO  17:15:55,525 - #28 ;
INFO  17:15:55,526 - #37 return
INFO  17:15:55,526 - #9 c
INFO  17:15:55,526 - #14 +
INFO  17:15:55,526 - #10 2
INFO  17:15:55,527 - #28 ;
INFO  17:15:55,527 - #22 }
INFO  17:15:55,528 - #9 int
INFO  17:15:55,528 - #9 main
INFO  17:15:55,529 - #30 (
INFO  17:15:55,529 - #31 )
INFO  17:15:55,529 - #21 {
INFO  17:15:55,529 - #3 print
INFO  17:15:55,529 - #30 (
INFO  17:15:55,529 - #10 1
INFO  17:15:55,529 - #31 )
INFO  17:15:55,529 - #28 ;
INFO  17:15:55,529 - #9 x
INFO  17:15:55,529 - #25 =
INFO  17:15:55,529 - #10 88
INFO  17:15:55,530 - #14 +
INFO  17:15:55,530 - #10 9
INFO  17:15:55,530 - #28 ;
INFO  17:15:55,530 - #3 print
INFO  17:15:55,530 - #30 (
INFO  17:15:55,530 - #9 x
INFO  17:15:55,530 - #31 )
INFO  17:15:55,530 - #28 ;
INFO  17:15:55,530 - #37 return
INFO  17:15:55,530 - #10 1
INFO  17:15:55,530 - #28 ;
INFO  17:15:55,531 - #22 }
INFO  17:15:55,531 - #22 }
INFO  17:15:55,532 - 
================SINTAKSNO STABLO====================

INFO  17:15:55,533 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      NoVarDecl(
      ) [NoVarDecl]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             x
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         int
        ) [Type]
        VarDecl_0(
          Variable(
           y
          ) [Variable]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                Addop(
                ) [Addop]
                TermExpr(
                  FactorTerm(
                    ValFactor(
                      NumConst(
                       2
                      ) [NumConst]
                    ) [ValFactor]
                  ) [FactorTerm]
                ) [TermExpr]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         1
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   x
                  ) [Designator_1]
                  AddExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         88
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                    Addop(
                    ) [Addop]
                    TermExpr(
                      FactorTerm(
                        ValFactor(
                          NumConst(
                           9
                          ) [NumConst]
                        ) [ValFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                  ) [AddExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  17:15:55,547 - 
================SEMANTICKA OBRADA====================

INFO  17:15:55,552 - Deklarisana promenljiva x na liniji 2
INFO  17:15:55,552 - Deklarisana promenljiva y na liniji 2
INFO  17:15:55,552 - Obradjuje se funkcija k na liniji 6
INFO  17:15:55,552 - Deklarisana promenljiva c na liniji 6
INFO  17:15:55,553 - Obradjuje se funkcija main na liniji 11
INFO  17:15:55,554 - 
================GENERISANJE KODA====================

INFO  17:15:55,558 - Parsiranje uspesno zavrseno!
INFO  17:45:56,862 - Kompajliranje ulaznog fajla test\program.mj
INFO  17:45:56,895 - #2 program
INFO  17:45:56,895 - #9 MJProgram
INFO  17:45:56,895 - #9 int
INFO  17:45:56,896 - #9 x
INFO  17:45:56,897 - #28 ;
INFO  17:45:56,897 - #9 int
INFO  17:45:56,898 - #9 y
INFO  17:45:56,898 - #28 ;
INFO  17:45:56,898 - #21 {
INFO  17:45:56,898 - #9 int
INFO  17:45:56,898 - #9 k
INFO  17:45:56,898 - #30 (
INFO  17:45:56,899 - #31 )
INFO  17:45:56,899 - #9 int
INFO  17:45:56,900 - #9 c
INFO  17:45:56,900 - #28 ;
INFO  17:45:56,900 - #21 {
INFO  17:45:56,900 - #9 c
INFO  17:45:56,900 - #25 =
INFO  17:45:56,900 - #10 2
INFO  17:45:56,900 - #28 ;
INFO  17:45:56,901 - #37 return
INFO  17:45:56,901 - #9 c
INFO  17:45:56,901 - #14 +
INFO  17:45:56,901 - #10 2
INFO  17:45:56,902 - #28 ;
INFO  17:45:56,903 - #22 }
INFO  17:45:56,903 - #9 int
INFO  17:45:56,904 - #9 main
INFO  17:45:56,904 - #30 (
INFO  17:45:56,904 - #31 )
INFO  17:45:56,904 - #21 {
INFO  17:45:56,904 - #3 print
INFO  17:45:56,904 - #30 (
INFO  17:45:56,904 - #10 1
INFO  17:45:56,904 - #31 )
INFO  17:45:56,904 - #28 ;
INFO  17:45:56,904 - #9 x
INFO  17:45:56,904 - #25 =
INFO  17:45:56,904 - #10 88
INFO  17:45:56,904 - #14 +
INFO  17:45:56,904 - #10 9
INFO  17:45:56,905 - #28 ;
INFO  17:45:56,905 - #3 print
INFO  17:45:56,905 - #30 (
INFO  17:45:56,905 - #9 x
INFO  17:45:56,905 - #31 )
INFO  17:45:56,905 - #28 ;
INFO  17:45:56,905 - #37 return
INFO  17:45:56,905 - #10 1
INFO  17:45:56,905 - #28 ;
INFO  17:45:56,905 - #22 }
INFO  17:45:56,905 - #22 }
INFO  17:45:56,906 - 
================SINTAKSNO STABLO====================

INFO  17:45:56,907 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      NoVarDecl(
      ) [NoVarDecl]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             x
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         int
        ) [Type]
        VarDecl_0(
          Variable(
           y
          ) [Variable]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         1
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   x
                  ) [Designator_1]
                  AddExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         88
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                    MoreTermSingle(
                      MoreTermPart(
                        Addop(
                        ) [Addop]
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             9
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [MoreTermPart]
                    ) [MoreTermSingle]
                  ) [AddExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  17:45:56,918 - 
================SEMANTICKA OBRADA====================

INFO  17:45:56,922 - Deklarisana promenljiva x na liniji 2
INFO  17:45:56,922 - Deklarisana promenljiva y na liniji 2
INFO  17:45:56,922 - Obradjuje se funkcija k na liniji 6
INFO  17:45:56,922 - Deklarisana promenljiva c na liniji 6
INFO  17:45:56,922 - Obradjuje se funkcija main na liniji 11
INFO  17:45:56,922 - 
================GENERISANJE KODA====================

INFO  17:45:56,928 - Parsiranje uspesno zavrseno!
INFO  18:17:48,696 - Kompajliranje ulaznog fajla test\program.mj
INFO  18:17:48,729 - #2 program
INFO  18:17:48,730 - #9 MJProgram
INFO  18:17:48,730 - #9 int
INFO  18:17:48,731 - #9 x
INFO  18:17:48,731 - #28 ;
INFO  18:17:48,731 - #9 int
INFO  18:17:48,732 - #9 y
INFO  18:17:48,732 - #28 ;
INFO  18:17:48,732 - #21 {
INFO  18:17:48,732 - #9 int
INFO  18:17:48,733 - #9 k
INFO  18:17:48,733 - #30 (
INFO  18:17:48,733 - #31 )
INFO  18:17:48,734 - #9 int
INFO  18:17:48,734 - #9 c
INFO  18:17:48,734 - #28 ;
INFO  18:17:48,734 - #21 {
INFO  18:17:48,734 - #9 c
INFO  18:17:48,735 - #25 =
INFO  18:17:48,735 - #10 2
INFO  18:17:48,735 - #28 ;
INFO  18:17:48,736 - #37 return
INFO  18:17:48,736 - #9 c
INFO  18:17:48,736 - #14 +
INFO  18:17:48,736 - #10 2
INFO  18:17:48,737 - #28 ;
INFO  18:17:48,737 - #22 }
INFO  18:17:48,737 - #9 int
INFO  18:17:48,738 - #9 main
INFO  18:17:48,738 - #30 (
INFO  18:17:48,738 - #31 )
INFO  18:17:48,738 - #21 {
INFO  18:17:48,738 - #3 print
INFO  18:17:48,738 - #30 (
INFO  18:17:48,738 - #10 1
INFO  18:17:48,738 - #31 )
INFO  18:17:48,738 - #28 ;
INFO  18:17:48,739 - #9 x
INFO  18:17:48,739 - #25 =
INFO  18:17:48,739 - #10 88
INFO  18:17:48,739 - #14 +
INFO  18:17:48,739 - #10 9
INFO  18:17:48,739 - #28 ;
INFO  18:17:48,739 - #3 print
INFO  18:17:48,739 - #30 (
INFO  18:17:48,739 - #9 x
INFO  18:17:48,739 - #31 )
INFO  18:17:48,739 - #28 ;
INFO  18:17:48,739 - #37 return
INFO  18:17:48,739 - #10 1
INFO  18:17:48,739 - #28 ;
INFO  18:17:48,740 - #22 }
INFO  18:17:48,740 - #22 }
INFO  18:17:48,740 - 
================SINTAKSNO STABLO====================

INFO  18:17:48,741 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      NoVarDecl(
      ) [NoVarDecl]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             x
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         int
        ) [Type]
        VarDecl_0(
          Variable(
           y
          ) [Variable]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         1
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   x
                  ) [Designator_1]
                  AddExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         88
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                    MoreTermSingle(
                      MoreTermPart(
                        Addop(
                        ) [Addop]
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             9
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [MoreTermPart]
                    ) [MoreTermSingle]
                  ) [AddExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  18:17:48,753 - 
================SEMANTICKA OBRADA====================

INFO  18:17:48,756 - Deklarisana promenljiva x na liniji 2
INFO  18:17:48,756 - Deklarisana promenljiva y na liniji 2
INFO  18:17:48,756 - Obradjuje se funkcija k na liniji 6
INFO  18:17:48,756 - Deklarisana promenljiva c na liniji 6
INFO  18:17:48,757 - Obradjuje se funkcija main na liniji 11
INFO  18:17:48,758 - 
================GENERISANJE KODA====================

INFO  18:19:45,136 - Kompajliranje ulaznog fajla test\program.mj
INFO  18:19:45,176 - #2 program
INFO  18:19:45,176 - #9 MJProgram
INFO  18:19:45,177 - #9 int
INFO  18:19:45,178 - #9 x
INFO  18:19:45,178 - #28 ;
INFO  18:19:45,178 - #9 int
INFO  18:19:45,179 - #9 y
INFO  18:19:45,179 - #28 ;
INFO  18:19:45,179 - #21 {
INFO  18:19:45,180 - #9 int
INFO  18:19:45,180 - #9 k
INFO  18:19:45,180 - #30 (
INFO  18:19:45,181 - #31 )
INFO  18:19:45,181 - #9 int
INFO  18:19:45,181 - #9 c
INFO  18:19:45,181 - #28 ;
INFO  18:19:45,181 - #21 {
INFO  18:19:45,182 - #9 c
INFO  18:19:45,182 - #25 =
INFO  18:19:45,182 - #10 2
INFO  18:19:45,182 - #28 ;
INFO  18:19:45,183 - #37 return
INFO  18:19:45,183 - #9 c
INFO  18:19:45,183 - #14 +
INFO  18:19:45,183 - #10 2
INFO  18:19:45,184 - #28 ;
INFO  18:19:45,185 - #22 }
INFO  18:19:45,185 - #9 int
INFO  18:19:45,186 - #9 main
INFO  18:19:45,186 - #30 (
INFO  18:19:45,186 - #31 )
INFO  18:19:45,186 - #21 {
INFO  18:19:45,186 - #3 print
INFO  18:19:45,186 - #30 (
INFO  18:19:45,187 - #10 1
INFO  18:19:45,187 - #31 )
INFO  18:19:45,187 - #28 ;
INFO  18:19:45,187 - #9 x
INFO  18:19:45,187 - #25 =
INFO  18:19:45,187 - #10 88
INFO  18:19:45,187 - #14 +
INFO  18:19:45,187 - #10 9
INFO  18:19:45,187 - #28 ;
INFO  18:19:45,187 - #3 print
INFO  18:19:45,187 - #30 (
INFO  18:19:45,187 - #9 x
INFO  18:19:45,187 - #31 )
INFO  18:19:45,187 - #28 ;
INFO  18:19:45,188 - #37 return
INFO  18:19:45,188 - #10 1
INFO  18:19:45,188 - #28 ;
INFO  18:19:45,188 - #22 }
INFO  18:19:45,188 - #22 }
INFO  18:19:45,189 - 
================SINTAKSNO STABLO====================

INFO  18:19:45,190 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      NoVarDecl(
      ) [NoVarDecl]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             x
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         int
        ) [Type]
        VarDecl_0(
          Variable(
           y
          ) [Variable]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         1
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   x
                  ) [Designator_1]
                  AddExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         88
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                    MoreTermSingle(
                      MoreTermPart(
                        Addop(
                        ) [Addop]
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             9
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [MoreTermPart]
                    ) [MoreTermSingle]
                  ) [AddExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  18:19:45,201 - 
================SEMANTICKA OBRADA====================

INFO  18:19:45,205 - Deklarisana promenljiva x na liniji 2
INFO  18:19:45,205 - Deklarisana promenljiva y na liniji 2
INFO  18:19:45,205 - Obradjuje se funkcija k na liniji 6
INFO  18:19:45,205 - Deklarisana promenljiva c na liniji 6
INFO  18:19:45,205 - Obradjuje se funkcija main na liniji 11
INFO  18:19:45,206 - 
================GENERISANJE KODA====================

INFO  18:19:45,210 - Parsiranje uspesno zavrseno!
INFO  18:24:03,286 - Kompajliranje ulaznog fajla test\program.mj
INFO  18:24:03,318 - #2 program
INFO  18:24:03,318 - #9 MJProgram
INFO  18:24:03,318 - #9 int
INFO  18:24:03,319 - #9 x
INFO  18:24:03,320 - #28 ;
INFO  18:24:03,320 - #9 int
INFO  18:24:03,321 - #9 y
INFO  18:24:03,321 - #28 ;
INFO  18:24:03,321 - #21 {
INFO  18:24:03,321 - #9 int
INFO  18:24:03,321 - #9 k
INFO  18:24:03,321 - #30 (
INFO  18:24:03,322 - #31 )
INFO  18:24:03,322 - #9 int
INFO  18:24:03,322 - #9 c
INFO  18:24:03,323 - #28 ;
INFO  18:24:03,323 - #21 {
INFO  18:24:03,323 - #9 c
INFO  18:24:03,323 - #25 =
INFO  18:24:03,323 - #10 2
INFO  18:24:03,323 - #28 ;
INFO  18:24:03,324 - #37 return
INFO  18:24:03,324 - #9 c
INFO  18:24:03,324 - #14 +
INFO  18:24:03,325 - #10 2
INFO  18:24:03,325 - #28 ;
INFO  18:24:03,326 - #22 }
INFO  18:24:03,326 - #9 int
INFO  18:24:03,327 - #9 main
INFO  18:24:03,327 - #30 (
INFO  18:24:03,327 - #31 )
INFO  18:24:03,327 - #21 {
INFO  18:24:03,327 - #3 print
INFO  18:24:03,327 - #30 (
INFO  18:24:03,327 - #10 1
INFO  18:24:03,327 - #31 )
INFO  18:24:03,327 - #28 ;
INFO  18:24:03,327 - #9 x
INFO  18:24:03,327 - #25 =
INFO  18:24:03,327 - #10 88
INFO  18:24:03,327 - #14 +
INFO  18:24:03,327 - #10 9
INFO  18:24:03,328 - #28 ;
INFO  18:24:03,328 - #3 print
INFO  18:24:03,328 - #30 (
INFO  18:24:03,328 - #9 x
INFO  18:24:03,328 - #31 )
INFO  18:24:03,328 - #28 ;
INFO  18:24:03,328 - #37 return
INFO  18:24:03,328 - #10 1
INFO  18:24:03,328 - #28 ;
INFO  18:24:03,328 - #22 }
INFO  18:24:03,328 - #22 }
INFO  18:24:03,329 - 
================SINTAKSNO STABLO====================

INFO  18:24:03,330 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      NoVarDecl(
      ) [NoVarDecl]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             x
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         int
        ) [Type]
        VarDecl_0(
          Variable(
           y
          ) [Variable]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         1
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   x
                  ) [Designator_1]
                  AddExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         88
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                    MoreTermSingle(
                      MoreTermPart(
                        Addop(
                        ) [Addop]
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             9
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [MoreTermPart]
                    ) [MoreTermSingle]
                  ) [AddExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  18:24:03,340 - 
================SEMANTICKA OBRADA====================

INFO  18:24:03,344 - Deklarisana promenljiva x na liniji 2
INFO  18:24:03,344 - Deklarisana promenljiva y na liniji 2
INFO  18:24:03,344 - Obradjuje se funkcija k na liniji 6
INFO  18:24:03,344 - Deklarisana promenljiva c na liniji 6
INFO  18:24:03,344 - Obradjuje se funkcija main na liniji 11
INFO  18:24:03,345 - 
================GENERISANJE KODA====================

INFO  18:24:03,350 - Parsiranje uspesno zavrseno!
INFO  18:24:34,336 - Kompajliranje ulaznog fajla test\program.mj
INFO  18:24:34,376 - #2 program
INFO  18:24:34,376 - #9 MJProgram
INFO  18:24:34,376 - #9 int
INFO  18:24:34,378 - #9 x
INFO  18:24:34,378 - #28 ;
INFO  18:24:34,378 - #9 int
INFO  18:24:34,379 - #9 y
INFO  18:24:34,379 - #28 ;
INFO  18:24:34,379 - #21 {
INFO  18:24:34,379 - #9 int
INFO  18:24:34,380 - #9 k
INFO  18:24:34,380 - #30 (
INFO  18:24:34,381 - #31 )
INFO  18:24:34,381 - #9 int
INFO  18:24:34,381 - #9 c
INFO  18:24:34,382 - #28 ;
INFO  18:24:34,382 - #21 {
INFO  18:24:34,382 - #9 c
INFO  18:24:34,382 - #25 =
INFO  18:24:34,382 - #10 2
INFO  18:24:34,382 - #28 ;
INFO  18:24:34,383 - #37 return
INFO  18:24:34,383 - #9 c
INFO  18:24:34,383 - #14 +
INFO  18:24:34,383 - #10 2
INFO  18:24:34,384 - #28 ;
INFO  18:24:34,384 - #22 }
INFO  18:24:34,385 - #9 int
INFO  18:24:34,385 - #9 main
INFO  18:24:34,385 - #30 (
INFO  18:24:34,385 - #31 )
INFO  18:24:34,385 - #21 {
INFO  18:24:34,385 - #3 print
INFO  18:24:34,385 - #30 (
INFO  18:24:34,385 - #10 1
INFO  18:24:34,386 - #31 )
INFO  18:24:34,386 - #28 ;
INFO  18:24:34,386 - #9 x
INFO  18:24:34,386 - #25 =
INFO  18:24:34,386 - #10 88
INFO  18:24:34,386 - #15 -
INFO  18:24:34,386 - #10 9
INFO  18:24:34,386 - #28 ;
INFO  18:24:34,387 - #3 print
INFO  18:24:34,387 - #30 (
INFO  18:24:34,387 - #9 x
INFO  18:24:34,387 - #31 )
INFO  18:24:34,387 - #28 ;
INFO  18:24:34,387 - #37 return
INFO  18:24:34,387 - #10 1
INFO  18:24:34,387 - #28 ;
INFO  18:24:34,387 - #22 }
INFO  18:24:34,387 - #22 }
INFO  18:24:34,388 - 
================SINTAKSNO STABLO====================

INFO  18:24:34,389 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      NoVarDecl(
      ) [NoVarDecl]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             x
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         int
        ) [Type]
        VarDecl_0(
          Variable(
           y
          ) [Variable]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         1
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   x
                  ) [Designator_1]
                  AddExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         88
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                    MoreTermSingle(
                      MoreTermPart(
                        Subop(
                        ) [Subop]
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             9
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [MoreTermPart]
                    ) [MoreTermSingle]
                  ) [AddExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  18:24:34,401 - 
================SEMANTICKA OBRADA====================

INFO  18:24:34,405 - Deklarisana promenljiva x na liniji 2
INFO  18:24:34,405 - Deklarisana promenljiva y na liniji 2
INFO  18:24:34,406 - Obradjuje se funkcija k na liniji 6
INFO  18:24:34,406 - Deklarisana promenljiva c na liniji 6
INFO  18:24:34,406 - Obradjuje se funkcija main na liniji 11
INFO  18:24:34,408 - 
================GENERISANJE KODA====================

INFO  18:24:34,413 - Parsiranje uspesno zavrseno!
INFO  18:25:20,834 - Kompajliranje ulaznog fajla test\program.mj
INFO  18:25:20,868 - #2 program
INFO  18:25:20,868 - #9 MJProgram
INFO  18:25:20,868 - #9 int
INFO  18:25:20,869 - #9 x
INFO  18:25:20,869 - #28 ;
INFO  18:25:20,869 - #9 int
INFO  18:25:20,870 - #9 y
INFO  18:25:20,870 - #28 ;
INFO  18:25:20,870 - #21 {
INFO  18:25:20,870 - #9 int
INFO  18:25:20,871 - #9 k
INFO  18:25:20,871 - #30 (
INFO  18:25:20,871 - #31 )
INFO  18:25:20,872 - #9 int
INFO  18:25:20,872 - #9 c
INFO  18:25:20,872 - #28 ;
INFO  18:25:20,872 - #21 {
INFO  18:25:20,872 - #9 c
INFO  18:25:20,872 - #25 =
INFO  18:25:20,873 - #10 2
INFO  18:25:20,873 - #28 ;
INFO  18:25:20,873 - #37 return
INFO  18:25:20,873 - #9 c
INFO  18:25:20,873 - #14 +
INFO  18:25:20,873 - #10 2
INFO  18:25:20,874 - #28 ;
INFO  18:25:20,875 - #22 }
INFO  18:25:20,875 - #9 int
INFO  18:25:20,876 - #9 main
INFO  18:25:20,876 - #30 (
INFO  18:25:20,876 - #31 )
INFO  18:25:20,876 - #21 {
INFO  18:25:20,876 - #3 print
INFO  18:25:20,876 - #30 (
INFO  18:25:20,876 - #10 1
INFO  18:25:20,876 - #31 )
INFO  18:25:20,876 - #28 ;
INFO  18:25:20,876 - #9 x
INFO  18:25:20,876 - #25 =
INFO  18:25:20,876 - #10 88
INFO  18:25:20,876 - #15 -
INFO  18:25:20,877 - #10 9
INFO  18:25:20,877 - #28 ;
INFO  18:25:20,877 - #3 print
INFO  18:25:20,877 - #30 (
INFO  18:25:20,877 - #9 x
INFO  18:25:20,877 - #31 )
INFO  18:25:20,877 - #28 ;
INFO  18:25:20,877 - #37 return
INFO  18:25:20,877 - #10 1
INFO  18:25:20,877 - #28 ;
INFO  18:25:20,878 - #22 }
INFO  18:25:20,878 - #22 }
INFO  18:25:20,878 - 
================SINTAKSNO STABLO====================

INFO  18:25:20,879 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      NoVarDecl(
      ) [NoVarDecl]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             x
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         int
        ) [Type]
        VarDecl_0(
          Variable(
           y
          ) [Variable]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         1
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   x
                  ) [Designator_1]
                  AddExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         88
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                    MoreTermSingle(
                      MoreTermPart(
                        Subop(
                        ) [Subop]
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             9
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [MoreTermPart]
                    ) [MoreTermSingle]
                  ) [AddExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  18:25:20,890 - 
================SEMANTICKA OBRADA====================

INFO  18:25:20,893 - Deklarisana promenljiva x na liniji 2
INFO  18:25:20,893 - Deklarisana promenljiva y na liniji 2
INFO  18:25:20,894 - Obradjuje se funkcija k na liniji 6
INFO  18:25:20,894 - Deklarisana promenljiva c na liniji 6
INFO  18:25:20,894 - Obradjuje se funkcija main na liniji 11
INFO  18:25:20,895 - 
================GENERISANJE KODA====================

INFO  18:25:20,900 - Parsiranje uspesno zavrseno!
INFO  18:27:47,645 - Kompajliranje ulaznog fajla test\program.mj
INFO  18:27:47,681 - #2 program
INFO  18:27:47,681 - #9 MJProgram
INFO  18:27:47,681 - #9 int
INFO  18:27:47,682 - #9 x
INFO  18:27:47,683 - #28 ;
INFO  18:27:47,683 - #9 int
INFO  18:27:47,684 - #9 y
INFO  18:27:47,684 - #28 ;
INFO  18:27:47,684 - #21 {
INFO  18:27:47,684 - #9 int
INFO  18:27:47,685 - #9 k
INFO  18:27:47,685 - #30 (
INFO  18:27:47,686 - #31 )
INFO  18:27:47,687 - #9 int
INFO  18:27:47,687 - #9 c
INFO  18:27:47,687 - #28 ;
INFO  18:27:47,687 - #21 {
INFO  18:27:47,687 - #9 c
INFO  18:27:47,688 - #25 =
INFO  18:27:47,688 - #10 2
INFO  18:27:47,688 - #28 ;
INFO  18:27:47,688 - #37 return
INFO  18:27:47,689 - #9 c
INFO  18:27:47,689 - #14 +
INFO  18:27:47,689 - #10 2
INFO  18:27:47,689 - #28 ;
INFO  18:27:47,690 - #22 }
INFO  18:27:47,690 - #9 int
INFO  18:27:47,691 - #9 main
INFO  18:27:47,691 - #30 (
INFO  18:27:47,691 - #31 )
INFO  18:27:47,691 - #21 {
INFO  18:27:47,691 - #3 print
INFO  18:27:47,691 - #30 (
INFO  18:27:47,691 - #10 1
INFO  18:27:47,691 - #31 )
INFO  18:27:47,691 - #28 ;
INFO  18:27:47,691 - #9 x
INFO  18:27:47,691 - #25 =
INFO  18:27:47,692 - #10 88
INFO  18:27:47,692 - #15 -
INFO  18:27:47,692 - #10 9
INFO  18:27:47,692 - #28 ;
INFO  18:27:47,692 - #3 print
INFO  18:27:47,692 - #30 (
INFO  18:27:47,692 - #9 x
INFO  18:27:47,692 - #31 )
INFO  18:27:47,693 - #28 ;
INFO  18:27:47,693 - #37 return
INFO  18:27:47,693 - #10 1
INFO  18:27:47,693 - #28 ;
INFO  18:27:47,693 - #22 }
INFO  18:27:47,693 - #22 }
INFO  18:27:47,694 - 
================SINTAKSNO STABLO====================

INFO  18:27:47,695 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      NoVarDecl(
      ) [NoVarDecl]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             x
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         int
        ) [Type]
        VarDecl_0(
          Variable(
           y
          ) [Variable]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         1
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   x
                  ) [Designator_1]
                  AddExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         88
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                    MoreTermSingle(
                      MoreTermPart(
                        Subop(
                        ) [Subop]
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             9
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [MoreTermPart]
                    ) [MoreTermSingle]
                  ) [AddExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  18:27:47,706 - 
================SEMANTICKA OBRADA====================

INFO  18:27:47,709 - Deklarisana promenljiva x na liniji 2
INFO  18:27:47,709 - Deklarisana promenljiva y na liniji 2
INFO  18:27:47,709 - Obradjuje se funkcija k na liniji 6
INFO  18:27:47,709 - Deklarisana promenljiva c na liniji 6
INFO  18:27:47,709 - Obradjuje se funkcija main na liniji 11
INFO  18:27:47,710 - 
================GENERISANJE KODA====================

INFO  18:27:47,715 - Parsiranje uspesno zavrseno!
INFO  18:54:34,377 - Kompajliranje ulaznog fajla test\program.mj
INFO  18:54:34,413 - #2 program
INFO  18:54:34,413 - #9 MJProgram
INFO  18:54:34,413 - #9 int
INFO  18:54:34,414 - #9 x
INFO  18:54:34,414 - #28 ;
INFO  18:54:34,415 - #9 int
INFO  18:54:34,415 - #9 y
INFO  18:54:34,415 - #28 ;
INFO  18:54:34,415 - #21 {
INFO  18:54:34,415 - #9 int
INFO  18:54:34,416 - #9 k
INFO  18:54:34,416 - #30 (
INFO  18:54:34,416 - #31 )
INFO  18:54:34,417 - #9 int
INFO  18:54:34,417 - #9 c
INFO  18:54:34,417 - #28 ;
INFO  18:54:34,417 - #21 {
INFO  18:54:34,417 - #9 c
INFO  18:54:34,417 - #25 =
INFO  18:54:34,418 - #10 2
INFO  18:54:34,418 - #28 ;
INFO  18:54:34,418 - #37 return
INFO  18:54:34,418 - #9 c
INFO  18:54:34,418 - #14 +
INFO  18:54:34,419 - #10 2
INFO  18:54:34,419 - #28 ;
INFO  18:54:34,420 - #22 }
INFO  18:54:34,420 - #9 int
INFO  18:54:34,421 - #9 main
INFO  18:54:34,421 - #30 (
INFO  18:54:34,421 - #31 )
INFO  18:54:34,421 - #21 {
INFO  18:54:34,421 - #3 print
INFO  18:54:34,421 - #30 (
INFO  18:54:34,421 - #10 1
INFO  18:54:34,421 - #31 )
INFO  18:54:34,421 - #28 ;
INFO  18:54:34,421 - #9 x
INFO  18:54:34,421 - #25 =
INFO  18:54:34,421 - #10 88
INFO  18:54:34,421 - #15 -
INFO  18:54:34,422 - #10 9
INFO  18:54:34,422 - #28 ;
INFO  18:54:34,422 - #3 print
INFO  18:54:34,422 - #30 (
INFO  18:54:34,422 - #9 x
INFO  18:54:34,423 - #31 )
INFO  18:54:34,423 - #28 ;
INFO  18:54:34,423 - #37 return
INFO  18:54:34,423 - #10 1
INFO  18:54:34,423 - #28 ;
INFO  18:54:34,423 - #22 }
INFO  18:54:34,423 - #22 }
INFO  18:54:34,424 - 
================SINTAKSNO STABLO====================

INFO  18:54:34,425 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      NoVarDecl(
      ) [NoVarDecl]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             x
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         int
        ) [Type]
        VarDecl_0(
          Variable(
           y
          ) [Variable]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         1
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   x
                  ) [Designator_1]
                  AddExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         88
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                    MoreTermSingle(
                      MoreTermPart(
                        Subop(
                        ) [Subop]
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             9
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [MoreTermPart]
                    ) [MoreTermSingle]
                  ) [AddExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  18:54:34,436 - 
================SEMANTICKA OBRADA====================

INFO  18:54:34,439 - Deklarisana promenljiva x na liniji 2
INFO  18:54:34,440 - Deklarisana promenljiva y na liniji 2
INFO  18:54:34,440 - Obradjuje se funkcija k na liniji 6
INFO  18:54:34,440 - Deklarisana promenljiva c na liniji 6
INFO  18:54:34,440 - Obradjuje se funkcija main na liniji 11
INFO  18:54:34,441 - 
================GENERISANJE KODA====================

INFO  18:54:34,446 - Parsiranje uspesno zavrseno!
INFO  18:58:02,578 - Kompajliranje ulaznog fajla test\program.mj
INFO  18:58:02,614 - #2 program
INFO  18:58:02,614 - #9 MJProgram
INFO  18:58:02,614 - #9 int
INFO  18:58:02,615 - #9 x
INFO  18:58:02,616 - #28 ;
INFO  18:58:02,616 - #9 int
INFO  18:58:02,617 - #9 y
INFO  18:58:02,617 - #28 ;
INFO  18:58:02,617 - #21 {
INFO  18:58:02,617 - #9 int
INFO  18:58:02,617 - #9 k
INFO  18:58:02,617 - #30 (
INFO  18:58:02,618 - #31 )
INFO  18:58:02,618 - #9 int
INFO  18:58:02,618 - #9 c
INFO  18:58:02,618 - #28 ;
INFO  18:58:02,618 - #21 {
INFO  18:58:02,618 - #9 c
INFO  18:58:02,619 - #25 =
INFO  18:58:02,619 - #10 2
INFO  18:58:02,619 - #28 ;
INFO  18:58:02,619 - #37 return
INFO  18:58:02,620 - #9 c
INFO  18:58:02,620 - #14 +
INFO  18:58:02,620 - #10 2
INFO  18:58:02,620 - #28 ;
INFO  18:58:02,621 - #22 }
INFO  18:58:02,621 - #9 int
INFO  18:58:02,622 - #9 main
INFO  18:58:02,622 - #30 (
INFO  18:58:02,622 - #31 )
INFO  18:58:02,622 - #21 {
INFO  18:58:02,622 - #3 print
INFO  18:58:02,622 - #30 (
INFO  18:58:02,622 - #10 1
INFO  18:58:02,622 - #31 )
INFO  18:58:02,622 - #28 ;
INFO  18:58:02,623 - #9 x
INFO  18:58:02,623 - #25 =
INFO  18:58:02,623 - #10 88
INFO  18:58:02,623 - #15 -
INFO  18:58:02,623 - #10 9
INFO  18:58:02,624 - #28 ;
INFO  18:58:02,624 - #3 print
INFO  18:58:02,624 - #30 (
INFO  18:58:02,624 - #9 x
INFO  18:58:02,624 - #31 )
INFO  18:58:02,624 - #28 ;
INFO  18:58:02,624 - #37 return
INFO  18:58:02,624 - #10 1
INFO  18:58:02,624 - #28 ;
INFO  18:58:02,624 - #22 }
INFO  18:58:02,624 - #22 }
INFO  18:58:02,625 - 
================SINTAKSNO STABLO====================

INFO  18:58:02,627 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      NoVarDecl(
      ) [NoVarDecl]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             x
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         int
        ) [Type]
        VarDecl_0(
          Variable(
           y
          ) [Variable]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         1
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   x
                  ) [Designator_1]
                  AddExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         88
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                    MoreTermSingle(
                      MoreTermPart(
                        Subop(
                        ) [Subop]
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             9
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [MoreTermPart]
                    ) [MoreTermSingle]
                  ) [AddExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  18:58:02,637 - 
================SEMANTICKA OBRADA====================

INFO  18:58:02,640 - Deklarisana promenljiva x na liniji 2
INFO  18:58:02,640 - Deklarisana promenljiva y na liniji 2
INFO  18:58:02,641 - Obradjuje se funkcija k na liniji 6
INFO  18:58:02,641 - Deklarisana promenljiva c na liniji 6
INFO  18:58:02,641 - Obradjuje se funkcija main na liniji 11
INFO  18:58:02,642 - 
================GENERISANJE KODA====================

INFO  18:58:02,647 - Parsiranje uspesno zavrseno!
INFO  18:58:35,065 - Kompajliranje ulaznog fajla test\program.mj
INFO  18:58:35,098 - #2 program
INFO  18:58:35,098 - #9 MJProgram
INFO  18:58:35,098 - #9 int
INFO  18:58:35,099 - #9 x
INFO  18:58:35,100 - #28 ;
INFO  18:58:35,100 - #9 int
INFO  18:58:35,101 - #9 y
INFO  18:58:35,101 - #28 ;
INFO  18:58:35,101 - #21 {
INFO  18:58:35,101 - #9 int
INFO  18:58:35,101 - #9 k
INFO  18:58:35,101 - #30 (
INFO  18:58:35,102 - #31 )
INFO  18:58:35,102 - #9 int
INFO  18:58:35,103 - #9 c
INFO  18:58:35,103 - #28 ;
INFO  18:58:35,103 - #21 {
INFO  18:58:35,103 - #9 c
INFO  18:58:35,103 - #25 =
INFO  18:58:35,103 - #10 2
INFO  18:58:35,103 - #28 ;
INFO  18:58:35,104 - #37 return
INFO  18:58:35,104 - #9 c
INFO  18:58:35,104 - #14 +
INFO  18:58:35,104 - #10 2
INFO  18:58:35,105 - #28 ;
INFO  18:58:35,106 - #22 }
INFO  18:58:35,106 - #9 int
INFO  18:58:35,106 - #9 main
INFO  18:58:35,107 - #30 (
INFO  18:58:35,107 - #31 )
INFO  18:58:35,107 - #21 {
INFO  18:58:35,107 - #3 print
INFO  18:58:35,107 - #30 (
INFO  18:58:35,107 - #10 1
INFO  18:58:35,107 - #31 )
INFO  18:58:35,107 - #28 ;
INFO  18:58:35,107 - #9 x
INFO  18:58:35,107 - #25 =
INFO  18:58:35,107 - #10 88
INFO  18:58:35,107 - #15 -
INFO  18:58:35,107 - #10 9
INFO  18:58:35,108 - #28 ;
INFO  18:58:35,108 - #3 print
INFO  18:58:35,108 - #30 (
INFO  18:58:35,108 - #9 x
INFO  18:58:35,108 - #31 )
INFO  18:58:35,108 - #28 ;
INFO  18:58:35,109 - #37 return
INFO  18:58:35,109 - #10 1
INFO  18:58:35,109 - #28 ;
INFO  18:58:35,109 - #22 }
INFO  18:58:35,109 - #22 }
INFO  18:58:35,110 - 
================SINTAKSNO STABLO====================

INFO  18:58:35,110 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      NoVarDecl(
      ) [NoVarDecl]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             x
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         int
        ) [Type]
        VarDecl_0(
          Variable(
           y
          ) [Variable]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         1
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   x
                  ) [Designator_1]
                  AddExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         88
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                    MoreTermSingle(
                      MoreTermPart(
                        Subop(
                        ) [Subop]
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             9
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [MoreTermPart]
                    ) [MoreTermSingle]
                  ) [AddExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  18:58:35,122 - 
================SEMANTICKA OBRADA====================

INFO  18:58:35,125 - Deklarisana promenljiva x na liniji 2
INFO  18:58:35,125 - Deklarisana promenljiva y na liniji 2
INFO  18:58:35,125 - Obradjuje se funkcija k na liniji 6
INFO  18:58:35,125 - Deklarisana promenljiva c na liniji 6
INFO  18:58:35,126 - Obradjuje se funkcija main na liniji 11
INFO  18:58:35,126 - 
================GENERISANJE KODA====================

INFO  18:59:44,983 - Kompajliranje ulaznog fajla test\program.mj
INFO  18:59:45,018 - #2 program
INFO  18:59:45,018 - #9 MJProgram
INFO  18:59:45,018 - #9 int
INFO  18:59:45,019 - #9 x
INFO  18:59:45,019 - #28 ;
INFO  18:59:45,020 - #9 int
INFO  18:59:45,020 - #9 y
INFO  18:59:45,020 - #28 ;
INFO  18:59:45,020 - #21 {
INFO  18:59:45,020 - #9 int
INFO  18:59:45,021 - #9 k
INFO  18:59:45,021 - #30 (
INFO  18:59:45,021 - #31 )
INFO  18:59:45,022 - #9 int
INFO  18:59:45,022 - #9 c
INFO  18:59:45,022 - #28 ;
INFO  18:59:45,022 - #21 {
INFO  18:59:45,022 - #9 c
INFO  18:59:45,023 - #25 =
INFO  18:59:45,023 - #10 2
INFO  18:59:45,023 - #28 ;
INFO  18:59:45,023 - #37 return
INFO  18:59:45,024 - #9 c
INFO  18:59:45,024 - #14 +
INFO  18:59:45,024 - #10 2
INFO  18:59:45,024 - #28 ;
INFO  18:59:45,025 - #22 }
INFO  18:59:45,025 - #9 int
INFO  18:59:45,026 - #9 main
INFO  18:59:45,026 - #30 (
INFO  18:59:45,026 - #31 )
INFO  18:59:45,026 - #21 {
INFO  18:59:45,026 - #3 print
INFO  18:59:45,026 - #30 (
INFO  18:59:45,026 - #10 1
INFO  18:59:45,026 - #31 )
INFO  18:59:45,026 - #28 ;
INFO  18:59:45,026 - #9 x
INFO  18:59:45,027 - #25 =
INFO  18:59:45,027 - #10 88
INFO  18:59:45,027 - #15 -
INFO  18:59:45,027 - #10 9
INFO  18:59:45,027 - #28 ;
INFO  18:59:45,027 - #3 print
INFO  18:59:45,027 - #30 (
INFO  18:59:45,027 - #9 x
INFO  18:59:45,027 - #31 )
INFO  18:59:45,027 - #28 ;
INFO  18:59:45,028 - #37 return
INFO  18:59:45,028 - #10 1
INFO  18:59:45,028 - #28 ;
INFO  18:59:45,028 - #22 }
INFO  18:59:45,028 - #22 }
INFO  18:59:45,029 - 
================SINTAKSNO STABLO====================

INFO  18:59:45,030 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      NoVarDecl(
      ) [NoVarDecl]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             x
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         int
        ) [Type]
        VarDecl_0(
          Variable(
           y
          ) [Variable]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         1
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   x
                  ) [Designator_1]
                  AddExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         88
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                    MoreTermSingle(
                      MoreTermPart(
                        Subop(
                        ) [Subop]
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             9
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [MoreTermPart]
                    ) [MoreTermSingle]
                  ) [AddExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  18:59:45,040 - 
================SEMANTICKA OBRADA====================

INFO  18:59:45,044 - Deklarisana promenljiva x na liniji 2
INFO  18:59:45,044 - Deklarisana promenljiva y na liniji 2
INFO  18:59:45,044 - Obradjuje se funkcija k na liniji 6
INFO  18:59:45,044 - Deklarisana promenljiva c na liniji 6
INFO  18:59:45,044 - Obradjuje se funkcija main na liniji 11
INFO  18:59:45,045 - 
================GENERISANJE KODA====================

INFO  19:08:52,001 - Kompajliranje ulaznog fajla test\program.mj
INFO  19:08:52,034 - #2 program
INFO  19:08:52,034 - #9 MJProgram
INFO  19:08:52,035 - #9 int
INFO  19:08:52,035 - #9 x
INFO  19:08:52,036 - #28 ;
INFO  19:08:52,036 - #9 int
INFO  19:08:52,037 - #9 y
INFO  19:08:52,037 - #28 ;
INFO  19:08:52,037 - #21 {
INFO  19:08:52,037 - #9 int
INFO  19:08:52,037 - #9 k
INFO  19:08:52,038 - #30 (
INFO  19:08:52,038 - #31 )
INFO  19:08:52,039 - #9 int
INFO  19:08:52,039 - #9 c
INFO  19:08:52,039 - #28 ;
INFO  19:08:52,039 - #21 {
INFO  19:08:52,039 - #9 c
INFO  19:08:52,039 - #25 =
INFO  19:08:52,040 - #10 2
INFO  19:08:52,040 - #28 ;
INFO  19:08:52,040 - #37 return
INFO  19:08:52,041 - #9 c
INFO  19:08:52,041 - #14 +
INFO  19:08:52,041 - #10 2
INFO  19:08:52,041 - #28 ;
INFO  19:08:52,042 - #22 }
INFO  19:08:52,042 - #9 int
INFO  19:08:52,043 - #9 main
INFO  19:08:52,043 - #30 (
INFO  19:08:52,043 - #31 )
INFO  19:08:52,043 - #21 {
INFO  19:08:52,043 - #3 print
INFO  19:08:52,043 - #30 (
INFO  19:08:52,043 - #10 1
INFO  19:08:52,043 - #31 )
INFO  19:08:52,044 - #28 ;
INFO  19:08:52,044 - #9 x
INFO  19:08:52,044 - #25 =
INFO  19:08:52,044 - #10 88
INFO  19:08:52,044 - #15 -
INFO  19:08:52,044 - #10 9
INFO  19:08:52,044 - #28 ;
INFO  19:08:52,045 - #3 print
INFO  19:08:52,045 - #30 (
INFO  19:08:52,045 - #9 x
INFO  19:08:52,045 - #31 )
INFO  19:08:52,045 - #28 ;
INFO  19:08:52,045 - #37 return
INFO  19:08:52,045 - #10 1
INFO  19:08:52,045 - #28 ;
INFO  19:08:52,045 - #22 }
INFO  19:08:52,045 - #22 }
INFO  19:08:52,046 - 
================SINTAKSNO STABLO====================

INFO  19:08:52,047 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      NoVarDecl(
      ) [NoVarDecl]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             x
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         int
        ) [Type]
        VarDecl_0(
          Variable(
           y
          ) [Variable]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         1
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   x
                  ) [Designator_1]
                  AddExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         88
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                    MoreTermSingle(
                      MoreTermPart(
                        Subop(
                        ) [Subop]
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             9
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [MoreTermPart]
                    ) [MoreTermSingle]
                  ) [AddExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:08:52,057 - 
================SEMANTICKA OBRADA====================

INFO  19:08:52,061 - Deklarisana promenljiva x na liniji 2
INFO  19:08:52,061 - Deklarisana promenljiva y na liniji 2
INFO  19:08:52,061 - Obradjuje se funkcija k na liniji 6
INFO  19:08:52,061 - Deklarisana promenljiva c na liniji 6
INFO  19:08:52,061 - Obradjuje se funkcija main na liniji 11
INFO  19:08:52,062 - 
================GENERISANJE KODA====================

INFO  19:08:52,067 - Parsiranje uspesno zavrseno!
INFO  19:09:27,494 - Kompajliranje ulaznog fajla test\program.mj
INFO  19:09:27,527 - #2 program
INFO  19:09:27,527 - #9 MJProgram
INFO  19:09:27,527 - #9 int
INFO  19:09:27,528 - #9 x
INFO  19:09:27,528 - #28 ;
INFO  19:09:27,529 - #9 int
INFO  19:09:27,529 - #9 y
INFO  19:09:27,529 - #28 ;
INFO  19:09:27,530 - #21 {
INFO  19:09:27,530 - #9 int
INFO  19:09:27,530 - #9 k
INFO  19:09:27,530 - #30 (
INFO  19:09:27,531 - #31 )
INFO  19:09:27,531 - #9 int
INFO  19:09:27,531 - #9 c
INFO  19:09:27,531 - #28 ;
INFO  19:09:27,532 - #21 {
INFO  19:09:27,532 - #9 c
INFO  19:09:27,532 - #25 =
INFO  19:09:27,532 - #10 2
INFO  19:09:27,532 - #28 ;
INFO  19:09:27,533 - #37 return
INFO  19:09:27,533 - #9 c
INFO  19:09:27,534 - #14 +
INFO  19:09:27,534 - #10 2
INFO  19:09:27,534 - #28 ;
INFO  19:09:27,535 - #22 }
INFO  19:09:27,535 - #9 int
INFO  19:09:27,536 - #9 main
INFO  19:09:27,536 - #30 (
INFO  19:09:27,536 - #31 )
INFO  19:09:27,537 - #21 {
INFO  19:09:27,537 - #3 print
INFO  19:09:27,537 - #30 (
INFO  19:09:27,537 - #10 1
INFO  19:09:27,537 - #31 )
INFO  19:09:27,537 - #28 ;
INFO  19:09:27,537 - #9 x
INFO  19:09:27,537 - #25 =
INFO  19:09:27,537 - #10 88
INFO  19:09:27,537 - #15 -
INFO  19:09:27,537 - #10 9
INFO  19:09:27,538 - #28 ;
INFO  19:09:27,538 - #3 print
INFO  19:09:27,538 - #30 (
INFO  19:09:27,538 - #9 x
INFO  19:09:27,538 - #31 )
INFO  19:09:27,538 - #28 ;
INFO  19:09:27,538 - #37 return
INFO  19:09:27,538 - #10 1
INFO  19:09:27,538 - #28 ;
INFO  19:09:27,538 - #22 }
INFO  19:09:27,538 - #22 }
INFO  19:09:27,539 - 
================SINTAKSNO STABLO====================

INFO  19:09:27,540 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      NoVarDecl(
      ) [NoVarDecl]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             x
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         int
        ) [Type]
        VarDecl_0(
          Variable(
           y
          ) [Variable]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         1
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   x
                  ) [Designator_1]
                  AddExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         88
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                    MoreTermSingle(
                      MoreTermPart(
                        Subop(
                        ) [Subop]
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             9
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [MoreTermPart]
                    ) [MoreTermSingle]
                  ) [AddExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:09:27,551 - 
================SEMANTICKA OBRADA====================

INFO  19:09:27,555 - Deklarisana promenljiva x na liniji 2
INFO  19:09:27,555 - Deklarisana promenljiva y na liniji 2
INFO  19:09:27,555 - Obradjuje se funkcija k na liniji 6
INFO  19:09:27,555 - Deklarisana promenljiva c na liniji 6
INFO  19:09:27,555 - Obradjuje se funkcija main na liniji 11
INFO  19:09:27,556 - 
================GENERISANJE KODA====================

INFO  19:12:28,290 - Kompajliranje ulaznog fajla test\program.mj
INFO  19:12:28,324 - #2 program
INFO  19:12:28,324 - #9 MJProgram
INFO  19:12:28,324 - #9 int
INFO  19:12:28,325 - #9 x
INFO  19:12:28,326 - #28 ;
INFO  19:12:28,326 - #9 int
INFO  19:12:28,327 - #9 y
INFO  19:12:28,327 - #28 ;
INFO  19:12:28,327 - #5 const
INFO  19:12:28,327 - #9 int
INFO  19:12:28,327 - #9 s
INFO  19:12:28,327 - #25 =
INFO  19:12:28,327 - #10 6
INFO  19:12:28,327 - #28 ;
INFO  19:12:28,328 - #21 {
INFO  19:12:28,328 - #9 int
INFO  19:12:28,329 - #9 k
INFO  19:12:28,329 - #30 (
INFO  19:12:28,329 - #31 )
INFO  19:12:28,330 - #9 int
INFO  19:12:28,330 - #9 c
INFO  19:12:28,330 - #28 ;
INFO  19:12:28,330 - #21 {
INFO  19:12:28,330 - #9 c
INFO  19:12:28,331 - #25 =
INFO  19:12:28,331 - #10 2
INFO  19:12:28,331 - #28 ;
INFO  19:12:28,331 - #37 return
INFO  19:12:28,332 - #9 c
INFO  19:12:28,332 - #14 +
INFO  19:12:28,332 - #10 2
INFO  19:12:28,332 - #28 ;
INFO  19:12:28,333 - #22 }
INFO  19:12:28,333 - #9 int
INFO  19:12:28,334 - #9 main
INFO  19:12:28,334 - #30 (
INFO  19:12:28,334 - #31 )
INFO  19:12:28,334 - #21 {
INFO  19:12:28,334 - #3 print
INFO  19:12:28,334 - #30 (
INFO  19:12:28,334 - #10 1
INFO  19:12:28,334 - #31 )
INFO  19:12:28,334 - #28 ;
INFO  19:12:28,334 - #9 x
INFO  19:12:28,334 - #25 =
INFO  19:12:28,334 - #10 88
INFO  19:12:28,334 - #15 -
INFO  19:12:28,334 - #10 9
INFO  19:12:28,335 - #28 ;
INFO  19:12:28,335 - #3 print
INFO  19:12:28,335 - #30 (
INFO  19:12:28,335 - #9 x
INFO  19:12:28,335 - #31 )
INFO  19:12:28,335 - #28 ;
INFO  19:12:28,335 - #37 return
INFO  19:12:28,335 - #10 1
INFO  19:12:28,335 - #28 ;
INFO  19:12:28,336 - #22 }
INFO  19:12:28,336 - #22 }
INFO  19:12:28,336 - 
================SINTAKSNO STABLO====================

INFO  19:12:28,337 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        NoVarDecl(
        ) [NoVarDecl]
        ProgVar(
          VarDecl(
            Type(
             int
            ) [Type]
            VarDecl_0(
              Variable(
               x
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             y
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgConst(
      ConstDecl(
        Type(
         int
        ) [Type]
        ConstDecl_0(
          SingleConst(
           s
            NumConst(
             6
            ) [NumConst]
          ) [SingleConst]
        ) [ConstDecl_0]
      ) [ConstDecl]
    ) [ProgConst]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         1
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   x
                  ) [Designator_1]
                  AddExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         88
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                    MoreTermSingle(
                      MoreTermPart(
                        Subop(
                        ) [Subop]
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             9
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [MoreTermPart]
                    ) [MoreTermSingle]
                  ) [AddExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:12:28,348 - 
================SEMANTICKA OBRADA====================

INFO  19:12:28,352 - Deklarisana promenljiva x na liniji 2
INFO  19:12:28,352 - Deklarisana promenljiva y na liniji 2
INFO  19:12:28,352 - Deklarisana konstanta s sa vrednoscu 6 na liniji 3
INFO  19:12:28,352 - Obradjuje se funkcija k na liniji 6
INFO  19:12:28,352 - Deklarisana promenljiva c na liniji 6
INFO  19:12:28,352 - Obradjuje se funkcija main na liniji 11
INFO  19:12:28,353 - 
================GENERISANJE KODA====================

INFO  19:13:24,805 - Kompajliranje ulaznog fajla test\program.mj
INFO  19:13:24,840 - #2 program
INFO  19:13:24,840 - #9 MJProgram
INFO  19:13:24,841 - #9 int
INFO  19:13:24,842 - #9 x
INFO  19:13:24,842 - #28 ;
INFO  19:13:24,842 - #9 int
INFO  19:13:24,843 - #9 y
INFO  19:13:24,843 - #28 ;
INFO  19:13:24,843 - #5 const
INFO  19:13:24,843 - #9 int
INFO  19:13:24,843 - #9 s
INFO  19:13:24,843 - #25 =
INFO  19:13:24,843 - #10 6
INFO  19:13:24,843 - #28 ;
INFO  19:13:24,844 - #21 {
INFO  19:13:24,845 - #9 int
INFO  19:13:24,845 - #9 k
INFO  19:13:24,845 - #30 (
INFO  19:13:24,846 - #31 )
INFO  19:13:24,846 - #9 int
INFO  19:13:24,846 - #9 c
INFO  19:13:24,846 - #28 ;
INFO  19:13:24,846 - #21 {
INFO  19:13:24,847 - #9 c
INFO  19:13:24,847 - #25 =
INFO  19:13:24,847 - #10 2
INFO  19:13:24,847 - #28 ;
INFO  19:13:24,848 - #37 return
INFO  19:13:24,848 - #9 c
INFO  19:13:24,848 - #14 +
INFO  19:13:24,848 - #10 2
INFO  19:13:24,848 - #28 ;
INFO  19:13:24,849 - #22 }
INFO  19:13:24,849 - #9 int
INFO  19:13:24,850 - #9 main
INFO  19:13:24,850 - #30 (
INFO  19:13:24,850 - #31 )
INFO  19:13:24,850 - #21 {
INFO  19:13:24,850 - #3 print
INFO  19:13:24,850 - #30 (
INFO  19:13:24,850 - #10 1
INFO  19:13:24,850 - #31 )
INFO  19:13:24,850 - #28 ;
INFO  19:13:24,850 - #9 x
INFO  19:13:24,850 - #25 =
INFO  19:13:24,851 - #10 889
INFO  19:13:24,851 - #28 ;
INFO  19:13:24,851 - #3 print
INFO  19:13:24,851 - #30 (
INFO  19:13:24,851 - #9 x
INFO  19:13:24,851 - #31 )
INFO  19:13:24,851 - #28 ;
INFO  19:13:24,851 - #37 return
INFO  19:13:24,851 - #10 1
INFO  19:13:24,851 - #28 ;
INFO  19:13:24,851 - #22 }
INFO  19:13:24,851 - #22 }
INFO  19:13:24,852 - 
================SINTAKSNO STABLO====================

INFO  19:13:24,853 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        NoVarDecl(
        ) [NoVarDecl]
        ProgVar(
          VarDecl(
            Type(
             int
            ) [Type]
            VarDecl_0(
              Variable(
               x
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             y
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgConst(
      ConstDecl(
        Type(
         int
        ) [Type]
        ConstDecl_0(
          SingleConst(
           s
            NumConst(
             6
            ) [NumConst]
          ) [SingleConst]
        ) [ConstDecl_0]
      ) [ConstDecl]
    ) [ProgConst]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         1
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   x
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         889
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:13:24,864 - 
================SEMANTICKA OBRADA====================

INFO  19:13:24,868 - Deklarisana promenljiva x na liniji 2
INFO  19:13:24,868 - Deklarisana promenljiva y na liniji 2
INFO  19:13:24,868 - Deklarisana konstanta s sa vrednoscu 6 na liniji 3
INFO  19:13:24,868 - Obradjuje se funkcija k na liniji 6
INFO  19:13:24,868 - Deklarisana promenljiva c na liniji 6
INFO  19:13:24,868 - Obradjuje se funkcija main na liniji 11
INFO  19:13:24,869 - 
================GENERISANJE KODA====================

INFO  19:22:09,374 - Kompajliranje ulaznog fajla test\program.mj
INFO  19:22:09,407 - #2 program
INFO  19:22:09,407 - #9 MJProgram
INFO  19:22:09,407 - #9 int
INFO  19:22:09,409 - #9 x
INFO  19:22:09,409 - #28 ;
INFO  19:22:09,409 - #9 int
INFO  19:22:09,410 - #9 y
INFO  19:22:09,410 - #28 ;
INFO  19:22:09,410 - #5 const
INFO  19:22:09,410 - #9 int
INFO  19:22:09,410 - #9 s
INFO  19:22:09,410 - #25 =
INFO  19:22:09,410 - #10 6
INFO  19:22:09,410 - #28 ;
INFO  19:22:09,411 - #21 {
INFO  19:22:09,412 - #9 int
INFO  19:22:09,412 - #9 k
INFO  19:22:09,412 - #30 (
INFO  19:22:09,413 - #31 )
INFO  19:22:09,413 - #9 int
INFO  19:22:09,413 - #9 c
INFO  19:22:09,413 - #28 ;
INFO  19:22:09,413 - #21 {
INFO  19:22:09,414 - #9 c
INFO  19:22:09,414 - #25 =
INFO  19:22:09,414 - #10 2
INFO  19:22:09,414 - #28 ;
INFO  19:22:09,415 - #37 return
INFO  19:22:09,415 - #9 c
INFO  19:22:09,415 - #14 +
INFO  19:22:09,415 - #10 2
INFO  19:22:09,415 - #28 ;
INFO  19:22:09,416 - #22 }
INFO  19:22:09,416 - #9 int
INFO  19:22:09,417 - #9 main
INFO  19:22:09,417 - #30 (
INFO  19:22:09,417 - #31 )
INFO  19:22:09,417 - #21 {
INFO  19:22:09,417 - #3 print
INFO  19:22:09,417 - #30 (
INFO  19:22:09,417 - #10 1
INFO  19:22:09,417 - #31 )
INFO  19:22:09,417 - #28 ;
INFO  19:22:09,417 - #9 x
INFO  19:22:09,418 - #25 =
INFO  19:22:09,418 - #10 889
INFO  19:22:09,418 - #28 ;
INFO  19:22:09,418 - #3 print
INFO  19:22:09,418 - #30 (
INFO  19:22:09,418 - #9 x
INFO  19:22:09,418 - #31 )
INFO  19:22:09,418 - #28 ;
INFO  19:22:09,418 - #37 return
INFO  19:22:09,418 - #10 1
INFO  19:22:09,418 - #28 ;
INFO  19:22:09,418 - #22 }
INFO  19:22:09,419 - #22 }
INFO  19:22:09,419 - 
================SINTAKSNO STABLO====================

INFO  19:22:09,420 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        NoVarDecl(
        ) [NoVarDecl]
        ProgVar(
          VarDecl(
            Type(
             int
            ) [Type]
            VarDecl_0(
              Variable(
               x
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             y
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgConst(
      ConstDecl(
        Type(
         int
        ) [Type]
        ConstDecl_0(
          SingleConst(
           s
            NumConst(
             6
            ) [NumConst]
          ) [SingleConst]
        ) [ConstDecl_0]
      ) [ConstDecl]
    ) [ProgConst]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         1
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   x
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         889
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:22:09,432 - 
================SEMANTICKA OBRADA====================

INFO  19:22:09,435 - Deklarisana promenljiva x na liniji 2
INFO  19:22:09,436 - Deklarisana promenljiva y na liniji 2
INFO  19:22:09,436 - Deklarisana konstanta s sa vrednoscu 6 na liniji 3
INFO  19:22:09,436 - Obradjuje se funkcija k na liniji 6
INFO  19:22:09,436 - Deklarisana promenljiva c na liniji 6
INFO  19:22:09,436 - Obradjuje se funkcija main na liniji 11
INFO  19:22:09,437 - 
================GENERISANJE KODA====================

INFO  19:22:09,441 - Parsiranje uspesno zavrseno!
INFO  19:22:35,983 - Kompajliranje ulaznog fajla test\program.mj
INFO  19:22:36,017 - #2 program
INFO  19:22:36,017 - #9 MJProgram
INFO  19:22:36,017 - #9 int
INFO  19:22:36,018 - #9 x
INFO  19:22:36,019 - #28 ;
INFO  19:22:36,019 - #9 int
INFO  19:22:36,019 - #9 y
INFO  19:22:36,020 - #28 ;
INFO  19:22:36,020 - #5 const
INFO  19:22:36,020 - #9 int
INFO  19:22:36,020 - #9 s
INFO  19:22:36,020 - #25 =
INFO  19:22:36,020 - #10 6
INFO  19:22:36,020 - #28 ;
INFO  19:22:36,021 - #21 {
INFO  19:22:36,021 - #9 int
INFO  19:22:36,022 - #9 k
INFO  19:22:36,022 - #30 (
INFO  19:22:36,022 - #31 )
INFO  19:22:36,023 - #9 int
INFO  19:22:36,023 - #9 c
INFO  19:22:36,023 - #28 ;
INFO  19:22:36,023 - #21 {
INFO  19:22:36,023 - #9 c
INFO  19:22:36,023 - #25 =
INFO  19:22:36,024 - #10 2
INFO  19:22:36,024 - #28 ;
INFO  19:22:36,024 - #37 return
INFO  19:22:36,024 - #9 c
INFO  19:22:36,024 - #14 +
INFO  19:22:36,024 - #10 2
INFO  19:22:36,025 - #28 ;
INFO  19:22:36,025 - #22 }
INFO  19:22:36,026 - #9 int
INFO  19:22:36,026 - #9 main
INFO  19:22:36,026 - #30 (
INFO  19:22:36,026 - #31 )
INFO  19:22:36,026 - #21 {
INFO  19:22:36,026 - #3 print
INFO  19:22:36,026 - #30 (
INFO  19:22:36,027 - #10 1
INFO  19:22:36,027 - #31 )
INFO  19:22:36,027 - #28 ;
INFO  19:22:36,027 - #9 x
INFO  19:22:36,027 - #25 =
INFO  19:22:36,027 - #10 889
INFO  19:22:36,027 - #28 ;
INFO  19:22:36,027 - #3 print
INFO  19:22:36,027 - #30 (
INFO  19:22:36,027 - #9 x
INFO  19:22:36,027 - #31 )
INFO  19:22:36,027 - #28 ;
INFO  19:22:36,027 - #37 return
INFO  19:22:36,027 - #10 1
INFO  19:22:36,028 - #28 ;
INFO  19:22:36,028 - #22 }
INFO  19:22:36,028 - #22 }
INFO  19:22:36,029 - 
================SINTAKSNO STABLO====================

INFO  19:22:36,030 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        NoVarDecl(
        ) [NoVarDecl]
        ProgVar(
          VarDecl(
            Type(
             int
            ) [Type]
            VarDecl_0(
              Variable(
               x
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             y
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgConst(
      ConstDecl(
        Type(
         int
        ) [Type]
        ConstDecl_0(
          SingleConst(
           s
            NumConst(
             6
            ) [NumConst]
          ) [SingleConst]
        ) [ConstDecl_0]
      ) [ConstDecl]
    ) [ProgConst]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         1
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   x
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         889
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:22:36,040 - 
================SEMANTICKA OBRADA====================

INFO  19:22:36,043 - Deklarisana promenljiva x na liniji 2
INFO  19:22:36,043 - Deklarisana promenljiva y na liniji 2
INFO  19:22:36,043 - Deklarisana konstanta s sa vrednoscu 6 na liniji 3
INFO  19:22:36,043 - Obradjuje se funkcija k na liniji 6
INFO  19:22:36,044 - Deklarisana promenljiva c na liniji 6
INFO  19:22:36,044 - Obradjuje se funkcija main na liniji 11
INFO  19:22:36,045 - 
================GENERISANJE KODA====================

INFO  19:22:36,051 - Parsiranje uspesno zavrseno!
INFO  19:23:17,086 - Kompajliranje ulaznog fajla test\program.mj
INFO  19:23:17,119 - #2 program
INFO  19:23:17,120 - #9 MJProgram
INFO  19:23:17,120 - #9 int
INFO  19:23:17,121 - #9 x
INFO  19:23:17,121 - #28 ;
INFO  19:23:17,121 - #9 int
INFO  19:23:17,122 - #9 y
INFO  19:23:17,122 - #28 ;
INFO  19:23:17,122 - #5 const
INFO  19:23:17,122 - #9 int
INFO  19:23:17,122 - #9 s
INFO  19:23:17,123 - #25 =
INFO  19:23:17,123 - #10 6
INFO  19:23:17,123 - #28 ;
INFO  19:23:17,124 - #21 {
INFO  19:23:17,125 - #9 int
INFO  19:23:17,125 - #9 k
INFO  19:23:17,125 - #30 (
INFO  19:23:17,126 - #31 )
INFO  19:23:17,127 - #9 int
INFO  19:23:17,127 - #9 c
INFO  19:23:17,127 - #28 ;
INFO  19:23:17,127 - #21 {
INFO  19:23:17,127 - #9 c
INFO  19:23:17,128 - #25 =
INFO  19:23:17,128 - #10 2
INFO  19:23:17,128 - #28 ;
INFO  19:23:17,129 - #37 return
INFO  19:23:17,129 - #9 c
INFO  19:23:17,129 - #14 +
INFO  19:23:17,129 - #10 2
INFO  19:23:17,130 - #28 ;
INFO  19:23:17,130 - #22 }
INFO  19:23:17,130 - #9 int
INFO  19:23:17,131 - #9 main
INFO  19:23:17,131 - #30 (
INFO  19:23:17,131 - #31 )
INFO  19:23:17,131 - #21 {
INFO  19:23:17,131 - #3 print
INFO  19:23:17,131 - #30 (
INFO  19:23:17,131 - #10 1
INFO  19:23:17,131 - #31 )
INFO  19:23:17,131 - #28 ;
INFO  19:23:17,132 - #9 x
INFO  19:23:17,132 - #25 =
INFO  19:23:17,132 - #10 8
INFO  19:23:17,132 - #14 +
INFO  19:23:17,132 - #10 9
INFO  19:23:17,132 - #28 ;
INFO  19:23:17,132 - #3 print
INFO  19:23:17,132 - #30 (
INFO  19:23:17,132 - #9 x
INFO  19:23:17,132 - #31 )
INFO  19:23:17,132 - #28 ;
INFO  19:23:17,132 - #37 return
INFO  19:23:17,133 - #10 1
INFO  19:23:17,133 - #28 ;
INFO  19:23:17,133 - #22 }
INFO  19:23:17,133 - #22 }
INFO  19:23:17,133 - 
================SINTAKSNO STABLO====================

INFO  19:23:17,135 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        NoVarDecl(
        ) [NoVarDecl]
        ProgVar(
          VarDecl(
            Type(
             int
            ) [Type]
            VarDecl_0(
              Variable(
               x
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             y
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgConst(
      ConstDecl(
        Type(
         int
        ) [Type]
        ConstDecl_0(
          SingleConst(
           s
            NumConst(
             6
            ) [NumConst]
          ) [SingleConst]
        ) [ConstDecl_0]
      ) [ConstDecl]
    ) [ProgConst]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         1
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   x
                  ) [Designator_1]
                  AddExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         8
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                    MoreTermSingle(
                      MoreTermPart(
                        Addop(
                        ) [Addop]
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             9
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [MoreTermPart]
                    ) [MoreTermSingle]
                  ) [AddExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:23:17,145 - 
================SEMANTICKA OBRADA====================

INFO  19:23:17,148 - Deklarisana promenljiva x na liniji 2
INFO  19:23:17,149 - Deklarisana promenljiva y na liniji 2
INFO  19:23:17,149 - Deklarisana konstanta s sa vrednoscu 6 na liniji 3
INFO  19:23:17,149 - Obradjuje se funkcija k na liniji 6
INFO  19:23:17,149 - Deklarisana promenljiva c na liniji 6
INFO  19:23:17,149 - Obradjuje se funkcija main na liniji 11
INFO  19:23:17,150 - 
================GENERISANJE KODA====================

INFO  19:23:17,156 - Parsiranje uspesno zavrseno!
INFO  19:24:30,350 - Kompajliranje ulaznog fajla test\program.mj
INFO  19:24:30,383 - #2 program
INFO  19:24:30,384 - #9 MJProgram
INFO  19:24:30,384 - #9 int
INFO  19:24:30,384 - #9 x
INFO  19:24:30,385 - #28 ;
INFO  19:24:30,385 - #9 int
INFO  19:24:30,386 - #9 y
INFO  19:24:30,386 - #28 ;
INFO  19:24:30,386 - #5 const
INFO  19:24:30,386 - #9 int
INFO  19:24:30,386 - #9 s
INFO  19:24:30,386 - #25 =
INFO  19:24:30,386 - #10 6
INFO  19:24:30,386 - #28 ;
INFO  19:24:30,387 - #21 {
INFO  19:24:30,387 - #9 int
INFO  19:24:30,388 - #9 k
INFO  19:24:30,388 - #30 (
INFO  19:24:30,388 - #31 )
INFO  19:24:30,389 - #9 int
INFO  19:24:30,389 - #9 c
INFO  19:24:30,389 - #28 ;
INFO  19:24:30,389 - #21 {
INFO  19:24:30,389 - #9 c
INFO  19:24:30,390 - #25 =
INFO  19:24:30,390 - #10 2
INFO  19:24:30,390 - #28 ;
INFO  19:24:30,390 - #37 return
INFO  19:24:30,390 - #9 c
INFO  19:24:30,390 - #14 +
INFO  19:24:30,391 - #10 2
INFO  19:24:30,391 - #28 ;
INFO  19:24:30,392 - #22 }
INFO  19:24:30,392 - #9 int
INFO  19:24:30,392 - #9 main
INFO  19:24:30,393 - #30 (
INFO  19:24:30,393 - #31 )
INFO  19:24:30,393 - #21 {
INFO  19:24:30,393 - #3 print
INFO  19:24:30,393 - #30 (
INFO  19:24:30,393 - #10 1
INFO  19:24:30,393 - #31 )
INFO  19:24:30,393 - #28 ;
INFO  19:24:30,393 - #9 x
INFO  19:24:30,393 - #25 =
INFO  19:24:30,393 - #10 8
INFO  19:24:30,393 - #14 +
INFO  19:24:30,393 - #10 9
INFO  19:24:30,394 - #14 +
INFO  19:24:30,394 - #10 4
INFO  19:24:30,394 - #28 ;
INFO  19:24:30,394 - #3 print
INFO  19:24:30,394 - #30 (
INFO  19:24:30,394 - #9 x
INFO  19:24:30,394 - #31 )
INFO  19:24:30,394 - #28 ;
INFO  19:24:30,394 - #37 return
INFO  19:24:30,394 - #10 1
INFO  19:24:30,394 - #28 ;
INFO  19:24:30,394 - #22 }
INFO  19:24:30,394 - #22 }
INFO  19:24:30,395 - 
================SINTAKSNO STABLO====================

INFO  19:24:30,397 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        NoVarDecl(
        ) [NoVarDecl]
        ProgVar(
          VarDecl(
            Type(
             int
            ) [Type]
            VarDecl_0(
              Variable(
               x
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             y
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgConst(
      ConstDecl(
        Type(
         int
        ) [Type]
        ConstDecl_0(
          SingleConst(
           s
            NumConst(
             6
            ) [NumConst]
          ) [SingleConst]
        ) [ConstDecl_0]
      ) [ConstDecl]
    ) [ProgConst]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         1
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   x
                  ) [Designator_1]
                  AddExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         8
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                    MoreTermMulti(
                      MoreTermSingle(
                        MoreTermPart(
                          Addop(
                          ) [Addop]
                          FactorTerm(
                            ValFactor(
                              NumConst(
                               9
                              ) [NumConst]
                            ) [ValFactor]
                          ) [FactorTerm]
                        ) [MoreTermPart]
                      ) [MoreTermSingle]
                      MoreTermPart(
                        Addop(
                        ) [Addop]
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             4
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [MoreTermPart]
                    ) [MoreTermMulti]
                  ) [AddExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:24:30,408 - 
================SEMANTICKA OBRADA====================

INFO  19:24:30,411 - Deklarisana promenljiva x na liniji 2
INFO  19:24:30,411 - Deklarisana promenljiva y na liniji 2
INFO  19:24:30,411 - Deklarisana konstanta s sa vrednoscu 6 na liniji 3
INFO  19:24:30,411 - Obradjuje se funkcija k na liniji 6
INFO  19:24:30,411 - Deklarisana promenljiva c na liniji 6
INFO  19:24:30,412 - Obradjuje se funkcija main na liniji 11
INFO  19:24:30,412 - 
================GENERISANJE KODA====================

INFO  19:24:30,417 - Parsiranje uspesno zavrseno!
INFO  19:24:54,070 - Kompajliranje ulaznog fajla test\program.mj
INFO  19:24:54,106 - #2 program
INFO  19:24:54,106 - #9 MJProgram
INFO  19:24:54,106 - #9 int
INFO  19:24:54,107 - #9 x
INFO  19:24:54,108 - #28 ;
INFO  19:24:54,108 - #9 int
INFO  19:24:54,108 - #9 y
INFO  19:24:54,108 - #28 ;
INFO  19:24:54,109 - #5 const
INFO  19:24:54,109 - #9 int
INFO  19:24:54,109 - #9 s
INFO  19:24:54,109 - #25 =
INFO  19:24:54,109 - #10 6
INFO  19:24:54,109 - #28 ;
INFO  19:24:54,110 - #21 {
INFO  19:24:54,110 - #9 int
INFO  19:24:54,111 - #9 k
INFO  19:24:54,111 - #30 (
INFO  19:24:54,111 - #31 )
INFO  19:24:54,112 - #9 int
INFO  19:24:54,112 - #9 c
INFO  19:24:54,112 - #28 ;
INFO  19:24:54,112 - #21 {
INFO  19:24:54,112 - #9 c
INFO  19:24:54,112 - #25 =
INFO  19:24:54,113 - #10 2
INFO  19:24:54,113 - #28 ;
INFO  19:24:54,113 - #37 return
INFO  19:24:54,113 - #9 c
INFO  19:24:54,113 - #14 +
INFO  19:24:54,114 - #10 2
INFO  19:24:54,114 - #28 ;
INFO  19:24:54,115 - #22 }
INFO  19:24:54,115 - #9 int
INFO  19:24:54,116 - #9 main
INFO  19:24:54,116 - #30 (
INFO  19:24:54,116 - #31 )
INFO  19:24:54,116 - #21 {
INFO  19:24:54,116 - #3 print
INFO  19:24:54,116 - #30 (
INFO  19:24:54,116 - #10 1
INFO  19:24:54,116 - #31 )
INFO  19:24:54,116 - #28 ;
INFO  19:24:54,116 - #9 x
INFO  19:24:54,116 - #25 =
INFO  19:24:54,116 - #10 8
INFO  19:24:54,117 - #14 +
INFO  19:24:54,117 - #10 9
INFO  19:24:54,117 - #15 -
INFO  19:24:54,117 - #10 4
INFO  19:24:54,117 - #28 ;
INFO  19:24:54,117 - #3 print
INFO  19:24:54,118 - #30 (
INFO  19:24:54,118 - #9 x
INFO  19:24:54,118 - #31 )
INFO  19:24:54,118 - #28 ;
INFO  19:24:54,118 - #37 return
INFO  19:24:54,118 - #10 1
INFO  19:24:54,118 - #28 ;
INFO  19:24:54,118 - #22 }
INFO  19:24:54,118 - #22 }
INFO  19:24:54,119 - 
================SINTAKSNO STABLO====================

INFO  19:24:54,120 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        NoVarDecl(
        ) [NoVarDecl]
        ProgVar(
          VarDecl(
            Type(
             int
            ) [Type]
            VarDecl_0(
              Variable(
               x
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             y
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgConst(
      ConstDecl(
        Type(
         int
        ) [Type]
        ConstDecl_0(
          SingleConst(
           s
            NumConst(
             6
            ) [NumConst]
          ) [SingleConst]
        ) [ConstDecl_0]
      ) [ConstDecl]
    ) [ProgConst]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         1
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   x
                  ) [Designator_1]
                  AddExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         8
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                    MoreTermMulti(
                      MoreTermSingle(
                        MoreTermPart(
                          Addop(
                          ) [Addop]
                          FactorTerm(
                            ValFactor(
                              NumConst(
                               9
                              ) [NumConst]
                            ) [ValFactor]
                          ) [FactorTerm]
                        ) [MoreTermPart]
                      ) [MoreTermSingle]
                      MoreTermPart(
                        Subop(
                        ) [Subop]
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             4
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [MoreTermPart]
                    ) [MoreTermMulti]
                  ) [AddExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:24:54,130 - 
================SEMANTICKA OBRADA====================

INFO  19:24:54,134 - Deklarisana promenljiva x na liniji 2
INFO  19:24:54,134 - Deklarisana promenljiva y na liniji 2
INFO  19:24:54,134 - Deklarisana konstanta s sa vrednoscu 6 na liniji 3
INFO  19:24:54,134 - Obradjuje se funkcija k na liniji 6
INFO  19:24:54,134 - Deklarisana promenljiva c na liniji 6
INFO  19:24:54,134 - Obradjuje se funkcija main na liniji 11
INFO  19:24:54,135 - 
================GENERISANJE KODA====================

INFO  19:24:54,140 - Parsiranje uspesno zavrseno!
INFO  19:27:22,510 - Kompajliranje ulaznog fajla test\program.mj
INFO  19:27:22,547 - #2 program
INFO  19:27:22,547 - #9 MJProgram
INFO  19:27:22,547 - #9 int
INFO  19:27:22,548 - #9 x
INFO  19:27:22,548 - #28 ;
INFO  19:27:22,549 - #9 int
INFO  19:27:22,549 - #9 y
INFO  19:27:22,549 - #28 ;
INFO  19:27:22,549 - #5 const
INFO  19:27:22,549 - #9 int
INFO  19:27:22,550 - #9 s
INFO  19:27:22,550 - #25 =
INFO  19:27:22,550 - #10 6
INFO  19:27:22,550 - #28 ;
INFO  19:27:22,550 - #21 {
INFO  19:27:22,551 - #9 int
INFO  19:27:22,551 - #9 k
INFO  19:27:22,551 - #30 (
INFO  19:27:22,552 - #31 )
INFO  19:27:22,552 - #9 int
INFO  19:27:22,553 - #9 c
INFO  19:27:22,553 - #28 ;
INFO  19:27:22,553 - #21 {
INFO  19:27:22,553 - #9 c
INFO  19:27:22,553 - #25 =
INFO  19:27:22,553 - #10 2
INFO  19:27:22,553 - #28 ;
INFO  19:27:22,554 - #37 return
INFO  19:27:22,554 - #9 c
INFO  19:27:22,554 - #14 +
INFO  19:27:22,554 - #10 2
INFO  19:27:22,555 - #28 ;
INFO  19:27:22,555 - #22 }
INFO  19:27:22,555 - #9 int
INFO  19:27:22,556 - #9 main
INFO  19:27:22,556 - #30 (
INFO  19:27:22,556 - #31 )
INFO  19:27:22,556 - #21 {
INFO  19:27:22,556 - #3 print
INFO  19:27:22,556 - #30 (
INFO  19:27:22,556 - #10 1
INFO  19:27:22,557 - #31 )
INFO  19:27:22,557 - #28 ;
INFO  19:27:22,557 - #9 x
INFO  19:27:22,557 - #25 =
INFO  19:27:22,557 - #10 8
INFO  19:27:22,557 - #14 +
INFO  19:27:22,557 - #10 9
INFO  19:27:22,558 - #15 -
INFO  19:27:22,558 - #10 4
INFO  19:27:22,558 - #28 ;
INFO  19:27:22,558 - #9 y
INFO  19:27:22,559 - #25 =
INFO  19:27:22,559 - #10 1
INFO  19:27:22,559 - #28 ;
INFO  19:27:22,559 - #3 print
INFO  19:27:22,559 - #30 (
INFO  19:27:22,559 - #9 x
INFO  19:27:22,559 - #14 +
INFO  19:27:22,559 - #9 y
INFO  19:27:22,559 - #31 )
INFO  19:27:22,559 - #28 ;
INFO  19:27:22,559 - #3 print
INFO  19:27:22,559 - #30 (
INFO  19:27:22,559 - #9 x
INFO  19:27:22,560 - #31 )
INFO  19:27:22,560 - #28 ;
INFO  19:27:22,560 - #37 return
INFO  19:27:22,560 - #10 1
INFO  19:27:22,560 - #28 ;
INFO  19:27:22,560 - #22 }
INFO  19:27:22,560 - #22 }
INFO  19:27:22,561 - 
================SINTAKSNO STABLO====================

INFO  19:27:22,563 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        NoVarDecl(
        ) [NoVarDecl]
        ProgVar(
          VarDecl(
            Type(
             int
            ) [Type]
            VarDecl_0(
              Variable(
               x
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             y
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgConst(
      ConstDecl(
        Type(
         int
        ) [Type]
        ConstDecl_0(
          SingleConst(
           s
            NumConst(
             6
            ) [NumConst]
          ) [SingleConst]
        ) [ConstDecl_0]
      ) [ConstDecl]
    ) [ProgConst]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  MatchedStmt(
                    PrintStmt(
                      TermExpr(
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             1
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [TermExpr]
                    ) [PrintStmt]
                  ) [MatchedStmt]
                ) [Statements]
                MatchedStmt(
                  DesignatorStatement(
                    Assignment(
                      Designator_1(
                       x
                      ) [Designator_1]
                      AddExpr(
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             8
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                        MoreTermMulti(
                          MoreTermSingle(
                            MoreTermPart(
                              Addop(
                              ) [Addop]
                              FactorTerm(
                                ValFactor(
                                  NumConst(
                                   9
                                  ) [NumConst]
                                ) [ValFactor]
                              ) [FactorTerm]
                            ) [MoreTermPart]
                          ) [MoreTermSingle]
                          MoreTermPart(
                            Subop(
                            ) [Subop]
                            FactorTerm(
                              ValFactor(
                                NumConst(
                                 4
                                ) [NumConst]
                              ) [ValFactor]
                            ) [FactorTerm]
                          ) [MoreTermPart]
                        ) [MoreTermMulti]
                      ) [AddExpr]
                    ) [Assignment]
                  ) [DesignatorStatement]
                ) [MatchedStmt]
              ) [Statements]
              MatchedStmt(
                DesignatorStatement(
                  Assignment(
                    Designator_1(
                     y
                    ) [Designator_1]
                    TermExpr(
                      FactorTerm(
                        ValFactor(
                          NumConst(
                           1
                          ) [NumConst]
                        ) [ValFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStatement]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              PrintStmt(
                AddExpr(
                  FactorTerm(
                    VarFactor(
                      Designator_1(
                       x
                      ) [Designator_1]
                    ) [VarFactor]
                  ) [FactorTerm]
                  MoreTermSingle(
                    MoreTermPart(
                      Addop(
                      ) [Addop]
                      FactorTerm(
                        VarFactor(
                          Designator_1(
                           y
                          ) [Designator_1]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [MoreTermPart]
                  ) [MoreTermSingle]
                ) [AddExpr]
              ) [PrintStmt]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:27:22,575 - 
================SEMANTICKA OBRADA====================

INFO  19:27:22,578 - Deklarisana promenljiva x na liniji 2
INFO  19:27:22,579 - Deklarisana promenljiva y na liniji 2
INFO  19:27:22,579 - Deklarisana konstanta s sa vrednoscu 6 na liniji 3
INFO  19:27:22,579 - Obradjuje se funkcija k na liniji 6
INFO  19:27:22,579 - Deklarisana promenljiva c na liniji 6
INFO  19:27:22,579 - Obradjuje se funkcija main na liniji 11
INFO  19:27:22,580 - 
================GENERISANJE KODA====================

INFO  19:27:22,585 - Parsiranje uspesno zavrseno!
INFO  19:27:51,712 - Kompajliranje ulaznog fajla test\program.mj
INFO  19:27:51,748 - #2 program
INFO  19:27:51,748 - #9 MJProgram
INFO  19:27:51,748 - #9 int
INFO  19:27:51,749 - #9 x
INFO  19:27:51,750 - #28 ;
INFO  19:27:51,750 - #9 int
INFO  19:27:51,751 - #9 y
INFO  19:27:51,751 - #28 ;
INFO  19:27:51,751 - #5 const
INFO  19:27:51,751 - #9 int
INFO  19:27:51,751 - #9 s
INFO  19:27:51,751 - #25 =
INFO  19:27:51,751 - #10 6
INFO  19:27:51,752 - #28 ;
INFO  19:27:51,752 - #21 {
INFO  19:27:51,753 - #9 int
INFO  19:27:51,753 - #9 k
INFO  19:27:51,753 - #30 (
INFO  19:27:51,754 - #31 )
INFO  19:27:51,754 - #9 int
INFO  19:27:51,755 - #9 c
INFO  19:27:51,755 - #28 ;
INFO  19:27:51,755 - #21 {
INFO  19:27:51,755 - #9 c
INFO  19:27:51,755 - #25 =
INFO  19:27:51,756 - #10 2
INFO  19:27:51,756 - #28 ;
INFO  19:27:51,756 - #37 return
INFO  19:27:51,756 - #9 c
INFO  19:27:51,756 - #14 +
INFO  19:27:51,756 - #10 2
INFO  19:27:51,757 - #28 ;
INFO  19:27:51,757 - #22 }
INFO  19:27:51,758 - #9 int
INFO  19:27:51,758 - #9 main
INFO  19:27:51,758 - #30 (
INFO  19:27:51,758 - #31 )
INFO  19:27:51,758 - #21 {
INFO  19:27:51,758 - #3 print
INFO  19:27:51,759 - #30 (
INFO  19:27:51,759 - #10 1
INFO  19:27:51,759 - #31 )
INFO  19:27:51,759 - #28 ;
INFO  19:27:51,759 - #9 x
INFO  19:27:51,759 - #25 =
INFO  19:27:51,759 - #10 8
INFO  19:27:51,759 - #14 +
INFO  19:27:51,759 - #10 9
INFO  19:27:51,759 - #15 -
INFO  19:27:51,759 - #10 4
INFO  19:27:51,760 - #28 ;
INFO  19:27:51,760 - #9 y
INFO  19:27:51,760 - #25 =
INFO  19:27:51,760 - #10 1
INFO  19:27:51,760 - #28 ;
INFO  19:27:51,760 - #4 read
INFO  19:27:51,760 - #30 (
INFO  19:27:51,760 - #9 x
INFO  19:27:51,760 - #31 )
INFO  19:27:51,760 - #28 ;
INFO  19:27:51,760 - #3 print
INFO  19:27:51,760 - #30 (
INFO  19:27:51,760 - #9 x
INFO  19:27:51,761 - #14 +
INFO  19:27:51,761 - #9 y
INFO  19:27:51,761 - #31 )
INFO  19:27:51,761 - #28 ;
INFO  19:27:51,761 - #3 print
INFO  19:27:51,761 - #30 (
INFO  19:27:51,761 - #9 x
INFO  19:27:51,761 - #31 )
INFO  19:27:51,761 - #28 ;
INFO  19:27:51,761 - #37 return
INFO  19:27:51,761 - #10 1
INFO  19:27:51,761 - #28 ;
INFO  19:27:51,762 - #22 }
INFO  19:27:51,762 - #22 }
INFO  19:27:51,762 - 
================SINTAKSNO STABLO====================

INFO  19:27:51,764 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        NoVarDecl(
        ) [NoVarDecl]
        ProgVar(
          VarDecl(
            Type(
             int
            ) [Type]
            VarDecl_0(
              Variable(
               x
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             y
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgConst(
      ConstDecl(
        Type(
         int
        ) [Type]
        ConstDecl_0(
          SingleConst(
           s
            NumConst(
             6
            ) [NumConst]
          ) [SingleConst]
        ) [ConstDecl_0]
      ) [ConstDecl]
    ) [ProgConst]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    NoStmt(
                    ) [NoStmt]
                    MatchedStmt(
                      PrintStmt(
                        TermExpr(
                          FactorTerm(
                            ValFactor(
                              NumConst(
                               1
                              ) [NumConst]
                            ) [ValFactor]
                          ) [FactorTerm]
                        ) [TermExpr]
                      ) [PrintStmt]
                    ) [MatchedStmt]
                  ) [Statements]
                  MatchedStmt(
                    DesignatorStatement(
                      Assignment(
                        Designator_1(
                         x
                        ) [Designator_1]
                        AddExpr(
                          FactorTerm(
                            ValFactor(
                              NumConst(
                               8
                              ) [NumConst]
                            ) [ValFactor]
                          ) [FactorTerm]
                          MoreTermMulti(
                            MoreTermSingle(
                              MoreTermPart(
                                Addop(
                                ) [Addop]
                                FactorTerm(
                                  ValFactor(
                                    NumConst(
                                     9
                                    ) [NumConst]
                                  ) [ValFactor]
                                ) [FactorTerm]
                              ) [MoreTermPart]
                            ) [MoreTermSingle]
                            MoreTermPart(
                              Subop(
                              ) [Subop]
                              FactorTerm(
                                ValFactor(
                                  NumConst(
                                   4
                                  ) [NumConst]
                                ) [ValFactor]
                              ) [FactorTerm]
                            ) [MoreTermPart]
                          ) [MoreTermMulti]
                        ) [AddExpr]
                      ) [Assignment]
                    ) [DesignatorStatement]
                  ) [MatchedStmt]
                ) [Statements]
                MatchedStmt(
                  DesignatorStatement(
                    Assignment(
                      Designator_1(
                       y
                      ) [Designator_1]
                      TermExpr(
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             1
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [TermExpr]
                    ) [Assignment]
                  ) [DesignatorStatement]
                ) [MatchedStmt]
              ) [Statements]
              MatchedStmt(
                StmtRead(
                  Designator_1(
                   x
                  ) [Designator_1]
                ) [StmtRead]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              PrintStmt(
                AddExpr(
                  FactorTerm(
                    VarFactor(
                      Designator_1(
                       x
                      ) [Designator_1]
                    ) [VarFactor]
                  ) [FactorTerm]
                  MoreTermSingle(
                    MoreTermPart(
                      Addop(
                      ) [Addop]
                      FactorTerm(
                        VarFactor(
                          Designator_1(
                           y
                          ) [Designator_1]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [MoreTermPart]
                  ) [MoreTermSingle]
                ) [AddExpr]
              ) [PrintStmt]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:27:51,774 - 
================SEMANTICKA OBRADA====================

INFO  19:27:51,777 - Deklarisana promenljiva x na liniji 2
INFO  19:27:51,777 - Deklarisana promenljiva y na liniji 2
INFO  19:27:51,777 - Deklarisana konstanta s sa vrednoscu 6 na liniji 3
INFO  19:27:51,778 - Obradjuje se funkcija k na liniji 6
INFO  19:27:51,781 - Deklarisana promenljiva c na liniji 6
INFO  19:27:51,781 - Obradjuje se funkcija main na liniji 11
INFO  19:27:51,782 - 
================GENERISANJE KODA====================

INFO  19:27:51,787 - Parsiranje uspesno zavrseno!
INFO  19:28:35,530 - Kompajliranje ulaznog fajla test\program.mj
INFO  19:28:35,562 - #2 program
INFO  19:28:35,562 - #9 MJProgram
INFO  19:28:35,562 - #9 int
INFO  19:28:35,563 - #9 x
INFO  19:28:35,564 - #28 ;
INFO  19:28:35,564 - #9 int
INFO  19:28:35,565 - #9 y
INFO  19:28:35,565 - #28 ;
INFO  19:28:35,565 - #5 const
INFO  19:28:35,565 - #9 int
INFO  19:28:35,565 - #9 s
INFO  19:28:35,565 - #25 =
INFO  19:28:35,565 - #10 6
INFO  19:28:35,565 - #28 ;
INFO  19:28:35,566 - #21 {
INFO  19:28:35,566 - #9 int
INFO  19:28:35,567 - #9 k
INFO  19:28:35,567 - #30 (
INFO  19:28:35,568 - #31 )
INFO  19:28:35,568 - #9 int
INFO  19:28:35,568 - #9 c
INFO  19:28:35,568 - #28 ;
INFO  19:28:35,568 - #21 {
INFO  19:28:35,569 - #9 c
INFO  19:28:35,569 - #25 =
INFO  19:28:35,569 - #10 2
INFO  19:28:35,570 - #28 ;
INFO  19:28:35,570 - #37 return
INFO  19:28:35,570 - #9 c
INFO  19:28:35,570 - #14 +
INFO  19:28:35,570 - #10 2
INFO  19:28:35,571 - #28 ;
INFO  19:28:35,571 - #22 }
INFO  19:28:35,572 - #9 int
INFO  19:28:35,572 - #9 main
INFO  19:28:35,572 - #30 (
INFO  19:28:35,572 - #31 )
INFO  19:28:35,572 - #21 {
INFO  19:28:35,572 - #3 print
INFO  19:28:35,573 - #30 (
INFO  19:28:35,573 - #10 1
INFO  19:28:35,573 - #31 )
INFO  19:28:35,573 - #28 ;
INFO  19:28:35,573 - #9 x
INFO  19:28:35,573 - #25 =
INFO  19:28:35,573 - #10 8
INFO  19:28:35,573 - #14 +
INFO  19:28:35,573 - #10 9
INFO  19:28:35,573 - #15 -
INFO  19:28:35,573 - #10 4
INFO  19:28:35,574 - #28 ;
INFO  19:28:35,574 - #9 y
INFO  19:28:35,574 - #25 =
INFO  19:28:35,574 - #10 1
INFO  19:28:35,574 - #28 ;
INFO  19:28:35,574 - #4 read
INFO  19:28:35,574 - #30 (
INFO  19:28:35,574 - #10 3
ERROR 19:28:35,575 - 
Sintaksna greska na liniji 18
INFO  19:28:35,575 - #31 )
INFO  19:28:35,575 - #28 ;
INFO  19:28:35,575 - #3 print
INFO  19:28:35,575 - #30 (
INFO  19:28:35,575 - #9 x
ERROR 19:28:35,575 - Izvrsen oporavak do 5 u liniji 18
INFO  19:28:35,576 - #14 +
INFO  19:28:35,576 - #9 y
INFO  19:28:35,576 - #31 )
INFO  19:28:35,576 - #28 ;
INFO  19:28:35,576 - #3 print
INFO  19:28:35,576 - #30 (
INFO  19:28:35,576 - #9 x
INFO  19:28:35,576 - #31 )
INFO  19:28:35,576 - #28 ;
INFO  19:28:35,576 - #37 return
INFO  19:28:35,576 - #10 1
INFO  19:28:35,576 - #28 ;
INFO  19:28:35,577 - #22 }
INFO  19:28:35,577 - #22 }
INFO  19:28:35,578 - 
================SINTAKSNO STABLO====================

INFO  19:28:35,579 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        NoVarDecl(
        ) [NoVarDecl]
        ProgVar(
          VarDecl(
            Type(
             int
            ) [Type]
            VarDecl_0(
              Variable(
               x
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             y
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgConst(
      ConstDecl(
        Type(
         int
        ) [Type]
        ConstDecl_0(
          SingleConst(
           s
            NumConst(
             6
            ) [NumConst]
          ) [SingleConst]
        ) [ConstDecl_0]
      ) [ConstDecl]
    ) [ProgConst]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    NoStmt(
                    ) [NoStmt]
                    MatchedStmt(
                      PrintStmt(
                        TermExpr(
                          FactorTerm(
                            ValFactor(
                              NumConst(
                               1
                              ) [NumConst]
                            ) [ValFactor]
                          ) [FactorTerm]
                        ) [TermExpr]
                      ) [PrintStmt]
                    ) [MatchedStmt]
                  ) [Statements]
                  MatchedStmt(
                    DesignatorStatement(
                      Assignment(
                        Designator_1(
                         x
                        ) [Designator_1]
                        AddExpr(
                          FactorTerm(
                            ValFactor(
                              NumConst(
                               8
                              ) [NumConst]
                            ) [ValFactor]
                          ) [FactorTerm]
                          MoreTermMulti(
                            MoreTermSingle(
                              MoreTermPart(
                                Addop(
                                ) [Addop]
                                FactorTerm(
                                  ValFactor(
                                    NumConst(
                                     9
                                    ) [NumConst]
                                  ) [ValFactor]
                                ) [FactorTerm]
                              ) [MoreTermPart]
                            ) [MoreTermSingle]
                            MoreTermPart(
                              Subop(
                              ) [Subop]
                              FactorTerm(
                                ValFactor(
                                  NumConst(
                                   4
                                  ) [NumConst]
                                ) [ValFactor]
                              ) [FactorTerm]
                            ) [MoreTermPart]
                          ) [MoreTermMulti]
                        ) [AddExpr]
                      ) [Assignment]
                    ) [DesignatorStatement]
                  ) [MatchedStmt]
                ) [Statements]
                MatchedStmt(
                  DesignatorStatement(
                    Assignment(
                      Designator_1(
                       y
                      ) [Designator_1]
                      TermExpr(
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             1
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [TermExpr]
                    ) [Assignment]
                  ) [DesignatorStatement]
                ) [MatchedStmt]
              ) [Statements]
              MatchedStmt(
                ErrorStmt(
                ) [ErrorStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              PrintStmt(
                AddExpr(
                  FactorTerm(
                    VarFactor(
                      Designator_1(
                       x
                      ) [Designator_1]
                    ) [VarFactor]
                  ) [FactorTerm]
                  MoreTermSingle(
                    MoreTermPart(
                      Addop(
                      ) [Addop]
                      FactorTerm(
                        VarFactor(
                          Designator_1(
                           y
                          ) [Designator_1]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [MoreTermPart]
                  ) [MoreTermSingle]
                ) [AddExpr]
              ) [PrintStmt]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:28:35,590 - 
================SEMANTICKA OBRADA====================

INFO  19:28:35,594 - Deklarisana promenljiva x na liniji 2
INFO  19:28:35,594 - Deklarisana promenljiva y na liniji 2
INFO  19:28:35,597 - Deklarisana konstanta s sa vrednoscu 6 na liniji 3
INFO  19:28:35,597 - Obradjuje se funkcija k na liniji 6
INFO  19:28:35,597 - Deklarisana promenljiva c na liniji 6
INFO  19:28:35,597 - Obradjuje se funkcija main na liniji 11
INFO  19:28:35,598 - 
================GENERISANJE KODA====================

INFO  19:28:35,604 - Parsiranje uspesno zavrseno!
INFO  19:29:05,809 - Kompajliranje ulaznog fajla test\program.mj
INFO  19:29:05,844 - #2 program
INFO  19:29:05,844 - #9 MJProgram
INFO  19:29:05,844 - #9 int
INFO  19:29:05,845 - #9 x
INFO  19:29:05,845 - #28 ;
INFO  19:29:05,845 - #9 int
INFO  19:29:05,846 - #9 y
INFO  19:29:05,846 - #28 ;
INFO  19:29:05,846 - #5 const
INFO  19:29:05,846 - #9 int
INFO  19:29:05,846 - #9 s
INFO  19:29:05,846 - #25 =
INFO  19:29:05,847 - #10 6
INFO  19:29:05,847 - #28 ;
INFO  19:29:05,847 - #21 {
INFO  19:29:05,848 - #9 int
INFO  19:29:05,848 - #9 k
INFO  19:29:05,848 - #30 (
INFO  19:29:05,849 - #31 )
INFO  19:29:05,849 - #9 int
INFO  19:29:05,850 - #9 c
INFO  19:29:05,850 - #28 ;
INFO  19:29:05,850 - #21 {
INFO  19:29:05,850 - #9 c
INFO  19:29:05,850 - #25 =
INFO  19:29:05,850 - #10 2
INFO  19:29:05,850 - #28 ;
INFO  19:29:05,851 - #37 return
INFO  19:29:05,851 - #9 c
INFO  19:29:05,851 - #14 +
INFO  19:29:05,851 - #10 2
INFO  19:29:05,852 - #28 ;
INFO  19:29:05,852 - #22 }
INFO  19:29:05,852 - #9 int
INFO  19:29:05,853 - #9 main
INFO  19:29:05,853 - #30 (
INFO  19:29:05,853 - #31 )
INFO  19:29:05,853 - #21 {
INFO  19:29:05,853 - #3 print
INFO  19:29:05,853 - #30 (
INFO  19:29:05,854 - #10 1
INFO  19:29:05,854 - #31 )
INFO  19:29:05,854 - #28 ;
INFO  19:29:05,854 - #9 x
INFO  19:29:05,854 - #25 =
INFO  19:29:05,854 - #10 8
INFO  19:29:05,854 - #14 +
INFO  19:29:05,854 - #10 9
INFO  19:29:05,854 - #15 -
INFO  19:29:05,854 - #9 a
INFO  19:29:05,855 - #28 ;
INFO  19:29:05,855 - #9 y
INFO  19:29:05,855 - #25 =
INFO  19:29:05,855 - #10 1
INFO  19:29:05,855 - #28 ;
INFO  19:29:05,855 - #4 read
INFO  19:29:05,856 - #30 (
INFO  19:29:05,856 - #10 3
ERROR 19:29:05,856 - 
Sintaksna greska na liniji 18
INFO  19:29:05,856 - #31 )
INFO  19:29:05,856 - #28 ;
INFO  19:29:05,856 - #3 print
INFO  19:29:05,857 - #30 (
INFO  19:29:05,857 - #9 x
ERROR 19:29:05,857 - Izvrsen oporavak do 5 u liniji 18
INFO  19:29:05,858 - #14 +
INFO  19:29:05,858 - #9 y
INFO  19:29:05,858 - #31 )
INFO  19:29:05,858 - #28 ;
INFO  19:29:05,858 - #3 print
INFO  19:29:05,858 - #30 (
INFO  19:29:05,858 - #9 x
INFO  19:29:05,858 - #31 )
INFO  19:29:05,858 - #28 ;
INFO  19:29:05,858 - #37 return
INFO  19:29:05,858 - #10 1
INFO  19:29:05,858 - #28 ;
INFO  19:29:05,858 - #22 }
INFO  19:29:05,859 - #22 }
INFO  19:29:05,859 - 
================SINTAKSNO STABLO====================

INFO  19:29:05,861 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        NoVarDecl(
        ) [NoVarDecl]
        ProgVar(
          VarDecl(
            Type(
             int
            ) [Type]
            VarDecl_0(
              Variable(
               x
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             y
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgConst(
      ConstDecl(
        Type(
         int
        ) [Type]
        ConstDecl_0(
          SingleConst(
           s
            NumConst(
             6
            ) [NumConst]
          ) [SingleConst]
        ) [ConstDecl_0]
      ) [ConstDecl]
    ) [ProgConst]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    NoStmt(
                    ) [NoStmt]
                    MatchedStmt(
                      PrintStmt(
                        TermExpr(
                          FactorTerm(
                            ValFactor(
                              NumConst(
                               1
                              ) [NumConst]
                            ) [ValFactor]
                          ) [FactorTerm]
                        ) [TermExpr]
                      ) [PrintStmt]
                    ) [MatchedStmt]
                  ) [Statements]
                  MatchedStmt(
                    DesignatorStatement(
                      Assignment(
                        Designator_1(
                         x
                        ) [Designator_1]
                        AddExpr(
                          FactorTerm(
                            ValFactor(
                              NumConst(
                               8
                              ) [NumConst]
                            ) [ValFactor]
                          ) [FactorTerm]
                          MoreTermMulti(
                            MoreTermSingle(
                              MoreTermPart(
                                Addop(
                                ) [Addop]
                                FactorTerm(
                                  ValFactor(
                                    NumConst(
                                     9
                                    ) [NumConst]
                                  ) [ValFactor]
                                ) [FactorTerm]
                              ) [MoreTermPart]
                            ) [MoreTermSingle]
                            MoreTermPart(
                              Subop(
                              ) [Subop]
                              FactorTerm(
                                VarFactor(
                                  Designator_1(
                                   a
                                  ) [Designator_1]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [MoreTermPart]
                          ) [MoreTermMulti]
                        ) [AddExpr]
                      ) [Assignment]
                    ) [DesignatorStatement]
                  ) [MatchedStmt]
                ) [Statements]
                MatchedStmt(
                  DesignatorStatement(
                    Assignment(
                      Designator_1(
                       y
                      ) [Designator_1]
                      TermExpr(
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             1
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [TermExpr]
                    ) [Assignment]
                  ) [DesignatorStatement]
                ) [MatchedStmt]
              ) [Statements]
              MatchedStmt(
                ErrorStmt(
                ) [ErrorStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              PrintStmt(
                AddExpr(
                  FactorTerm(
                    VarFactor(
                      Designator_1(
                       x
                      ) [Designator_1]
                    ) [VarFactor]
                  ) [FactorTerm]
                  MoreTermSingle(
                    MoreTermPart(
                      Addop(
                      ) [Addop]
                      FactorTerm(
                        VarFactor(
                          Designator_1(
                           y
                          ) [Designator_1]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [MoreTermPart]
                  ) [MoreTermSingle]
                ) [AddExpr]
              ) [PrintStmt]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:29:05,871 - 
================SEMANTICKA OBRADA====================

INFO  19:29:05,876 - Deklarisana promenljiva x na liniji 2
INFO  19:29:05,876 - Deklarisana promenljiva y na liniji 2
INFO  19:29:05,879 - Deklarisana konstanta s sa vrednoscu 6 na liniji 3
INFO  19:29:05,879 - Obradjuje se funkcija k na liniji 6
INFO  19:29:05,879 - Deklarisana promenljiva c na liniji 6
INFO  19:29:05,879 - Obradjuje se funkcija main na liniji 11
ERROR 19:29:05,879 - Semanticka greska - ime a nije deklarisano na liniji 15
ERROR 19:29:05,880 - Ulazni fajl [test/program.mj] ima semantickih gresaka!
Parsiranje nije uspesno zavrseno!
INFO  19:29:57,998 - Kompajliranje ulaznog fajla test\program.mj
INFO  19:29:58,031 - #2 program
INFO  19:29:58,031 - #9 MJProgram
INFO  19:29:58,032 - #9 int
INFO  19:29:58,033 - #9 x
INFO  19:29:58,033 - #28 ;
INFO  19:29:58,033 - #9 int
INFO  19:29:58,034 - #9 y
INFO  19:29:58,034 - #28 ;
INFO  19:29:58,034 - #5 const
INFO  19:29:58,034 - #9 int
INFO  19:29:58,034 - #9 s
INFO  19:29:58,034 - #25 =
INFO  19:29:58,035 - #10 6
INFO  19:29:58,035 - #28 ;
INFO  19:29:58,035 - #21 {
INFO  19:29:58,036 - #9 int
INFO  19:29:58,036 - #9 k
INFO  19:29:58,036 - #30 (
INFO  19:29:58,037 - #31 )
INFO  19:29:58,037 - #9 int
INFO  19:29:58,038 - #9 c
INFO  19:29:58,038 - #28 ;
INFO  19:29:58,038 - #21 {
INFO  19:29:58,038 - #9 c
INFO  19:29:58,038 - #25 =
INFO  19:29:58,038 - #10 2
INFO  19:29:58,039 - #28 ;
INFO  19:29:58,039 - #37 return
INFO  19:29:58,039 - #9 c
INFO  19:29:58,039 - #14 +
INFO  19:29:58,039 - #10 2
INFO  19:29:58,040 - #28 ;
INFO  19:29:58,040 - #22 }
INFO  19:29:58,041 - #9 int
INFO  19:29:58,041 - #9 main
INFO  19:29:58,041 - #30 (
INFO  19:29:58,041 - #31 )
INFO  19:29:58,041 - #21 {
INFO  19:29:58,042 - #3 print
INFO  19:29:58,042 - #30 (
INFO  19:29:58,042 - #10 1
INFO  19:29:58,042 - #31 )
INFO  19:29:58,042 - #28 ;
INFO  19:29:58,042 - #9 x
INFO  19:29:58,042 - #25 =
INFO  19:29:58,042 - #10 8
INFO  19:29:58,042 - #14 +
INFO  19:29:58,042 - #10 9
INFO  19:29:58,042 - #15 -
INFO  19:29:58,043 - #10 4
INFO  19:29:58,043 - #28 ;
INFO  19:29:58,043 - #9 y
INFO  19:29:58,043 - #25 =
INFO  19:29:58,044 - #10 1
INFO  19:29:58,044 - #28 ;
INFO  19:29:58,044 - #3 print
INFO  19:29:58,044 - #30 (
INFO  19:29:58,044 - #9 x
INFO  19:29:58,044 - #14 +
INFO  19:29:58,044 - #9 y
INFO  19:29:58,044 - #31 )
INFO  19:29:58,044 - #28 ;
INFO  19:29:58,044 - #3 print
INFO  19:29:58,044 - #30 (
INFO  19:29:58,044 - #9 x
INFO  19:29:58,045 - #31 )
INFO  19:29:58,045 - #28 ;
INFO  19:29:58,045 - #37 return
INFO  19:29:58,045 - #10 1
INFO  19:29:58,045 - #28 ;
INFO  19:29:58,045 - #22 }
INFO  19:29:58,045 - #22 }
INFO  19:29:58,046 - 
================SINTAKSNO STABLO====================

INFO  19:29:58,047 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        NoVarDecl(
        ) [NoVarDecl]
        ProgVar(
          VarDecl(
            Type(
             int
            ) [Type]
            VarDecl_0(
              Variable(
               x
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             y
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgConst(
      ConstDecl(
        Type(
         int
        ) [Type]
        ConstDecl_0(
          SingleConst(
           s
            NumConst(
             6
            ) [NumConst]
          ) [SingleConst]
        ) [ConstDecl_0]
      ) [ConstDecl]
    ) [ProgConst]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  MatchedStmt(
                    PrintStmt(
                      TermExpr(
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             1
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [TermExpr]
                    ) [PrintStmt]
                  ) [MatchedStmt]
                ) [Statements]
                MatchedStmt(
                  DesignatorStatement(
                    Assignment(
                      Designator_1(
                       x
                      ) [Designator_1]
                      AddExpr(
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             8
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                        MoreTermMulti(
                          MoreTermSingle(
                            MoreTermPart(
                              Addop(
                              ) [Addop]
                              FactorTerm(
                                ValFactor(
                                  NumConst(
                                   9
                                  ) [NumConst]
                                ) [ValFactor]
                              ) [FactorTerm]
                            ) [MoreTermPart]
                          ) [MoreTermSingle]
                          MoreTermPart(
                            Subop(
                            ) [Subop]
                            FactorTerm(
                              ValFactor(
                                NumConst(
                                 4
                                ) [NumConst]
                              ) [ValFactor]
                            ) [FactorTerm]
                          ) [MoreTermPart]
                        ) [MoreTermMulti]
                      ) [AddExpr]
                    ) [Assignment]
                  ) [DesignatorStatement]
                ) [MatchedStmt]
              ) [Statements]
              MatchedStmt(
                DesignatorStatement(
                  Assignment(
                    Designator_1(
                     y
                    ) [Designator_1]
                    TermExpr(
                      FactorTerm(
                        ValFactor(
                          NumConst(
                           1
                          ) [NumConst]
                        ) [ValFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStatement]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              PrintStmt(
                AddExpr(
                  FactorTerm(
                    VarFactor(
                      Designator_1(
                       x
                      ) [Designator_1]
                    ) [VarFactor]
                  ) [FactorTerm]
                  MoreTermSingle(
                    MoreTermPart(
                      Addop(
                      ) [Addop]
                      FactorTerm(
                        VarFactor(
                          Designator_1(
                           y
                          ) [Designator_1]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [MoreTermPart]
                  ) [MoreTermSingle]
                ) [AddExpr]
              ) [PrintStmt]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:29:58,059 - 
================SEMANTICKA OBRADA====================

INFO  19:29:58,062 - Deklarisana promenljiva x na liniji 2
INFO  19:29:58,062 - Deklarisana promenljiva y na liniji 2
INFO  19:29:58,063 - Deklarisana konstanta s sa vrednoscu 6 na liniji 3
INFO  19:29:58,063 - Obradjuje se funkcija k na liniji 6
INFO  19:29:58,063 - Deklarisana promenljiva c na liniji 6
INFO  19:29:58,063 - Obradjuje se funkcija main na liniji 11
INFO  19:29:58,064 - 
================GENERISANJE KODA====================

INFO  19:29:58,069 - Parsiranje uspesno zavrseno!
INFO  19:30:29,857 - Kompajliranje ulaznog fajla test\program.mj
INFO  19:30:29,890 - #2 program
INFO  19:30:29,890 - #9 MJProgram
INFO  19:30:29,890 - #9 int
INFO  19:30:29,891 - #9 x
INFO  19:30:29,892 - #28 ;
INFO  19:30:29,892 - #9 int
INFO  19:30:29,893 - #9 y
INFO  19:30:29,893 - #28 ;
INFO  19:30:29,893 - #5 const
INFO  19:30:29,893 - #9 int
INFO  19:30:29,893 - #9 s
INFO  19:30:29,893 - #25 =
INFO  19:30:29,893 - #10 6
INFO  19:30:29,893 - #28 ;
INFO  19:30:29,894 - #21 {
INFO  19:30:29,895 - #9 int
INFO  19:30:29,895 - #9 k
INFO  19:30:29,895 - #30 (
INFO  19:30:29,896 - #31 )
INFO  19:30:29,896 - #9 int
INFO  19:30:29,897 - #9 c
INFO  19:30:29,897 - #28 ;
INFO  19:30:29,897 - #21 {
INFO  19:30:29,897 - #9 c
INFO  19:30:29,897 - #25 =
INFO  19:30:29,897 - #10 2
INFO  19:30:29,897 - #28 ;
INFO  19:30:29,898 - #37 return
INFO  19:30:29,898 - #9 c
INFO  19:30:29,898 - #14 +
INFO  19:30:29,898 - #10 2
INFO  19:30:29,899 - #28 ;
INFO  19:30:29,899 - #22 }
INFO  19:30:29,899 - #9 int
INFO  19:30:29,900 - #9 main
INFO  19:30:29,900 - #30 (
INFO  19:30:29,900 - #31 )
INFO  19:30:29,900 - #9 int
INFO  19:30:29,900 - #9 niz
INFO  19:30:29,900 - #23 [
INFO  19:30:29,900 - #24 ]
INFO  19:30:29,901 - #28 ;
INFO  19:30:29,901 - #21 {
INFO  19:30:29,901 - #3 print
INFO  19:30:29,901 - #30 (
INFO  19:30:29,901 - #10 1
INFO  19:30:29,901 - #31 )
INFO  19:30:29,901 - #28 ;
INFO  19:30:29,901 - #9 x
INFO  19:30:29,901 - #25 =
INFO  19:30:29,901 - #10 8
INFO  19:30:29,901 - #14 +
INFO  19:30:29,901 - #10 9
INFO  19:30:29,901 - #15 -
INFO  19:30:29,901 - #10 4
INFO  19:30:29,902 - #28 ;
INFO  19:30:29,902 - #9 y
INFO  19:30:29,902 - #25 =
INFO  19:30:29,902 - #10 1
INFO  19:30:29,902 - #28 ;
INFO  19:30:29,902 - #3 print
INFO  19:30:29,902 - #30 (
INFO  19:30:29,902 - #9 x
INFO  19:30:29,903 - #14 +
INFO  19:30:29,903 - #9 y
INFO  19:30:29,903 - #31 )
INFO  19:30:29,903 - #28 ;
INFO  19:30:29,903 - #3 print
INFO  19:30:29,903 - #30 (
INFO  19:30:29,903 - #9 x
INFO  19:30:29,903 - #31 )
INFO  19:30:29,903 - #28 ;
INFO  19:30:29,903 - #37 return
INFO  19:30:29,903 - #10 1
INFO  19:30:29,903 - #28 ;
INFO  19:30:29,904 - #22 }
INFO  19:30:29,904 - #22 }
INFO  19:30:29,905 - 
================SINTAKSNO STABLO====================

INFO  19:30:29,906 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        NoVarDecl(
        ) [NoVarDecl]
        ProgVar(
          VarDecl(
            Type(
             int
            ) [Type]
            VarDecl_0(
              Variable(
               x
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             y
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgConst(
      ConstDecl(
        Type(
         int
        ) [Type]
        ConstDecl_0(
          SingleConst(
           s
            NumConst(
             6
            ) [NumConst]
          ) [SingleConst]
        ) [ConstDecl_0]
      ) [ConstDecl]
    ) [ProgConst]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        NoVarDecl(
        ) [NoVarDecl]
        ProgVar(
          VarDecl(
            Type(
             int
            ) [Type]
            VarDecl_0(
              VarArray(
               niz
              ) [VarArray]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  MatchedStmt(
                    PrintStmt(
                      TermExpr(
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             1
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [TermExpr]
                    ) [PrintStmt]
                  ) [MatchedStmt]
                ) [Statements]
                MatchedStmt(
                  DesignatorStatement(
                    Assignment(
                      Designator_1(
                       x
                      ) [Designator_1]
                      AddExpr(
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             8
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                        MoreTermMulti(
                          MoreTermSingle(
                            MoreTermPart(
                              Addop(
                              ) [Addop]
                              FactorTerm(
                                ValFactor(
                                  NumConst(
                                   9
                                  ) [NumConst]
                                ) [ValFactor]
                              ) [FactorTerm]
                            ) [MoreTermPart]
                          ) [MoreTermSingle]
                          MoreTermPart(
                            Subop(
                            ) [Subop]
                            FactorTerm(
                              ValFactor(
                                NumConst(
                                 4
                                ) [NumConst]
                              ) [ValFactor]
                            ) [FactorTerm]
                          ) [MoreTermPart]
                        ) [MoreTermMulti]
                      ) [AddExpr]
                    ) [Assignment]
                  ) [DesignatorStatement]
                ) [MatchedStmt]
              ) [Statements]
              MatchedStmt(
                DesignatorStatement(
                  Assignment(
                    Designator_1(
                     y
                    ) [Designator_1]
                    TermExpr(
                      FactorTerm(
                        ValFactor(
                          NumConst(
                           1
                          ) [NumConst]
                        ) [ValFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStatement]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              PrintStmt(
                AddExpr(
                  FactorTerm(
                    VarFactor(
                      Designator_1(
                       x
                      ) [Designator_1]
                    ) [VarFactor]
                  ) [FactorTerm]
                  MoreTermSingle(
                    MoreTermPart(
                      Addop(
                      ) [Addop]
                      FactorTerm(
                        VarFactor(
                          Designator_1(
                           y
                          ) [Designator_1]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [MoreTermPart]
                  ) [MoreTermSingle]
                ) [AddExpr]
              ) [PrintStmt]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:30:29,916 - 
================SEMANTICKA OBRADA====================

INFO  19:30:29,919 - Deklarisana promenljiva x na liniji 2
INFO  19:30:29,919 - Deklarisana promenljiva y na liniji 2
INFO  19:30:29,920 - Deklarisana konstanta s sa vrednoscu 6 na liniji 3
INFO  19:30:29,920 - Obradjuje se funkcija k na liniji 6
INFO  19:30:29,923 - Deklarisana promenljiva c na liniji 6
INFO  19:30:29,923 - Obradjuje se funkcija main na liniji 11
INFO  19:30:29,923 - Deklarisan niz niz na liniji 11
INFO  19:30:29,924 - 
================GENERISANJE KODA====================

INFO  19:30:29,929 - Parsiranje uspesno zavrseno!
INFO  19:31:03,174 - Kompajliranje ulaznog fajla test\program.mj
INFO  19:31:03,208 - #2 program
INFO  19:31:03,208 - #9 MJProgram
INFO  19:31:03,209 - #9 int
INFO  19:31:03,210 - #9 x
INFO  19:31:03,210 - #28 ;
INFO  19:31:03,210 - #9 int
INFO  19:31:03,211 - #9 y
INFO  19:31:03,211 - #28 ;
INFO  19:31:03,211 - #5 const
INFO  19:31:03,211 - #9 int
INFO  19:31:03,211 - #9 s
INFO  19:31:03,211 - #25 =
INFO  19:31:03,211 - #10 6
INFO  19:31:03,211 - #28 ;
INFO  19:31:03,212 - #21 {
INFO  19:31:03,213 - #9 int
INFO  19:31:03,213 - #9 k
INFO  19:31:03,213 - #30 (
INFO  19:31:03,214 - #31 )
INFO  19:31:03,214 - #9 int
INFO  19:31:03,214 - #9 c
INFO  19:31:03,214 - #28 ;
INFO  19:31:03,214 - #21 {
INFO  19:31:03,215 - #9 c
INFO  19:31:03,215 - #25 =
INFO  19:31:03,215 - #10 2
INFO  19:31:03,215 - #28 ;
INFO  19:31:03,216 - #37 return
INFO  19:31:03,216 - #9 c
INFO  19:31:03,216 - #14 +
INFO  19:31:03,216 - #10 2
INFO  19:31:03,216 - #28 ;
INFO  19:31:03,217 - #22 }
INFO  19:31:03,217 - #9 int
INFO  19:31:03,218 - #9 main
INFO  19:31:03,218 - #30 (
INFO  19:31:03,218 - #31 )
INFO  19:31:03,218 - #9 int
INFO  19:31:03,218 - #9 niz
INFO  19:31:03,218 - #23 [
INFO  19:31:03,218 - #24 ]
INFO  19:31:03,218 - #28 ;
INFO  19:31:03,218 - #21 {
INFO  19:31:03,218 - #3 print
INFO  19:31:03,218 - #30 (
INFO  19:31:03,218 - #10 1
INFO  19:31:03,218 - #31 )
INFO  19:31:03,219 - #28 ;
INFO  19:31:03,219 - #9 x
INFO  19:31:03,219 - #25 =
INFO  19:31:03,219 - #10 8
INFO  19:31:03,219 - #14 +
INFO  19:31:03,219 - #10 9
INFO  19:31:03,219 - #15 -
INFO  19:31:03,219 - #10 4
INFO  19:31:03,219 - #28 ;
INFO  19:31:03,220 - #9 y
INFO  19:31:03,220 - #25 =
INFO  19:31:03,220 - #10 1
INFO  19:31:03,220 - #28 ;
INFO  19:31:03,220 - #9 y
INFO  19:31:03,220 - #26 ++
INFO  19:31:03,220 - #28 ;
INFO  19:31:03,220 - #3 print
INFO  19:31:03,220 - #30 (
INFO  19:31:03,220 - #9 x
INFO  19:31:03,220 - #14 +
INFO  19:31:03,220 - #9 y
INFO  19:31:03,220 - #31 )
INFO  19:31:03,221 - #28 ;
INFO  19:31:03,221 - #3 print
INFO  19:31:03,221 - #30 (
INFO  19:31:03,221 - #9 x
INFO  19:31:03,221 - #31 )
INFO  19:31:03,221 - #28 ;
INFO  19:31:03,221 - #37 return
INFO  19:31:03,221 - #10 1
INFO  19:31:03,221 - #28 ;
INFO  19:31:03,221 - #22 }
INFO  19:31:03,221 - #22 }
INFO  19:31:03,223 - 
================SINTAKSNO STABLO====================

INFO  19:31:03,224 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        NoVarDecl(
        ) [NoVarDecl]
        ProgVar(
          VarDecl(
            Type(
             int
            ) [Type]
            VarDecl_0(
              Variable(
               x
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             y
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgConst(
      ConstDecl(
        Type(
         int
        ) [Type]
        ConstDecl_0(
          SingleConst(
           s
            NumConst(
             6
            ) [NumConst]
          ) [SingleConst]
        ) [ConstDecl_0]
      ) [ConstDecl]
    ) [ProgConst]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        NoVarDecl(
        ) [NoVarDecl]
        ProgVar(
          VarDecl(
            Type(
             int
            ) [Type]
            VarDecl_0(
              VarArray(
               niz
              ) [VarArray]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    NoStmt(
                    ) [NoStmt]
                    MatchedStmt(
                      PrintStmt(
                        TermExpr(
                          FactorTerm(
                            ValFactor(
                              NumConst(
                               1
                              ) [NumConst]
                            ) [ValFactor]
                          ) [FactorTerm]
                        ) [TermExpr]
                      ) [PrintStmt]
                    ) [MatchedStmt]
                  ) [Statements]
                  MatchedStmt(
                    DesignatorStatement(
                      Assignment(
                        Designator_1(
                         x
                        ) [Designator_1]
                        AddExpr(
                          FactorTerm(
                            ValFactor(
                              NumConst(
                               8
                              ) [NumConst]
                            ) [ValFactor]
                          ) [FactorTerm]
                          MoreTermMulti(
                            MoreTermSingle(
                              MoreTermPart(
                                Addop(
                                ) [Addop]
                                FactorTerm(
                                  ValFactor(
                                    NumConst(
                                     9
                                    ) [NumConst]
                                  ) [ValFactor]
                                ) [FactorTerm]
                              ) [MoreTermPart]
                            ) [MoreTermSingle]
                            MoreTermPart(
                              Subop(
                              ) [Subop]
                              FactorTerm(
                                ValFactor(
                                  NumConst(
                                   4
                                  ) [NumConst]
                                ) [ValFactor]
                              ) [FactorTerm]
                            ) [MoreTermPart]
                          ) [MoreTermMulti]
                        ) [AddExpr]
                      ) [Assignment]
                    ) [DesignatorStatement]
                  ) [MatchedStmt]
                ) [Statements]
                MatchedStmt(
                  DesignatorStatement(
                    Assignment(
                      Designator_1(
                       y
                      ) [Designator_1]
                      TermExpr(
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             1
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [TermExpr]
                    ) [Assignment]
                  ) [DesignatorStatement]
                ) [MatchedStmt]
              ) [Statements]
              MatchedStmt(
                DesignatorStatement(
                  Increment(
                    Designator_1(
                     y
                    ) [Designator_1]
                  ) [Increment]
                ) [DesignatorStatement]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              PrintStmt(
                AddExpr(
                  FactorTerm(
                    VarFactor(
                      Designator_1(
                       x
                      ) [Designator_1]
                    ) [VarFactor]
                  ) [FactorTerm]
                  MoreTermSingle(
                    MoreTermPart(
                      Addop(
                      ) [Addop]
                      FactorTerm(
                        VarFactor(
                          Designator_1(
                           y
                          ) [Designator_1]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [MoreTermPart]
                  ) [MoreTermSingle]
                ) [AddExpr]
              ) [PrintStmt]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:31:03,235 - 
================SEMANTICKA OBRADA====================

INFO  19:31:03,238 - Deklarisana promenljiva x na liniji 2
INFO  19:31:03,241 - Deklarisana promenljiva y na liniji 2
INFO  19:31:03,241 - Deklarisana konstanta s sa vrednoscu 6 na liniji 3
INFO  19:31:03,241 - Obradjuje se funkcija k na liniji 6
INFO  19:31:03,241 - Deklarisana promenljiva c na liniji 6
INFO  19:31:03,242 - Obradjuje se funkcija main na liniji 11
INFO  19:31:03,242 - Deklarisan niz niz na liniji 11
INFO  19:31:03,243 - 
================GENERISANJE KODA====================

INFO  19:31:03,250 - Parsiranje uspesno zavrseno!
INFO  19:31:32,371 - Kompajliranje ulaznog fajla test\program.mj
INFO  19:31:32,403 - #2 program
INFO  19:31:32,403 - #9 MJProgram
INFO  19:31:32,404 - #9 int
INFO  19:31:32,404 - #9 x
INFO  19:31:32,405 - #28 ;
INFO  19:31:32,405 - #9 int
INFO  19:31:32,406 - #9 y
INFO  19:31:32,406 - #28 ;
INFO  19:31:32,406 - #5 const
INFO  19:31:32,406 - #9 int
INFO  19:31:32,406 - #9 s
INFO  19:31:32,406 - #25 =
INFO  19:31:32,406 - #10 6
INFO  19:31:32,406 - #28 ;
INFO  19:31:32,407 - #21 {
INFO  19:31:32,407 - #9 int
INFO  19:31:32,408 - #9 k
INFO  19:31:32,408 - #30 (
INFO  19:31:32,408 - #31 )
INFO  19:31:32,409 - #9 int
INFO  19:31:32,409 - #9 c
INFO  19:31:32,409 - #28 ;
INFO  19:31:32,409 - #21 {
INFO  19:31:32,409 - #9 c
INFO  19:31:32,410 - #25 =
INFO  19:31:32,410 - #10 2
INFO  19:31:32,410 - #28 ;
INFO  19:31:32,410 - #37 return
INFO  19:31:32,410 - #9 c
INFO  19:31:32,410 - #14 +
INFO  19:31:32,411 - #10 2
INFO  19:31:32,411 - #28 ;
INFO  19:31:32,412 - #22 }
INFO  19:31:32,412 - #9 int
INFO  19:31:32,413 - #9 main
INFO  19:31:32,413 - #30 (
INFO  19:31:32,413 - #31 )
INFO  19:31:32,413 - #9 int
INFO  19:31:32,413 - #9 niz
INFO  19:31:32,413 - #23 [
INFO  19:31:32,413 - #24 ]
INFO  19:31:32,413 - #28 ;
INFO  19:31:32,413 - #21 {
INFO  19:31:32,413 - #3 print
INFO  19:31:32,413 - #30 (
INFO  19:31:32,413 - #10 1
INFO  19:31:32,414 - #31 )
INFO  19:31:32,414 - #28 ;
INFO  19:31:32,414 - #9 x
INFO  19:31:32,414 - #25 =
INFO  19:31:32,414 - #10 8
INFO  19:31:32,414 - #14 +
INFO  19:31:32,414 - #10 9
INFO  19:31:32,414 - #15 -
INFO  19:31:32,414 - #10 4
INFO  19:31:32,415 - #28 ;
INFO  19:31:32,415 - #9 y
INFO  19:31:32,415 - #25 =
INFO  19:31:32,415 - #10 1
INFO  19:31:32,415 - #28 ;
INFO  19:31:32,415 - #9 y
INFO  19:31:32,416 - #26 ++
INFO  19:31:32,416 - #28 ;
INFO  19:31:32,416 - #9 k
INFO  19:31:32,416 - #30 (
INFO  19:31:32,416 - #31 )
INFO  19:31:32,416 - #28 ;
INFO  19:31:32,416 - #3 print
INFO  19:31:32,417 - #30 (
INFO  19:31:32,417 - #9 x
INFO  19:31:32,417 - #14 +
INFO  19:31:32,417 - #9 y
INFO  19:31:32,417 - #31 )
INFO  19:31:32,417 - #28 ;
INFO  19:31:32,417 - #3 print
INFO  19:31:32,417 - #30 (
INFO  19:31:32,417 - #9 x
INFO  19:31:32,417 - #31 )
INFO  19:31:32,417 - #28 ;
INFO  19:31:32,417 - #37 return
INFO  19:31:32,417 - #10 1
INFO  19:31:32,417 - #28 ;
INFO  19:31:32,418 - #22 }
INFO  19:31:32,418 - #22 }
INFO  19:31:32,421 - 
================SINTAKSNO STABLO====================

INFO  19:31:32,423 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        NoVarDecl(
        ) [NoVarDecl]
        ProgVar(
          VarDecl(
            Type(
             int
            ) [Type]
            VarDecl_0(
              Variable(
               x
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             y
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgConst(
      ConstDecl(
        Type(
         int
        ) [Type]
        ConstDecl_0(
          SingleConst(
           s
            NumConst(
             6
            ) [NumConst]
          ) [SingleConst]
        ) [ConstDecl_0]
      ) [ConstDecl]
    ) [ProgConst]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        NoVarDecl(
        ) [NoVarDecl]
        ProgVar(
          VarDecl(
            Type(
             int
            ) [Type]
            VarDecl_0(
              VarArray(
               niz
              ) [VarArray]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      MatchedStmt(
                        PrintStmt(
                          TermExpr(
                            FactorTerm(
                              ValFactor(
                                NumConst(
                                 1
                                ) [NumConst]
                              ) [ValFactor]
                            ) [FactorTerm]
                          ) [TermExpr]
                        ) [PrintStmt]
                      ) [MatchedStmt]
                    ) [Statements]
                    MatchedStmt(
                      DesignatorStatement(
                        Assignment(
                          Designator_1(
                           x
                          ) [Designator_1]
                          AddExpr(
                            FactorTerm(
                              ValFactor(
                                NumConst(
                                 8
                                ) [NumConst]
                              ) [ValFactor]
                            ) [FactorTerm]
                            MoreTermMulti(
                              MoreTermSingle(
                                MoreTermPart(
                                  Addop(
                                  ) [Addop]
                                  FactorTerm(
                                    ValFactor(
                                      NumConst(
                                       9
                                      ) [NumConst]
                                    ) [ValFactor]
                                  ) [FactorTerm]
                                ) [MoreTermPart]
                              ) [MoreTermSingle]
                              MoreTermPart(
                                Subop(
                                ) [Subop]
                                FactorTerm(
                                  ValFactor(
                                    NumConst(
                                     4
                                    ) [NumConst]
                                  ) [ValFactor]
                                ) [FactorTerm]
                              ) [MoreTermPart]
                            ) [MoreTermMulti]
                          ) [AddExpr]
                        ) [Assignment]
                      ) [DesignatorStatement]
                    ) [MatchedStmt]
                  ) [Statements]
                  MatchedStmt(
                    DesignatorStatement(
                      Assignment(
                        Designator_1(
                         y
                        ) [Designator_1]
                        TermExpr(
                          FactorTerm(
                            ValFactor(
                              NumConst(
                               1
                              ) [NumConst]
                            ) [ValFactor]
                          ) [FactorTerm]
                        ) [TermExpr]
                      ) [Assignment]
                    ) [DesignatorStatement]
                  ) [MatchedStmt]
                ) [Statements]
                MatchedStmt(
                  DesignatorStatement(
                    Increment(
                      Designator_1(
                       y
                      ) [Designator_1]
                    ) [Increment]
                  ) [DesignatorStatement]
                ) [MatchedStmt]
              ) [Statements]
              MatchedStmt(
                DesignatorStatement(
                  FuncCall(
                    Designator_1(
                     k
                    ) [Designator_1]
                    NoActuals(
                    ) [NoActuals]
                  ) [FuncCall]
                ) [DesignatorStatement]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              PrintStmt(
                AddExpr(
                  FactorTerm(
                    VarFactor(
                      Designator_1(
                       x
                      ) [Designator_1]
                    ) [VarFactor]
                  ) [FactorTerm]
                  MoreTermSingle(
                    MoreTermPart(
                      Addop(
                      ) [Addop]
                      FactorTerm(
                        VarFactor(
                          Designator_1(
                           y
                          ) [Designator_1]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [MoreTermPart]
                  ) [MoreTermSingle]
                ) [AddExpr]
              ) [PrintStmt]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:31:32,433 - 
================SEMANTICKA OBRADA====================

INFO  19:31:32,436 - Deklarisana promenljiva x na liniji 2
INFO  19:31:32,436 - Deklarisana promenljiva y na liniji 2
INFO  19:31:32,437 - Deklarisana konstanta s sa vrednoscu 6 na liniji 3
INFO  19:31:32,437 - Obradjuje se funkcija k na liniji 6
INFO  19:31:32,437 - Deklarisana promenljiva c na liniji 6
INFO  19:31:32,437 - Obradjuje se funkcija main na liniji 11
INFO  19:31:32,437 - Deklarisan niz niz na liniji 11
INFO  19:31:32,438 - 
================GENERISANJE KODA====================

INFO  19:31:32,442 - Parsiranje uspesno zavrseno!
INFO  19:32:24,837 - Kompajliranje ulaznog fajla test\program.mj
INFO  19:32:24,870 - #2 program
INFO  19:32:24,871 - #9 MJProgram
INFO  19:32:24,871 - #9 int
INFO  19:32:24,872 - #9 x
INFO  19:32:24,873 - #28 ;
INFO  19:32:24,873 - #9 int
INFO  19:32:24,874 - #9 y
INFO  19:32:24,874 - #28 ;
INFO  19:32:24,874 - #5 const
INFO  19:32:24,875 - #9 int
INFO  19:32:24,875 - #9 s
INFO  19:32:24,875 - #25 =
INFO  19:32:24,875 - #10 6
INFO  19:32:24,875 - #28 ;
INFO  19:32:24,876 - #21 {
INFO  19:32:24,876 - #9 int
INFO  19:32:24,877 - #9 k
INFO  19:32:24,877 - #30 (
INFO  19:32:24,878 - #31 )
INFO  19:32:24,878 - #9 int
INFO  19:32:24,879 - #9 c
INFO  19:32:24,879 - #28 ;
INFO  19:32:24,879 - #21 {
INFO  19:32:24,879 - #9 c
INFO  19:32:24,879 - #25 =
INFO  19:32:24,880 - #10 2
INFO  19:32:24,880 - #28 ;
INFO  19:32:24,880 - #37 return
INFO  19:32:24,881 - #9 c
INFO  19:32:24,881 - #14 +
INFO  19:32:24,881 - #10 2
INFO  19:32:24,882 - #28 ;
INFO  19:32:24,882 - #22 }
INFO  19:32:24,882 - #9 int
INFO  19:32:24,883 - #9 main
INFO  19:32:24,883 - #30 (
INFO  19:32:24,883 - #31 )
INFO  19:32:24,883 - #9 int
INFO  19:32:24,883 - #9 niz
INFO  19:32:24,883 - #23 [
INFO  19:32:24,883 - #24 ]
INFO  19:32:24,883 - #28 ;
INFO  19:32:24,884 - #21 {
INFO  19:32:24,884 - #3 print
INFO  19:32:24,884 - #30 (
INFO  19:32:24,884 - #10 1
INFO  19:32:24,884 - #31 )
INFO  19:32:24,884 - #28 ;
INFO  19:32:24,884 - #9 x
INFO  19:32:24,884 - #25 =
INFO  19:32:24,884 - #10 8
INFO  19:32:24,884 - #14 +
INFO  19:32:24,884 - #10 9
INFO  19:32:24,885 - #15 -
INFO  19:32:24,885 - #10 4
INFO  19:32:24,885 - #28 ;
INFO  19:32:24,885 - #9 y
INFO  19:32:24,886 - #25 =
INFO  19:32:24,886 - #10 1
INFO  19:32:24,886 - #28 ;
INFO  19:32:24,886 - #9 y
INFO  19:32:24,886 - #26 ++
INFO  19:32:24,886 - #28 ;
INFO  19:32:24,886 - #3 print
INFO  19:32:24,886 - #30 (
INFO  19:32:24,886 - #9 x
INFO  19:32:24,886 - #14 +
INFO  19:32:24,886 - #9 y
INFO  19:32:24,886 - #31 )
INFO  19:32:24,886 - #28 ;
INFO  19:32:24,886 - #3 print
INFO  19:32:24,887 - #30 (
INFO  19:32:24,887 - #9 x
INFO  19:32:24,887 - #31 )
INFO  19:32:24,887 - #28 ;
INFO  19:32:24,887 - #37 return
INFO  19:32:24,887 - #10 1
INFO  19:32:24,887 - #28 ;
INFO  19:32:24,887 - #22 }
INFO  19:32:24,887 - #22 }
INFO  19:32:24,888 - 
================SINTAKSNO STABLO====================

INFO  19:32:24,890 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        NoVarDecl(
        ) [NoVarDecl]
        ProgVar(
          VarDecl(
            Type(
             int
            ) [Type]
            VarDecl_0(
              Variable(
               x
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             y
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgConst(
      ConstDecl(
        Type(
         int
        ) [Type]
        ConstDecl_0(
          SingleConst(
           s
            NumConst(
             6
            ) [NumConst]
          ) [SingleConst]
        ) [ConstDecl_0]
      ) [ConstDecl]
    ) [ProgConst]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        NoVarDecl(
        ) [NoVarDecl]
        ProgVar(
          VarDecl(
            Type(
             int
            ) [Type]
            VarDecl_0(
              VarArray(
               niz
              ) [VarArray]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    NoStmt(
                    ) [NoStmt]
                    MatchedStmt(
                      PrintStmt(
                        TermExpr(
                          FactorTerm(
                            ValFactor(
                              NumConst(
                               1
                              ) [NumConst]
                            ) [ValFactor]
                          ) [FactorTerm]
                        ) [TermExpr]
                      ) [PrintStmt]
                    ) [MatchedStmt]
                  ) [Statements]
                  MatchedStmt(
                    DesignatorStatement(
                      Assignment(
                        Designator_1(
                         x
                        ) [Designator_1]
                        AddExpr(
                          FactorTerm(
                            ValFactor(
                              NumConst(
                               8
                              ) [NumConst]
                            ) [ValFactor]
                          ) [FactorTerm]
                          MoreTermMulti(
                            MoreTermSingle(
                              MoreTermPart(
                                Addop(
                                ) [Addop]
                                FactorTerm(
                                  ValFactor(
                                    NumConst(
                                     9
                                    ) [NumConst]
                                  ) [ValFactor]
                                ) [FactorTerm]
                              ) [MoreTermPart]
                            ) [MoreTermSingle]
                            MoreTermPart(
                              Subop(
                              ) [Subop]
                              FactorTerm(
                                ValFactor(
                                  NumConst(
                                   4
                                  ) [NumConst]
                                ) [ValFactor]
                              ) [FactorTerm]
                            ) [MoreTermPart]
                          ) [MoreTermMulti]
                        ) [AddExpr]
                      ) [Assignment]
                    ) [DesignatorStatement]
                  ) [MatchedStmt]
                ) [Statements]
                MatchedStmt(
                  DesignatorStatement(
                    Assignment(
                      Designator_1(
                       y
                      ) [Designator_1]
                      TermExpr(
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             1
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [TermExpr]
                    ) [Assignment]
                  ) [DesignatorStatement]
                ) [MatchedStmt]
              ) [Statements]
              MatchedStmt(
                DesignatorStatement(
                  Increment(
                    Designator_1(
                     y
                    ) [Designator_1]
                  ) [Increment]
                ) [DesignatorStatement]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              PrintStmt(
                AddExpr(
                  FactorTerm(
                    VarFactor(
                      Designator_1(
                       x
                      ) [Designator_1]
                    ) [VarFactor]
                  ) [FactorTerm]
                  MoreTermSingle(
                    MoreTermPart(
                      Addop(
                      ) [Addop]
                      FactorTerm(
                        VarFactor(
                          Designator_1(
                           y
                          ) [Designator_1]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [MoreTermPart]
                  ) [MoreTermSingle]
                ) [AddExpr]
              ) [PrintStmt]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:32:24,901 - 
================SEMANTICKA OBRADA====================

INFO  19:32:24,907 - Deklarisana promenljiva x na liniji 2
INFO  19:32:24,909 - Deklarisana promenljiva y na liniji 2
INFO  19:32:24,910 - Deklarisana konstanta s sa vrednoscu 6 na liniji 3
INFO  19:32:24,910 - Obradjuje se funkcija k na liniji 6
INFO  19:32:24,910 - Deklarisana promenljiva c na liniji 6
INFO  19:32:24,910 - Obradjuje se funkcija main na liniji 11
INFO  19:32:24,910 - Deklarisan niz niz na liniji 11
INFO  19:32:24,911 - 
================GENERISANJE KODA====================

INFO  19:32:24,916 - Parsiranje uspesno zavrseno!
INFO  19:33:45,849 - Kompajliranje ulaznog fajla test\program.mj
INFO  19:33:45,885 - #2 program
INFO  19:33:45,885 - #9 MJProgram
INFO  19:33:45,885 - #9 int
INFO  19:33:45,886 - #9 x
INFO  19:33:45,887 - #28 ;
INFO  19:33:45,887 - #9 int
INFO  19:33:45,888 - #9 y
INFO  19:33:45,888 - #28 ;
INFO  19:33:45,888 - #5 const
INFO  19:33:45,888 - #9 int
INFO  19:33:45,888 - #9 s
INFO  19:33:45,888 - #25 =
INFO  19:33:45,888 - #10 6
INFO  19:33:45,888 - #28 ;
INFO  19:33:45,889 - #21 {
INFO  19:33:45,889 - #9 int
INFO  19:33:45,890 - #9 k
INFO  19:33:45,890 - #30 (
INFO  19:33:45,890 - #31 )
INFO  19:33:45,890 - #9 int
INFO  19:33:45,891 - #9 c
INFO  19:33:45,891 - #28 ;
INFO  19:33:45,891 - #21 {
INFO  19:33:45,891 - #9 c
INFO  19:33:45,891 - #25 =
INFO  19:33:45,891 - #10 2
INFO  19:33:45,891 - #28 ;
INFO  19:33:45,892 - #37 return
INFO  19:33:45,892 - #9 c
INFO  19:33:45,892 - #14 +
INFO  19:33:45,892 - #10 2
INFO  19:33:45,893 - #28 ;
INFO  19:33:45,894 - #22 }
INFO  19:33:45,894 - #9 int
INFO  19:33:45,895 - #9 main
INFO  19:33:45,895 - #30 (
INFO  19:33:45,895 - #31 )
INFO  19:33:45,895 - #9 int
INFO  19:33:45,895 - #9 niz
INFO  19:33:45,895 - #23 [
INFO  19:33:45,895 - #24 ]
INFO  19:33:45,895 - #28 ;
INFO  19:33:45,895 - #21 {
INFO  19:33:45,895 - #3 print
INFO  19:33:45,896 - #30 (
INFO  19:33:45,896 - #10 1
INFO  19:33:45,896 - #31 )
INFO  19:33:45,896 - #28 ;
INFO  19:33:45,896 - #9 x
INFO  19:33:45,896 - #25 =
INFO  19:33:45,896 - #10 8
INFO  19:33:45,896 - #14 +
INFO  19:33:45,896 - #10 9
INFO  19:33:45,896 - #15 -
INFO  19:33:45,896 - #10 4
INFO  19:33:45,897 - #28 ;
INFO  19:33:45,897 - #9 y
INFO  19:33:45,897 - #25 =
INFO  19:33:45,897 - #10 1
INFO  19:33:45,898 - #28 ;
INFO  19:33:45,898 - #9 y
INFO  19:33:45,898 - #26 ++
INFO  19:33:45,898 - #28 ;
INFO  19:33:45,898 - #3 print
INFO  19:33:45,898 - #30 (
INFO  19:33:45,898 - #9 x
INFO  19:33:45,898 - #14 +
INFO  19:33:45,898 - #9 y
INFO  19:33:45,898 - #31 )
INFO  19:33:45,898 - #28 ;
INFO  19:33:45,898 - #3 print
INFO  19:33:45,898 - #30 (
INFO  19:33:45,898 - #9 x
INFO  19:33:45,898 - #31 )
INFO  19:33:45,899 - #28 ;
INFO  19:33:45,899 - #37 return
INFO  19:33:45,899 - #10 1
INFO  19:33:45,899 - #28 ;
INFO  19:33:45,899 - #22 }
INFO  19:33:45,899 - #22 }
INFO  19:33:45,900 - 
================SINTAKSNO STABLO====================

INFO  19:33:45,902 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        NoVarDecl(
        ) [NoVarDecl]
        ProgVar(
          VarDecl(
            Type(
             int
            ) [Type]
            VarDecl_0(
              Variable(
               x
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            Variable(
             y
            ) [Variable]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgConst(
      ConstDecl(
        Type(
         int
        ) [Type]
        ConstDecl_0(
          SingleConst(
           s
            NumConst(
             6
            ) [NumConst]
          ) [SingleConst]
        ) [ConstDecl_0]
      ) [ConstDecl]
    ) [ProgConst]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeName]
        FormParsParens(
          NoFormalParam(
          ) [NoFormalParam]
        ) [FormParsParens]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 c
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   c
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            ReturnExpr(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     c
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [ReturnExpr]
          ) [MatchedStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        NoVarDecl(
        ) [NoVarDecl]
        ProgVar(
          VarDecl(
            Type(
             int
            ) [Type]
            VarDecl_0(
              VarArray(
               niz
              ) [VarArray]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    NoStmt(
                    ) [NoStmt]
                    MatchedStmt(
                      PrintStmt(
                        TermExpr(
                          FactorTerm(
                            ValFactor(
                              NumConst(
                               1
                              ) [NumConst]
                            ) [ValFactor]
                          ) [FactorTerm]
                        ) [TermExpr]
                      ) [PrintStmt]
                    ) [MatchedStmt]
                  ) [Statements]
                  MatchedStmt(
                    DesignatorStatement(
                      Assignment(
                        Designator_1(
                         x
                        ) [Designator_1]
                        AddExpr(
                          FactorTerm(
                            ValFactor(
                              NumConst(
                               8
                              ) [NumConst]
                            ) [ValFactor]
                          ) [FactorTerm]
                          MoreTermMulti(
                            MoreTermSingle(
                              MoreTermPart(
                                Addop(
                                ) [Addop]
                                FactorTerm(
                                  ValFactor(
                                    NumConst(
                                     9
                                    ) [NumConst]
                                  ) [ValFactor]
                                ) [FactorTerm]
                              ) [MoreTermPart]
                            ) [MoreTermSingle]
                            MoreTermPart(
                              Subop(
                              ) [Subop]
                              FactorTerm(
                                ValFactor(
                                  NumConst(
                                   4
                                  ) [NumConst]
                                ) [ValFactor]
                              ) [FactorTerm]
                            ) [MoreTermPart]
                          ) [MoreTermMulti]
                        ) [AddExpr]
                      ) [Assignment]
                    ) [DesignatorStatement]
                  ) [MatchedStmt]
                ) [Statements]
                MatchedStmt(
                  DesignatorStatement(
                    Assignment(
                      Designator_1(
                       y
                      ) [Designator_1]
                      TermExpr(
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             1
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [TermExpr]
                    ) [Assignment]
                  ) [DesignatorStatement]
                ) [MatchedStmt]
              ) [Statements]
              MatchedStmt(
                DesignatorStatement(
                  Increment(
                    Designator_1(
                     y
                    ) [Designator_1]
                  ) [Increment]
                ) [DesignatorStatement]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              PrintStmt(
                AddExpr(
                  FactorTerm(
                    VarFactor(
                      Designator_1(
                       x
                      ) [Designator_1]
                    ) [VarFactor]
                  ) [FactorTerm]
                  MoreTermSingle(
                    MoreTermPart(
                      Addop(
                      ) [Addop]
                      FactorTerm(
                        VarFactor(
                          Designator_1(
                           y
                          ) [Designator_1]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [MoreTermPart]
                  ) [MoreTermSingle]
                ) [AddExpr]
              ) [PrintStmt]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     x
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          ReturnExpr(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   1
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:33:45,912 - 
================SEMANTICKA OBRADA====================

INFO  19:33:45,915 - Deklarisana promenljiva x na liniji 2
INFO  19:33:45,918 - Deklarisana promenljiva y na liniji 2
INFO  19:33:45,918 - Deklarisana konstanta s sa vrednoscu 6 na liniji 3
INFO  19:33:45,919 - Obradjuje se funkcija k na liniji 6
INFO  19:33:45,919 - Deklarisana promenljiva c na liniji 6
INFO  19:33:45,919 - Obradjuje se funkcija main na liniji 11
INFO  19:33:45,919 - Deklarisan niz niz na liniji 11
INFO  19:33:45,920 - 
================GENERISANJE KODA====================

INFO  19:33:45,925 - Parsiranje uspesno zavrseno!
INFO  19:39:12,818 - Kompajliranje ulaznog fajla test\program.mj
INFO  19:39:12,851 - #2 program
INFO  19:39:12,851 - #9 test301
INFO  19:39:12,851 - #5 const
INFO  19:39:12,852 - #9 int
INFO  19:39:12,852 - #9 nula
INFO  19:39:12,853 - #25 =
INFO  19:39:12,853 - #10 0
INFO  19:39:12,853 - #28 ;
INFO  19:39:12,854 - #5 const
INFO  19:39:12,855 - #9 int
INFO  19:39:12,855 - #9 jedan
INFO  19:39:12,855 - #25 =
INFO  19:39:12,855 - #10 1
INFO  19:39:12,855 - #28 ;
INFO  19:39:12,855 - #5 const
INFO  19:39:12,855 - #9 int
INFO  19:39:12,855 - #9 pet
INFO  19:39:12,855 - #25 =
INFO  19:39:12,855 - #10 5
INFO  19:39:12,855 - #28 ;
INFO  19:39:12,855 - #9 int
INFO  19:39:12,855 - #9 niz
INFO  19:39:12,855 - #23 [
INFO  19:39:12,856 - #24 ]
INFO  19:39:12,856 - #28 ;
INFO  19:39:12,856 - #9 char
INFO  19:39:12,856 - #9 nizch
INFO  19:39:12,856 - #23 [
INFO  19:39:12,857 - #24 ]
INFO  19:39:12,857 - #28 ;
INFO  19:39:12,857 - #21 {
INFO  19:39:12,857 - #6 void
ERROR 19:39:12,857 - 
Sintaksna greska na liniji 13
INFO  19:39:12,857 - #9 main
INFO  19:39:12,857 - #30 (
INFO  19:39:12,857 - #31 )
INFO  19:39:12,857 - #9 int
INFO  19:39:12,859 - #9 bodovi
INFO  19:39:12,859 - #28 ;
INFO  19:39:12,859 - #9 bool
INFO  19:39:12,859 - #9 bt
INFO  19:39:12,859 - #28 ;
DEBUG 19:39:12,859 - Izvrsen oporavak od greske (varDecl) do ; 
INFO  19:39:12,859 - #21 {
INFO  19:39:12,859 - #9 bodovi
INFO  19:39:12,859 - #25 =
ERROR 19:39:12,859 - 
Sintaksna greska na liniji 17
INFO  19:39:12,859 - #10 0
INFO  19:39:12,859 - #28 ;
INFO  19:39:12,859 - #9 bodovi
INFO  19:39:12,859 - #26 ++
INFO  19:39:12,859 - #28 ;
INFO  19:39:12,859 - #9 bodovi
INFO  19:39:12,859 - #25 =
INFO  19:39:12,859 - #9 bodovi
INFO  19:39:12,860 - #14 +
INFO  19:39:12,860 - #9 jedan
INFO  19:39:12,860 - #28 ;
INFO  19:39:12,860 - #9 bodovi
INFO  19:39:12,860 - #25 =
INFO  19:39:12,860 - #9 bodovi
INFO  19:39:12,860 - #16 *
INFO  19:39:12,860 - #9 pet
INFO  19:39:12,860 - #28 ;
INFO  19:39:12,860 - #9 bodovi
INFO  19:39:12,860 - #27 --
INFO  19:39:12,860 - #28 ;
INFO  19:39:12,860 - #3 print
INFO  19:39:12,860 - #30 (
INFO  19:39:12,860 - #9 bodovi
INFO  19:39:12,860 - #31 )
INFO  19:39:12,860 - #28 ;
INFO  19:39:12,860 - #9 niz
INFO  19:39:12,860 - #25 =
INFO  19:39:12,860 - #7 new
INFO  19:39:12,861 - #9 int
INFO  19:39:12,861 - #23 [
INFO  19:39:12,861 - #10 3
INFO  19:39:12,861 - #24 ]
INFO  19:39:12,861 - #28 ;
INFO  19:39:12,861 - #9 niz
INFO  19:39:12,861 - #23 [
INFO  19:39:12,861 - #9 nula
INFO  19:39:12,861 - #24 ]
INFO  19:39:12,861 - #25 =
INFO  19:39:12,861 - #9 jedan
INFO  19:39:12,861 - #28 ;
INFO  19:39:12,861 - #9 niz
INFO  19:39:12,861 - #23 [
INFO  19:39:12,862 - #10 1
INFO  19:39:12,862 - #24 ]
INFO  19:39:12,862 - #25 =
INFO  19:39:12,862 - #10 2
INFO  19:39:12,862 - #28 ;
INFO  19:39:12,862 - #9 niz
INFO  19:39:12,862 - #23 [
INFO  19:39:12,862 - #9 niz
INFO  19:39:12,862 - #23 [
INFO  19:39:12,862 - #9 jedan
INFO  19:39:12,862 - #24 ]
INFO  19:39:12,862 - #24 ]
INFO  19:39:12,863 - #25 =
INFO  19:39:12,863 - #9 niz
INFO  19:39:12,863 - #23 [
INFO  19:39:12,863 - #9 niz
INFO  19:39:12,863 - #23 [
INFO  19:39:12,863 - #10 0
INFO  19:39:12,863 - #24 ]
INFO  19:39:12,863 - #24 ]
INFO  19:39:12,863 - #16 *
INFO  19:39:12,863 - #10 3
INFO  19:39:12,863 - #28 ;
INFO  19:39:12,863 - #9 bodovi
INFO  19:39:12,863 - #25 =
INFO  19:39:12,863 - #9 niz
INFO  19:39:12,863 - #23 [
INFO  19:39:12,863 - #10 2
INFO  19:39:12,863 - #24 ]
INFO  19:39:12,863 - #17 /
INFO  19:39:12,864 - #9 niz
INFO  19:39:12,864 - #23 [
INFO  19:39:12,864 - #10 0
INFO  19:39:12,864 - #24 ]
INFO  19:39:12,864 - #28 ;
INFO  19:39:12,864 - #3 print
INFO  19:39:12,864 - #30 (
INFO  19:39:12,864 - #9 bodovi
INFO  19:39:12,864 - #31 )
INFO  19:39:12,864 - #28 ;
INFO  19:39:12,864 - #3 print
INFO  19:39:12,864 - #30 (
INFO  19:39:12,864 - #9 niz
INFO  19:39:12,864 - #23 [
INFO  19:39:12,865 - #10 2
INFO  19:39:12,865 - #24 ]
INFO  19:39:12,865 - #31 )
INFO  19:39:12,865 - #28 ;
INFO  19:39:12,865 - #9 nizch
INFO  19:39:12,865 - #25 =
INFO  19:39:12,865 - #7 new
INFO  19:39:12,865 - #9 char
INFO  19:39:12,865 - #23 [
INFO  19:39:12,865 - #10 3
INFO  19:39:12,865 - #24 ]
INFO  19:39:12,865 - #28 ;
INFO  19:39:12,865 - #9 nizch
INFO  19:39:12,865 - #23 [
INFO  19:39:12,865 - #10 0
INFO  19:39:12,869 - #24 ]
INFO  19:39:12,869 - #25 =
INFO  19:39:12,869 - #11 a
INFO  19:39:12,869 - #28 ;
INFO  19:39:12,869 - #9 nizch
INFO  19:39:12,869 - #23 [
INFO  19:39:12,869 - #9 jedan
INFO  19:39:12,869 - #24 ]
INFO  19:39:12,869 - #25 =
INFO  19:39:12,869 - #11 b
INFO  19:39:12,869 - #28 ;
INFO  19:39:12,869 - #9 nizch
INFO  19:39:12,869 - #23 [
INFO  19:39:12,869 - #9 pet
INFO  19:39:12,869 - #15 -
INFO  19:39:12,869 - #10 3
INFO  19:39:12,869 - #24 ]
INFO  19:39:12,869 - #25 =
INFO  19:39:12,869 - #11 c
INFO  19:39:12,869 - #28 ;
INFO  19:39:12,869 - #3 print
INFO  19:39:12,870 - #30 (
INFO  19:39:12,870 - #9 nizch
INFO  19:39:12,870 - #23 [
INFO  19:39:12,870 - #10 1
INFO  19:39:12,870 - #24 ]
INFO  19:39:12,870 - #31 )
INFO  19:39:12,870 - #28 ;
INFO  19:39:12,870 - #3 print
INFO  19:39:12,870 - #30 (
INFO  19:39:12,870 - #9 nizch
INFO  19:39:12,870 - #23 [
INFO  19:39:12,870 - #9 jedan
INFO  19:39:12,870 - #16 *
INFO  19:39:12,871 - #10 2
INFO  19:39:12,871 - #24 ]
INFO  19:39:12,871 - #31 )
INFO  19:39:12,871 - #28 ;
INFO  19:39:12,871 - #9 bodovi
INFO  19:39:12,871 - #25 =
INFO  19:39:12,871 - #9 bodovi
INFO  19:39:12,871 - #14 +
INFO  19:39:12,871 - #30 (
INFO  19:39:12,871 - #9 pet
INFO  19:39:12,871 - #16 *
INFO  19:39:12,871 - #9 jedan
INFO  19:39:12,871 - #15 -
INFO  19:39:12,871 - #10 1
INFO  19:39:12,871 - #31 )
INFO  19:39:12,871 - #16 *
INFO  19:39:12,872 - #9 bodovi
INFO  19:39:12,872 - #15 -
INFO  19:39:12,872 - #30 (
INFO  19:39:12,872 - #10 3
INFO  19:39:12,872 - #18 %
INFO  19:39:12,872 - #10 2
INFO  19:39:12,872 - #14 +
INFO  19:39:12,872 - #10 3
INFO  19:39:12,872 - #16 *
INFO  19:39:12,872 - #10 2
INFO  19:39:12,872 - #15 -
INFO  19:39:12,872 - #10 3
INFO  19:39:12,872 - #31 )
INFO  19:39:12,872 - #28 ;
INFO  19:39:12,872 - #3 print
INFO  19:39:12,872 - #30 (
INFO  19:39:12,872 - #9 bodovi
INFO  19:39:12,872 - #31 )
INFO  19:39:12,872 - #28 ;
INFO  19:39:12,873 - #4 read
INFO  19:39:12,873 - #30 (
INFO  19:39:12,873 - #9 bodovi
INFO  19:39:12,873 - #31 )
INFO  19:39:12,873 - #28 ;
INFO  19:39:12,873 - #9 bt
INFO  19:39:12,873 - #25 =
INFO  19:39:12,873 - #8 true
INFO  19:39:12,873 - #28 ;
INFO  19:39:12,873 - #32 if
INFO  19:39:12,873 - #30 (
INFO  19:39:12,873 - #9 bt
INFO  19:39:12,873 - #31 )
INFO  19:39:12,873 - #21 {
INFO  19:39:12,873 - #3 print
INFO  19:39:12,873 - #30 (
INFO  19:39:12,873 - #9 bodovi
INFO  19:39:12,874 - #31 )
INFO  19:39:12,874 - #28 ;
INFO  19:39:12,874 - #22 }
INFO  19:39:12,874 - #33 else
INFO  19:39:12,874 - #21 {
INFO  19:39:12,874 - #3 print
INFO  19:39:12,874 - #30 (
INFO  19:39:12,874 - #9 bodovi
INFO  19:39:12,874 - #14 +
INFO  19:39:12,874 - #10 10
INFO  19:39:12,874 - #31 )
INFO  19:39:12,874 - #28 ;
INFO  19:39:12,874 - #22 }
INFO  19:39:12,874 - #32 if
INFO  19:39:12,874 - #30 (
INFO  19:39:12,874 - #9 bodovi
INFO  19:39:12,874 - #38 >
INFO  19:39:12,874 - #10 10
INFO  19:39:12,874 - #31 )
INFO  19:39:12,874 - #21 {
INFO  19:39:12,875 - #3 print
INFO  19:39:12,875 - #30 (
INFO  19:39:12,875 - #11 +
INFO  19:39:12,875 - #31 )
INFO  19:39:12,875 - #28 ;
INFO  19:39:12,875 - #22 }
INFO  19:39:12,875 - #33 else
INFO  19:39:12,875 - #21 {
INFO  19:39:12,875 - #3 print
INFO  19:39:12,875 - #30 (
INFO  19:39:12,875 - #11 -
INFO  19:39:12,875 - #31 )
INFO  19:39:12,875 - #28 ;
INFO  19:39:12,875 - #22 }
INFO  19:39:12,875 - #22 }
INFO  19:39:12,875 - #22 }
ERROR 19:39:12,875 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 63
INFO  19:41:14,611 - Kompajliranje ulaznog fajla test\program.mj
INFO  19:41:14,645 - #2 program
INFO  19:41:14,645 - #9 test301
INFO  19:41:14,645 - #5 const
INFO  19:41:14,646 - #9 int
INFO  19:41:14,646 - #9 nula
INFO  19:41:14,646 - #25 =
INFO  19:41:14,647 - #10 0
INFO  19:41:14,647 - #28 ;
INFO  19:41:14,647 - #5 const
INFO  19:41:14,648 - #9 int
INFO  19:41:14,648 - #9 jedan
INFO  19:41:14,648 - #25 =
INFO  19:41:14,648 - #10 1
INFO  19:41:14,648 - #28 ;
INFO  19:41:14,648 - #5 const
INFO  19:41:14,649 - #9 int
INFO  19:41:14,649 - #9 pet
INFO  19:41:14,649 - #25 =
INFO  19:41:14,649 - #10 5
INFO  19:41:14,649 - #28 ;
INFO  19:41:14,649 - #9 int
INFO  19:41:14,649 - #9 niz
INFO  19:41:14,649 - #23 [
INFO  19:41:14,649 - #24 ]
INFO  19:41:14,649 - #28 ;
INFO  19:41:14,649 - #9 char
INFO  19:41:14,650 - #9 nizch
INFO  19:41:14,650 - #23 [
INFO  19:41:14,650 - #24 ]
INFO  19:41:14,650 - #28 ;
INFO  19:41:14,650 - #21 {
INFO  19:41:14,650 - #9 int
INFO  19:41:14,651 - #9 main
INFO  19:41:14,651 - #30 (
INFO  19:41:14,651 - #31 )
INFO  19:41:14,652 - #9 int
INFO  19:41:14,652 - #9 bodovi
INFO  19:41:14,652 - #28 ;
INFO  19:41:14,652 - #9 bool
INFO  19:41:14,652 - #9 bt
INFO  19:41:14,652 - #28 ;
INFO  19:41:14,652 - #21 {
INFO  19:41:14,652 - #9 bodovi
INFO  19:41:14,653 - #25 =
INFO  19:41:14,653 - #10 0
INFO  19:41:14,653 - #28 ;
INFO  19:41:14,654 - #9 bodovi
INFO  19:41:14,654 - #26 ++
INFO  19:41:14,654 - #28 ;
INFO  19:41:14,654 - #9 bodovi
INFO  19:41:14,654 - #25 =
INFO  19:41:14,654 - #9 bodovi
INFO  19:41:14,654 - #14 +
INFO  19:41:14,654 - #9 jedan
INFO  19:41:14,655 - #28 ;
INFO  19:41:14,656 - #9 bodovi
INFO  19:41:14,656 - #25 =
INFO  19:41:14,656 - #9 bodovi
INFO  19:41:14,656 - #16 *
INFO  19:41:14,656 - #9 pet
INFO  19:41:14,657 - #28 ;
INFO  19:41:14,658 - #9 bodovi
INFO  19:41:14,658 - #27 --
INFO  19:41:14,658 - #28 ;
INFO  19:41:14,658 - #3 print
INFO  19:41:14,658 - #30 (
INFO  19:41:14,658 - #9 bodovi
INFO  19:41:14,658 - #31 )
INFO  19:41:14,658 - #28 ;
INFO  19:41:14,658 - #9 niz
INFO  19:41:14,658 - #25 =
INFO  19:41:14,659 - #7 new
INFO  19:41:14,659 - #9 int
INFO  19:41:14,659 - #23 [
INFO  19:41:14,659 - #10 3
INFO  19:41:14,659 - #24 ]
INFO  19:41:14,659 - #28 ;
INFO  19:41:14,659 - #9 niz
INFO  19:41:14,659 - #23 [
INFO  19:41:14,659 - #9 nula
INFO  19:41:14,659 - #24 ]
INFO  19:41:14,659 - #25 =
INFO  19:41:14,660 - #9 jedan
INFO  19:41:14,660 - #28 ;
INFO  19:41:14,660 - #9 niz
INFO  19:41:14,660 - #23 [
INFO  19:41:14,660 - #10 1
INFO  19:41:14,660 - #24 ]
INFO  19:41:14,660 - #25 =
INFO  19:41:14,660 - #10 2
INFO  19:41:14,660 - #28 ;
INFO  19:41:14,660 - #9 niz
INFO  19:41:14,660 - #23 [
INFO  19:41:14,660 - #9 niz
INFO  19:41:14,660 - #23 [
INFO  19:41:14,660 - #9 jedan
INFO  19:41:14,660 - #24 ]
INFO  19:41:14,661 - #24 ]
INFO  19:41:14,661 - #25 =
INFO  19:41:14,661 - #9 niz
INFO  19:41:14,661 - #23 [
INFO  19:41:14,661 - #9 niz
INFO  19:41:14,661 - #23 [
INFO  19:41:14,661 - #10 0
INFO  19:41:14,661 - #24 ]
INFO  19:41:14,661 - #24 ]
INFO  19:41:14,661 - #16 *
INFO  19:41:14,661 - #10 3
INFO  19:41:14,661 - #28 ;
INFO  19:41:14,661 - #9 bodovi
INFO  19:41:14,662 - #25 =
INFO  19:41:14,662 - #9 niz
INFO  19:41:14,662 - #23 [
INFO  19:41:14,662 - #10 2
INFO  19:41:14,662 - #24 ]
INFO  19:41:14,662 - #17 /
INFO  19:41:14,662 - #9 niz
INFO  19:41:14,662 - #23 [
INFO  19:41:14,663 - #10 0
INFO  19:41:14,663 - #24 ]
INFO  19:41:14,663 - #28 ;
INFO  19:41:14,663 - #3 print
INFO  19:41:14,663 - #30 (
INFO  19:41:14,663 - #9 bodovi
INFO  19:41:14,663 - #31 )
INFO  19:41:14,663 - #28 ;
INFO  19:41:14,663 - #3 print
INFO  19:41:14,663 - #30 (
INFO  19:41:14,663 - #9 niz
INFO  19:41:14,663 - #23 [
INFO  19:41:14,663 - #10 2
INFO  19:41:14,664 - #24 ]
INFO  19:41:14,664 - #31 )
INFO  19:41:14,664 - #28 ;
INFO  19:41:14,664 - #9 nizch
INFO  19:41:14,664 - #25 =
INFO  19:41:14,664 - #7 new
INFO  19:41:14,664 - #9 char
INFO  19:41:14,664 - #23 [
INFO  19:41:14,664 - #10 3
INFO  19:41:14,664 - #24 ]
INFO  19:41:14,664 - #28 ;
INFO  19:41:14,664 - #9 nizch
INFO  19:41:14,664 - #23 [
INFO  19:41:14,664 - #10 0
INFO  19:41:14,664 - #24 ]
INFO  19:41:14,664 - #25 =
INFO  19:41:14,665 - #11 a
INFO  19:41:14,665 - #28 ;
INFO  19:41:14,665 - #9 nizch
INFO  19:41:14,665 - #23 [
INFO  19:41:14,665 - #9 jedan
INFO  19:41:14,665 - #24 ]
INFO  19:41:14,665 - #25 =
INFO  19:41:14,665 - #11 b
INFO  19:41:14,665 - #28 ;
INFO  19:41:14,665 - #9 nizch
INFO  19:41:14,665 - #23 [
INFO  19:41:14,665 - #9 pet
INFO  19:41:14,665 - #15 -
INFO  19:41:14,665 - #10 3
INFO  19:41:14,666 - #24 ]
INFO  19:41:14,666 - #25 =
INFO  19:41:14,666 - #11 c
INFO  19:41:14,666 - #28 ;
INFO  19:41:14,666 - #3 print
INFO  19:41:14,666 - #30 (
INFO  19:41:14,666 - #9 nizch
INFO  19:41:14,666 - #23 [
INFO  19:41:14,666 - #10 1
INFO  19:41:14,666 - #24 ]
INFO  19:41:14,666 - #31 )
INFO  19:41:14,666 - #28 ;
INFO  19:41:14,666 - #3 print
INFO  19:41:14,666 - #30 (
INFO  19:41:14,667 - #9 nizch
INFO  19:41:14,667 - #23 [
INFO  19:41:14,667 - #9 jedan
INFO  19:41:14,667 - #16 *
INFO  19:41:14,667 - #10 2
INFO  19:41:14,667 - #24 ]
INFO  19:41:14,667 - #31 )
INFO  19:41:14,667 - #28 ;
INFO  19:41:14,667 - #9 bodovi
INFO  19:41:14,667 - #25 =
INFO  19:41:14,667 - #9 bodovi
INFO  19:41:14,667 - #14 +
INFO  19:41:14,667 - #30 (
INFO  19:41:14,667 - #9 pet
INFO  19:41:14,667 - #16 *
INFO  19:41:14,667 - #9 jedan
INFO  19:41:14,667 - #15 -
INFO  19:41:14,667 - #10 1
INFO  19:41:14,667 - #31 )
INFO  19:41:14,667 - #16 *
INFO  19:41:14,668 - #9 bodovi
INFO  19:41:14,668 - #15 -
INFO  19:41:14,668 - #30 (
INFO  19:41:14,668 - #10 3
INFO  19:41:14,668 - #18 %
INFO  19:41:14,668 - #10 2
INFO  19:41:14,668 - #14 +
INFO  19:41:14,668 - #10 3
INFO  19:41:14,668 - #16 *
INFO  19:41:14,668 - #10 2
INFO  19:41:14,668 - #15 -
INFO  19:41:14,668 - #10 3
INFO  19:41:14,668 - #31 )
INFO  19:41:14,669 - #28 ;
INFO  19:41:14,669 - #3 print
INFO  19:41:14,669 - #30 (
INFO  19:41:14,669 - #9 bodovi
INFO  19:41:14,672 - #31 )
INFO  19:41:14,672 - #28 ;
INFO  19:41:14,672 - #4 read
INFO  19:41:14,672 - #30 (
INFO  19:41:14,672 - #9 bodovi
INFO  19:41:14,672 - #31 )
INFO  19:41:14,672 - #28 ;
INFO  19:41:14,672 - #9 bt
INFO  19:41:14,672 - #25 =
INFO  19:41:14,672 - #8 true
INFO  19:41:14,672 - #28 ;
INFO  19:41:14,672 - #32 if
INFO  19:41:14,672 - #30 (
INFO  19:41:14,672 - #9 bt
INFO  19:41:14,672 - #31 )
INFO  19:41:14,672 - #21 {
ERROR 19:41:14,672 - 
Sintaksna greska na liniji 48
INFO  19:41:14,672 - #3 print
INFO  19:41:14,673 - #30 (
INFO  19:41:14,673 - #9 bodovi
INFO  19:41:14,673 - #31 )
INFO  19:41:14,673 - #28 ;
INFO  19:41:14,673 - #22 }
INFO  19:41:14,674 - #33 else
INFO  19:41:14,674 - #21 {
INFO  19:41:14,674 - #3 print
INFO  19:41:14,674 - #30 (
INFO  19:41:14,674 - #9 bodovi
INFO  19:41:14,674 - #14 +
INFO  19:41:14,674 - #10 10
INFO  19:41:14,674 - #31 )
INFO  19:41:14,674 - #28 ;
INFO  19:41:14,674 - #22 }
INFO  19:41:14,674 - #32 if
INFO  19:41:14,674 - #30 (
INFO  19:41:14,675 - #9 bodovi
INFO  19:41:14,675 - #38 >
INFO  19:41:14,675 - #10 10
INFO  19:41:14,675 - #31 )
INFO  19:41:14,675 - #21 {
INFO  19:41:14,675 - #3 print
INFO  19:41:14,675 - #30 (
INFO  19:41:14,675 - #11 +
INFO  19:41:14,675 - #31 )
INFO  19:41:14,675 - #28 ;
INFO  19:41:14,675 - #22 }
INFO  19:41:14,675 - #33 else
INFO  19:41:14,676 - #21 {
INFO  19:41:14,676 - #3 print
INFO  19:41:14,676 - #30 (
INFO  19:41:14,676 - #11 -
INFO  19:41:14,676 - #31 )
INFO  19:41:14,676 - #28 ;
INFO  19:41:14,676 - #22 }
INFO  19:41:14,676 - #22 }
INFO  19:41:14,676 - #22 }
ERROR 19:41:14,676 - Izvrsen oporavak do 5 u liniji 48
ERROR 19:41:14,677 - 
Sintaksna greska na liniji 60
ERROR 19:41:14,678 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 63
INFO  19:44:51,186 - Kompajliranje ulaznog fajla test\program.mj
INFO  19:44:51,222 - #2 program
INFO  19:44:51,222 - #9 test301
INFO  19:44:51,222 - #5 const
INFO  19:44:51,223 - #9 int
INFO  19:44:51,223 - #9 nula
INFO  19:44:51,224 - #25 =
INFO  19:44:51,224 - #10 0
INFO  19:44:51,224 - #28 ;
INFO  19:44:51,224 - #5 const
INFO  19:44:51,226 - #9 int
INFO  19:44:51,226 - #9 jedan
INFO  19:44:51,226 - #25 =
INFO  19:44:51,226 - #10 1
INFO  19:44:51,226 - #28 ;
INFO  19:44:51,226 - #5 const
INFO  19:44:51,226 - #9 int
INFO  19:44:51,226 - #9 pet
INFO  19:44:51,226 - #25 =
INFO  19:44:51,226 - #10 5
INFO  19:44:51,226 - #28 ;
INFO  19:44:51,226 - #9 int
INFO  19:44:51,226 - #9 niz
INFO  19:44:51,226 - #23 [
INFO  19:44:51,227 - #24 ]
INFO  19:44:51,227 - #28 ;
INFO  19:44:51,227 - #9 char
INFO  19:44:51,228 - #9 nizch
INFO  19:44:51,228 - #23 [
INFO  19:44:51,228 - #24 ]
INFO  19:44:51,228 - #28 ;
INFO  19:44:51,228 - #21 {
INFO  19:44:51,228 - #9 int
INFO  19:44:51,229 - #9 main
INFO  19:44:51,229 - #30 (
INFO  19:44:51,230 - #31 )
INFO  19:44:51,230 - #9 int
INFO  19:44:51,231 - #9 bodovi
INFO  19:44:51,231 - #28 ;
INFO  19:44:51,231 - #9 bool
INFO  19:44:51,231 - #9 bt
INFO  19:44:51,231 - #28 ;
INFO  19:44:51,231 - #21 {
INFO  19:44:51,231 - #9 bodovi
INFO  19:44:51,232 - #25 =
INFO  19:44:51,232 - #10 0
INFO  19:44:51,232 - #28 ;
INFO  19:44:51,233 - #9 bodovi
INFO  19:44:51,233 - #26 ++
INFO  19:44:51,233 - #28 ;
INFO  19:44:51,233 - #9 bodovi
INFO  19:44:51,233 - #25 =
INFO  19:44:51,233 - #9 bodovi
INFO  19:44:51,233 - #14 +
INFO  19:44:51,233 - #9 jedan
INFO  19:44:51,234 - #28 ;
INFO  19:44:51,235 - #9 bodovi
INFO  19:44:51,235 - #25 =
INFO  19:44:51,235 - #9 bodovi
INFO  19:44:51,235 - #16 *
INFO  19:44:51,235 - #9 pet
INFO  19:44:51,235 - #28 ;
INFO  19:44:51,236 - #9 bodovi
INFO  19:44:51,236 - #27 --
INFO  19:44:51,236 - #28 ;
INFO  19:44:51,236 - #3 print
INFO  19:44:51,236 - #30 (
INFO  19:44:51,236 - #9 bodovi
INFO  19:44:51,236 - #31 )
INFO  19:44:51,236 - #28 ;
INFO  19:44:51,237 - #9 niz
INFO  19:44:51,237 - #25 =
INFO  19:44:51,237 - #7 new
INFO  19:44:51,237 - #9 int
INFO  19:44:51,237 - #23 [
INFO  19:44:51,237 - #10 3
INFO  19:44:51,237 - #24 ]
INFO  19:44:51,237 - #28 ;
INFO  19:44:51,237 - #9 niz
INFO  19:44:51,237 - #23 [
INFO  19:44:51,237 - #9 nula
INFO  19:44:51,238 - #24 ]
INFO  19:44:51,238 - #25 =
INFO  19:44:51,238 - #9 jedan
INFO  19:44:51,238 - #28 ;
INFO  19:44:51,238 - #9 niz
INFO  19:44:51,238 - #23 [
INFO  19:44:51,238 - #10 1
INFO  19:44:51,238 - #24 ]
INFO  19:44:51,238 - #25 =
INFO  19:44:51,238 - #10 2
INFO  19:44:51,238 - #28 ;
INFO  19:44:51,238 - #9 niz
INFO  19:44:51,238 - #23 [
INFO  19:44:51,238 - #9 niz
INFO  19:44:51,239 - #23 [
INFO  19:44:51,239 - #9 jedan
INFO  19:44:51,239 - #24 ]
INFO  19:44:51,239 - #24 ]
INFO  19:44:51,239 - #25 =
INFO  19:44:51,239 - #9 niz
INFO  19:44:51,239 - #23 [
INFO  19:44:51,239 - #9 niz
INFO  19:44:51,239 - #23 [
INFO  19:44:51,239 - #10 0
INFO  19:44:51,239 - #24 ]
INFO  19:44:51,239 - #24 ]
INFO  19:44:51,240 - #16 *
INFO  19:44:51,240 - #10 3
INFO  19:44:51,240 - #28 ;
INFO  19:44:51,240 - #9 bodovi
INFO  19:44:51,240 - #25 =
INFO  19:44:51,240 - #9 niz
INFO  19:44:51,240 - #23 [
INFO  19:44:51,240 - #10 2
INFO  19:44:51,240 - #24 ]
INFO  19:44:51,240 - #17 /
INFO  19:44:51,240 - #9 niz
INFO  19:44:51,241 - #23 [
INFO  19:44:51,241 - #10 0
INFO  19:44:51,241 - #24 ]
INFO  19:44:51,241 - #28 ;
INFO  19:44:51,241 - #3 print
INFO  19:44:51,241 - #30 (
INFO  19:44:51,241 - #9 bodovi
INFO  19:44:51,242 - #31 )
INFO  19:44:51,242 - #28 ;
INFO  19:44:51,242 - #3 print
INFO  19:44:51,242 - #30 (
INFO  19:44:51,242 - #9 niz
INFO  19:44:51,242 - #23 [
INFO  19:44:51,242 - #10 2
INFO  19:44:51,242 - #24 ]
INFO  19:44:51,242 - #31 )
INFO  19:44:51,242 - #28 ;
INFO  19:44:51,242 - #9 nizch
INFO  19:44:51,243 - #25 =
INFO  19:44:51,243 - #7 new
INFO  19:44:51,243 - #9 char
INFO  19:44:51,243 - #23 [
INFO  19:44:51,243 - #10 3
INFO  19:44:51,243 - #24 ]
INFO  19:44:51,243 - #28 ;
INFO  19:44:51,243 - #9 nizch
INFO  19:44:51,243 - #23 [
INFO  19:44:51,243 - #10 0
INFO  19:44:51,243 - #24 ]
INFO  19:44:51,243 - #25 =
INFO  19:44:51,243 - #11 a
INFO  19:44:51,243 - #28 ;
INFO  19:44:51,243 - #9 nizch
INFO  19:44:51,243 - #23 [
INFO  19:44:51,243 - #9 jedan
INFO  19:44:51,244 - #24 ]
INFO  19:44:51,244 - #25 =
INFO  19:44:51,244 - #11 b
INFO  19:44:51,244 - #28 ;
INFO  19:44:51,244 - #9 nizch
INFO  19:44:51,244 - #23 [
INFO  19:44:51,244 - #9 pet
INFO  19:44:51,244 - #15 -
INFO  19:44:51,244 - #10 3
INFO  19:44:51,245 - #24 ]
INFO  19:44:51,245 - #25 =
INFO  19:44:51,245 - #11 c
INFO  19:44:51,245 - #28 ;
INFO  19:44:51,245 - #3 print
INFO  19:44:51,245 - #30 (
INFO  19:44:51,245 - #9 nizch
INFO  19:44:51,245 - #23 [
INFO  19:44:51,245 - #10 1
INFO  19:44:51,245 - #24 ]
INFO  19:44:51,245 - #31 )
INFO  19:44:51,245 - #28 ;
INFO  19:44:51,245 - #3 print
INFO  19:44:51,245 - #30 (
INFO  19:44:51,245 - #9 nizch
INFO  19:44:51,245 - #23 [
INFO  19:44:51,246 - #9 jedan
INFO  19:44:51,246 - #16 *
INFO  19:44:51,246 - #10 2
INFO  19:44:51,246 - #24 ]
INFO  19:44:51,246 - #31 )
INFO  19:44:51,246 - #28 ;
INFO  19:44:51,246 - #9 bodovi
INFO  19:44:51,246 - #25 =
INFO  19:44:51,246 - #9 bodovi
INFO  19:44:51,246 - #14 +
INFO  19:44:51,246 - #30 (
INFO  19:44:51,246 - #9 pet
INFO  19:44:51,246 - #16 *
INFO  19:44:51,247 - #9 jedan
INFO  19:44:51,247 - #15 -
INFO  19:44:51,247 - #10 1
INFO  19:44:51,247 - #31 )
INFO  19:44:51,247 - #16 *
INFO  19:44:51,247 - #9 bodovi
INFO  19:44:51,247 - #15 -
INFO  19:44:51,247 - #30 (
INFO  19:44:51,247 - #10 3
INFO  19:44:51,247 - #18 %
INFO  19:44:51,247 - #10 2
INFO  19:44:51,248 - #14 +
INFO  19:44:51,248 - #10 3
INFO  19:44:51,248 - #16 *
INFO  19:44:51,248 - #10 2
INFO  19:44:51,248 - #15 -
INFO  19:44:51,248 - #10 3
INFO  19:44:51,248 - #31 )
INFO  19:44:51,248 - #28 ;
INFO  19:44:51,248 - #3 print
INFO  19:44:51,248 - #30 (
INFO  19:44:51,249 - #9 bodovi
INFO  19:44:51,251 - #31 )
INFO  19:44:51,252 - #28 ;
INFO  19:44:51,252 - #4 read
INFO  19:44:51,252 - #30 (
INFO  19:44:51,252 - #9 bodovi
INFO  19:44:51,252 - #31 )
INFO  19:44:51,252 - #28 ;
INFO  19:44:51,252 - #9 bt
INFO  19:44:51,252 - #25 =
INFO  19:44:51,252 - #8 true
INFO  19:44:51,252 - #28 ;
INFO  19:44:51,252 - #32 if
INFO  19:44:51,252 - #30 (
ERROR 19:44:51,252 - 
Sintaksna greska na liniji 48
INFO  19:44:51,252 - #9 bt
INFO  19:44:51,252 - #31 )
INFO  19:44:51,252 - #21 {
INFO  19:44:51,253 - #3 print
INFO  19:44:51,253 - #30 (
INFO  19:44:51,253 - #9 bodovi
INFO  19:44:51,253 - #31 )
INFO  19:44:51,253 - #28 ;
INFO  19:44:51,253 - #22 }
INFO  19:44:51,253 - #33 else
INFO  19:44:51,253 - #21 {
INFO  19:44:51,253 - #3 print
INFO  19:44:51,253 - #30 (
INFO  19:44:51,253 - #9 bodovi
INFO  19:44:51,253 - #14 +
INFO  19:44:51,253 - #10 10
INFO  19:44:51,253 - #31 )
INFO  19:44:51,253 - #28 ;
INFO  19:44:51,253 - #22 }
INFO  19:44:51,253 - #32 if
INFO  19:44:51,253 - #30 (
INFO  19:44:51,253 - #9 bodovi
INFO  19:44:51,253 - #38 >
INFO  19:44:51,253 - #10 10
INFO  19:44:51,253 - #31 )
INFO  19:44:51,254 - #21 {
INFO  19:44:51,254 - #3 print
INFO  19:44:51,254 - #30 (
INFO  19:44:51,254 - #11 +
INFO  19:44:51,255 - #31 )
INFO  19:44:51,255 - #28 ;
INFO  19:44:51,255 - #22 }
INFO  19:44:51,255 - #33 else
INFO  19:44:51,255 - #21 {
INFO  19:44:51,255 - #3 print
INFO  19:44:51,255 - #30 (
INFO  19:44:51,255 - #11 -
INFO  19:44:51,255 - #31 )
INFO  19:44:51,255 - #28 ;
INFO  19:44:51,255 - #22 }
INFO  19:44:51,255 - #22 }
INFO  19:44:51,255 - #22 }
ERROR 19:44:51,255 - Izvrsen oporavak do 5 u liniji 48
ERROR 19:44:51,256 - 
Sintaksna greska na liniji 60
ERROR 19:44:51,256 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 63
INFO  19:46:40,670 - Kompajliranje ulaznog fajla test\program.mj
INFO  19:46:40,706 - #2 program
INFO  19:46:40,706 - #9 test301
INFO  19:46:40,706 - #5 const
INFO  19:46:40,707 - #9 int
INFO  19:46:40,707 - #9 nula
INFO  19:46:40,707 - #25 =
INFO  19:46:40,707 - #10 0
INFO  19:46:40,707 - #28 ;
INFO  19:46:40,708 - #5 const
INFO  19:46:40,709 - #9 int
INFO  19:46:40,709 - #9 jedan
INFO  19:46:40,709 - #25 =
INFO  19:46:40,709 - #10 1
INFO  19:46:40,709 - #28 ;
INFO  19:46:40,709 - #5 const
INFO  19:46:40,709 - #9 int
INFO  19:46:40,709 - #9 pet
INFO  19:46:40,709 - #25 =
INFO  19:46:40,709 - #10 5
INFO  19:46:40,709 - #28 ;
INFO  19:46:40,709 - #9 int
INFO  19:46:40,710 - #9 niz
INFO  19:46:40,710 - #23 [
INFO  19:46:40,710 - #24 ]
INFO  19:46:40,710 - #28 ;
INFO  19:46:40,710 - #9 char
INFO  19:46:40,710 - #9 nizch
INFO  19:46:40,710 - #23 [
INFO  19:46:40,711 - #24 ]
INFO  19:46:40,711 - #28 ;
INFO  19:46:40,711 - #21 {
INFO  19:46:40,711 - #9 int
INFO  19:46:40,711 - #9 main
INFO  19:46:40,711 - #30 (
INFO  19:46:40,712 - #31 )
INFO  19:46:40,712 - #9 int
INFO  19:46:40,712 - #9 bodovi
INFO  19:46:40,712 - #28 ;
INFO  19:46:40,713 - #9 bool
INFO  19:46:40,713 - #9 bt
INFO  19:46:40,713 - #28 ;
INFO  19:46:40,713 - #21 {
INFO  19:46:40,713 - #9 bodovi
INFO  19:46:40,713 - #25 =
INFO  19:46:40,713 - #10 0
INFO  19:46:40,713 - #28 ;
INFO  19:46:40,714 - #9 bodovi
INFO  19:46:40,714 - #26 ++
INFO  19:46:40,714 - #28 ;
INFO  19:46:40,714 - #9 bodovi
INFO  19:46:40,714 - #25 =
INFO  19:46:40,714 - #9 bodovi
INFO  19:46:40,714 - #14 +
INFO  19:46:40,715 - #9 jedan
INFO  19:46:40,715 - #28 ;
INFO  19:46:40,716 - #9 bodovi
INFO  19:46:40,716 - #25 =
INFO  19:46:40,716 - #9 bodovi
INFO  19:46:40,716 - #16 *
INFO  19:46:40,716 - #9 pet
INFO  19:46:40,716 - #28 ;
INFO  19:46:40,717 - #9 bodovi
INFO  19:46:40,717 - #27 --
INFO  19:46:40,717 - #28 ;
INFO  19:46:40,717 - #3 print
INFO  19:46:40,717 - #30 (
INFO  19:46:40,717 - #9 bodovi
INFO  19:46:40,717 - #31 )
INFO  19:46:40,717 - #28 ;
INFO  19:46:40,717 - #9 niz
INFO  19:46:40,718 - #25 =
INFO  19:46:40,718 - #7 new
INFO  19:46:40,718 - #9 int
INFO  19:46:40,718 - #23 [
INFO  19:46:40,718 - #10 3
INFO  19:46:40,718 - #24 ]
INFO  19:46:40,718 - #28 ;
INFO  19:46:40,718 - #9 niz
INFO  19:46:40,718 - #23 [
INFO  19:46:40,718 - #9 nula
INFO  19:46:40,718 - #24 ]
INFO  19:46:40,718 - #25 =
INFO  19:46:40,719 - #9 jedan
INFO  19:46:40,719 - #28 ;
INFO  19:46:40,719 - #9 niz
INFO  19:46:40,719 - #23 [
INFO  19:46:40,719 - #10 1
INFO  19:46:40,719 - #24 ]
INFO  19:46:40,719 - #25 =
INFO  19:46:40,719 - #10 2
INFO  19:46:40,719 - #28 ;
INFO  19:46:40,719 - #9 niz
INFO  19:46:40,719 - #23 [
INFO  19:46:40,719 - #9 niz
INFO  19:46:40,720 - #23 [
INFO  19:46:40,720 - #9 jedan
INFO  19:46:40,720 - #24 ]
INFO  19:46:40,720 - #24 ]
INFO  19:46:40,720 - #25 =
INFO  19:46:40,720 - #9 niz
INFO  19:46:40,720 - #23 [
INFO  19:46:40,720 - #9 niz
INFO  19:46:40,720 - #23 [
INFO  19:46:40,720 - #10 0
INFO  19:46:40,720 - #24 ]
INFO  19:46:40,720 - #24 ]
INFO  19:46:40,720 - #16 *
INFO  19:46:40,720 - #10 3
INFO  19:46:40,720 - #28 ;
INFO  19:46:40,720 - #9 bodovi
INFO  19:46:40,721 - #25 =
INFO  19:46:40,721 - #9 niz
INFO  19:46:40,721 - #23 [
INFO  19:46:40,721 - #10 2
INFO  19:46:40,721 - #24 ]
INFO  19:46:40,721 - #17 /
INFO  19:46:40,721 - #9 niz
INFO  19:46:40,721 - #23 [
INFO  19:46:40,721 - #10 0
INFO  19:46:40,721 - #24 ]
INFO  19:46:40,721 - #28 ;
INFO  19:46:40,722 - #3 print
INFO  19:46:40,722 - #30 (
INFO  19:46:40,722 - #9 bodovi
INFO  19:46:40,722 - #31 )
INFO  19:46:40,722 - #28 ;
INFO  19:46:40,722 - #3 print
INFO  19:46:40,722 - #30 (
INFO  19:46:40,722 - #9 niz
INFO  19:46:40,722 - #23 [
INFO  19:46:40,722 - #10 2
INFO  19:46:40,722 - #24 ]
INFO  19:46:40,722 - #31 )
INFO  19:46:40,722 - #28 ;
INFO  19:46:40,722 - #9 nizch
INFO  19:46:40,722 - #25 =
INFO  19:46:40,722 - #7 new
INFO  19:46:40,722 - #9 char
INFO  19:46:40,722 - #23 [
INFO  19:46:40,722 - #10 3
INFO  19:46:40,722 - #24 ]
INFO  19:46:40,722 - #28 ;
INFO  19:46:40,722 - #9 nizch
INFO  19:46:40,722 - #23 [
INFO  19:46:40,723 - #10 0
INFO  19:46:40,723 - #24 ]
INFO  19:46:40,723 - #25 =
INFO  19:46:40,723 - #11 a
INFO  19:46:40,723 - #28 ;
INFO  19:46:40,723 - #9 nizch
INFO  19:46:40,723 - #23 [
INFO  19:46:40,723 - #9 jedan
INFO  19:46:40,723 - #24 ]
INFO  19:46:40,723 - #25 =
INFO  19:46:40,723 - #11 b
INFO  19:46:40,723 - #28 ;
INFO  19:46:40,723 - #9 nizch
INFO  19:46:40,723 - #23 [
INFO  19:46:40,723 - #9 pet
INFO  19:46:40,724 - #15 -
INFO  19:46:40,724 - #10 3
INFO  19:46:40,724 - #24 ]
INFO  19:46:40,724 - #25 =
INFO  19:46:40,724 - #11 c
INFO  19:46:40,724 - #28 ;
INFO  19:46:40,724 - #3 print
INFO  19:46:40,724 - #30 (
INFO  19:46:40,724 - #9 nizch
INFO  19:46:40,724 - #23 [
INFO  19:46:40,724 - #10 1
INFO  19:46:40,725 - #24 ]
INFO  19:46:40,725 - #31 )
INFO  19:46:40,725 - #28 ;
INFO  19:46:40,725 - #3 print
INFO  19:46:40,725 - #30 (
INFO  19:46:40,725 - #9 nizch
INFO  19:46:40,725 - #23 [
INFO  19:46:40,725 - #9 jedan
INFO  19:46:40,725 - #16 *
INFO  19:46:40,725 - #10 2
INFO  19:46:40,725 - #24 ]
INFO  19:46:40,725 - #31 )
INFO  19:46:40,725 - #28 ;
INFO  19:46:40,725 - #9 bodovi
INFO  19:46:40,725 - #25 =
INFO  19:46:40,725 - #9 bodovi
INFO  19:46:40,725 - #14 +
INFO  19:46:40,725 - #30 (
INFO  19:46:40,725 - #9 pet
INFO  19:46:40,726 - #16 *
INFO  19:46:40,726 - #9 jedan
INFO  19:46:40,726 - #15 -
INFO  19:46:40,726 - #10 1
INFO  19:46:40,726 - #31 )
INFO  19:46:40,726 - #16 *
INFO  19:46:40,726 - #9 bodovi
INFO  19:46:40,726 - #15 -
INFO  19:46:40,726 - #30 (
INFO  19:46:40,726 - #10 3
INFO  19:46:40,726 - #18 %
INFO  19:46:40,726 - #10 2
INFO  19:46:40,727 - #14 +
INFO  19:46:40,727 - #10 3
INFO  19:46:40,727 - #16 *
INFO  19:46:40,727 - #10 2
INFO  19:46:40,727 - #15 -
INFO  19:46:40,727 - #10 3
INFO  19:46:40,727 - #31 )
INFO  19:46:40,727 - #28 ;
INFO  19:46:40,727 - #3 print
INFO  19:46:40,727 - #30 (
INFO  19:46:40,727 - #9 bodovi
INFO  19:46:40,730 - #31 )
INFO  19:46:40,730 - #28 ;
INFO  19:46:40,730 - #4 read
INFO  19:46:40,730 - #30 (
INFO  19:46:40,730 - #9 bodovi
INFO  19:46:40,730 - #31 )
INFO  19:46:40,730 - #28 ;
INFO  19:46:40,730 - #9 bt
INFO  19:46:40,731 - #25 =
INFO  19:46:40,731 - #8 true
INFO  19:46:40,731 - #28 ;
INFO  19:46:40,731 - #32 if
INFO  19:46:40,731 - #30 (
ERROR 19:46:40,731 - 
Sintaksna greska na liniji 48
INFO  19:46:40,731 - #9 bt
INFO  19:46:40,731 - #31 )
INFO  19:46:40,731 - #21 {
INFO  19:46:40,731 - #3 print
INFO  19:46:40,731 - #30 (
INFO  19:46:40,731 - #9 bodovi
INFO  19:46:40,731 - #31 )
INFO  19:46:40,732 - #28 ;
INFO  19:46:40,732 - #22 }
INFO  19:46:40,732 - #33 else
INFO  19:46:40,732 - #21 {
INFO  19:46:40,732 - #3 print
INFO  19:46:40,732 - #30 (
INFO  19:46:40,732 - #9 bodovi
INFO  19:46:40,732 - #14 +
INFO  19:46:40,732 - #10 10
INFO  19:46:40,732 - #31 )
INFO  19:46:40,732 - #28 ;
INFO  19:46:40,732 - #22 }
INFO  19:46:40,732 - #32 if
INFO  19:46:40,732 - #30 (
INFO  19:46:40,732 - #9 bodovi
INFO  19:46:40,732 - #38 >
INFO  19:46:40,732 - #10 10
INFO  19:46:40,732 - #31 )
INFO  19:46:40,732 - #21 {
INFO  19:46:40,732 - #3 print
INFO  19:46:40,732 - #30 (
INFO  19:46:40,732 - #11 +
INFO  19:46:40,732 - #31 )
INFO  19:46:40,733 - #28 ;
INFO  19:46:40,733 - #22 }
INFO  19:46:40,733 - #33 else
INFO  19:46:40,733 - #21 {
INFO  19:46:40,733 - #3 print
INFO  19:46:40,733 - #30 (
INFO  19:46:40,733 - #11 -
INFO  19:46:40,733 - #31 )
INFO  19:46:40,733 - #28 ;
INFO  19:46:40,733 - #22 }
INFO  19:46:40,733 - #22 }
INFO  19:46:40,733 - #22 }
ERROR 19:46:40,733 - Izvrsen oporavak do 5 u liniji 48
ERROR 19:46:40,734 - 
Sintaksna greska na liniji 60
ERROR 19:46:40,734 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 63
INFO  19:48:11,658 - Kompajliranje ulaznog fajla test\program.mj
INFO  19:48:11,693 - #2 program
INFO  19:48:11,693 - #9 test301
INFO  19:48:11,693 - #5 const
INFO  19:48:11,694 - #9 int
INFO  19:48:11,694 - #9 nula
INFO  19:48:11,694 - #25 =
INFO  19:48:11,694 - #10 0
INFO  19:48:11,694 - #28 ;
INFO  19:48:11,695 - #5 const
INFO  19:48:11,696 - #9 int
INFO  19:48:11,696 - #9 jedan
INFO  19:48:11,696 - #25 =
INFO  19:48:11,696 - #10 1
INFO  19:48:11,696 - #28 ;
INFO  19:48:11,696 - #5 const
INFO  19:48:11,696 - #9 int
INFO  19:48:11,696 - #9 pet
INFO  19:48:11,696 - #25 =
INFO  19:48:11,696 - #10 5
INFO  19:48:11,696 - #28 ;
INFO  19:48:11,696 - #9 int
INFO  19:48:11,696 - #9 niz
INFO  19:48:11,696 - #23 [
INFO  19:48:11,696 - #24 ]
INFO  19:48:11,696 - #28 ;
INFO  19:48:11,697 - #9 char
INFO  19:48:11,697 - #9 nizch
INFO  19:48:11,697 - #23 [
INFO  19:48:11,697 - #24 ]
INFO  19:48:11,697 - #28 ;
INFO  19:48:11,697 - #21 {
INFO  19:48:11,697 - #9 int
INFO  19:48:11,698 - #9 main
INFO  19:48:11,698 - #30 (
INFO  19:48:11,698 - #31 )
INFO  19:48:11,699 - #9 int
INFO  19:48:11,699 - #9 bodovi
INFO  19:48:11,699 - #28 ;
INFO  19:48:11,699 - #9 bool
INFO  19:48:11,699 - #9 bt
INFO  19:48:11,699 - #28 ;
INFO  19:48:11,699 - #21 {
INFO  19:48:11,699 - #9 bodovi
INFO  19:48:11,700 - #25 =
INFO  19:48:11,700 - #10 0
INFO  19:48:11,700 - #28 ;
INFO  19:48:11,701 - #9 bodovi
INFO  19:48:11,701 - #26 ++
INFO  19:48:11,701 - #28 ;
INFO  19:48:11,701 - #9 bodovi
INFO  19:48:11,701 - #25 =
INFO  19:48:11,701 - #9 bodovi
INFO  19:48:11,701 - #14 +
INFO  19:48:11,701 - #9 jedan
INFO  19:48:11,702 - #28 ;
INFO  19:48:11,702 - #9 bodovi
INFO  19:48:11,703 - #25 =
INFO  19:48:11,703 - #9 bodovi
INFO  19:48:11,703 - #16 *
INFO  19:48:11,703 - #9 pet
INFO  19:48:11,703 - #28 ;
INFO  19:48:11,704 - #9 bodovi
INFO  19:48:11,704 - #27 --
INFO  19:48:11,704 - #28 ;
INFO  19:48:11,704 - #3 print
INFO  19:48:11,704 - #30 (
INFO  19:48:11,704 - #9 bodovi
INFO  19:48:11,704 - #31 )
INFO  19:48:11,704 - #28 ;
INFO  19:48:11,704 - #9 niz
INFO  19:48:11,704 - #25 =
INFO  19:48:11,704 - #7 new
INFO  19:48:11,704 - #9 int
INFO  19:48:11,705 - #23 [
INFO  19:48:11,705 - #10 3
INFO  19:48:11,705 - #24 ]
INFO  19:48:11,705 - #28 ;
INFO  19:48:11,705 - #9 niz
INFO  19:48:11,705 - #23 [
INFO  19:48:11,705 - #9 nula
INFO  19:48:11,705 - #24 ]
INFO  19:48:11,705 - #25 =
INFO  19:48:11,706 - #9 jedan
INFO  19:48:11,706 - #28 ;
INFO  19:48:11,709 - #9 niz
INFO  19:48:11,709 - #23 [
INFO  19:48:11,709 - #10 1
INFO  19:48:11,709 - #24 ]
INFO  19:48:11,710 - #25 =
INFO  19:48:11,710 - #10 2
INFO  19:48:11,710 - #28 ;
INFO  19:48:11,710 - #9 niz
INFO  19:48:11,710 - #23 [
INFO  19:48:11,710 - #9 niz
INFO  19:48:11,710 - #23 [
INFO  19:48:11,710 - #9 jedan
INFO  19:48:11,710 - #24 ]
INFO  19:48:11,710 - #24 ]
INFO  19:48:11,710 - #25 =
INFO  19:48:11,710 - #9 niz
INFO  19:48:11,710 - #23 [
INFO  19:48:11,710 - #9 niz
INFO  19:48:11,711 - #23 [
INFO  19:48:11,711 - #10 0
INFO  19:48:11,711 - #24 ]
INFO  19:48:11,711 - #24 ]
INFO  19:48:11,711 - #16 *
INFO  19:48:11,711 - #10 3
INFO  19:48:11,711 - #28 ;
INFO  19:48:11,711 - #9 bodovi
INFO  19:48:11,711 - #25 =
INFO  19:48:11,711 - #9 niz
INFO  19:48:11,711 - #23 [
INFO  19:48:11,711 - #10 2
INFO  19:48:11,711 - #24 ]
INFO  19:48:11,711 - #17 /
INFO  19:48:11,711 - #9 niz
INFO  19:48:11,712 - #23 [
INFO  19:48:11,712 - #10 0
INFO  19:48:11,712 - #24 ]
INFO  19:48:11,712 - #28 ;
INFO  19:48:11,712 - #3 print
INFO  19:48:11,712 - #30 (
INFO  19:48:11,712 - #9 bodovi
INFO  19:48:11,712 - #31 )
INFO  19:48:11,712 - #28 ;
INFO  19:48:11,712 - #3 print
INFO  19:48:11,713 - #30 (
INFO  19:48:11,713 - #9 niz
INFO  19:48:11,713 - #23 [
INFO  19:48:11,713 - #10 2
INFO  19:48:11,713 - #24 ]
INFO  19:48:11,713 - #31 )
INFO  19:48:11,713 - #28 ;
INFO  19:48:11,713 - #9 nizch
INFO  19:48:11,713 - #25 =
INFO  19:48:11,713 - #7 new
INFO  19:48:11,713 - #9 char
INFO  19:48:11,713 - #23 [
INFO  19:48:11,713 - #10 3
INFO  19:48:11,713 - #24 ]
INFO  19:48:11,713 - #28 ;
INFO  19:48:11,713 - #9 nizch
INFO  19:48:11,713 - #23 [
INFO  19:48:11,713 - #10 0
INFO  19:48:11,713 - #24 ]
INFO  19:48:11,713 - #25 =
INFO  19:48:11,714 - #11 a
INFO  19:48:11,714 - #28 ;
INFO  19:48:11,714 - #9 nizch
INFO  19:48:11,714 - #23 [
INFO  19:48:11,714 - #9 jedan
INFO  19:48:11,714 - #24 ]
INFO  19:48:11,714 - #25 =
INFO  19:48:11,714 - #11 b
INFO  19:48:11,714 - #28 ;
INFO  19:48:11,714 - #9 nizch
INFO  19:48:11,714 - #23 [
INFO  19:48:11,714 - #9 pet
INFO  19:48:11,714 - #15 -
INFO  19:48:11,714 - #10 3
INFO  19:48:11,715 - #24 ]
INFO  19:48:11,715 - #25 =
INFO  19:48:11,715 - #11 c
INFO  19:48:11,715 - #28 ;
INFO  19:48:11,715 - #3 print
INFO  19:48:11,715 - #30 (
INFO  19:48:11,715 - #9 nizch
INFO  19:48:11,715 - #23 [
INFO  19:48:11,715 - #10 1
INFO  19:48:11,715 - #24 ]
INFO  19:48:11,715 - #31 )
INFO  19:48:11,715 - #28 ;
INFO  19:48:11,715 - #3 print
INFO  19:48:11,715 - #30 (
INFO  19:48:11,715 - #9 nizch
INFO  19:48:11,715 - #23 [
INFO  19:48:11,715 - #9 jedan
INFO  19:48:11,715 - #16 *
INFO  19:48:11,715 - #10 2
INFO  19:48:11,715 - #24 ]
INFO  19:48:11,715 - #31 )
INFO  19:48:11,715 - #28 ;
INFO  19:48:11,716 - #9 bodovi
INFO  19:48:11,716 - #25 =
INFO  19:48:11,716 - #9 bodovi
INFO  19:48:11,716 - #14 +
INFO  19:48:11,716 - #30 (
INFO  19:48:11,716 - #9 pet
INFO  19:48:11,716 - #16 *
INFO  19:48:11,716 - #9 jedan
INFO  19:48:11,716 - #15 -
INFO  19:48:11,716 - #10 1
INFO  19:48:11,716 - #31 )
INFO  19:48:11,716 - #16 *
INFO  19:48:11,716 - #9 bodovi
INFO  19:48:11,716 - #15 -
INFO  19:48:11,716 - #30 (
INFO  19:48:11,716 - #10 3
INFO  19:48:11,716 - #18 %
INFO  19:48:11,717 - #10 2
INFO  19:48:11,717 - #14 +
INFO  19:48:11,717 - #10 3
INFO  19:48:11,717 - #16 *
INFO  19:48:11,717 - #10 2
INFO  19:48:11,717 - #15 -
INFO  19:48:11,718 - #10 3
INFO  19:48:11,718 - #31 )
INFO  19:48:11,718 - #28 ;
INFO  19:48:11,718 - #3 print
INFO  19:48:11,718 - #30 (
INFO  19:48:11,718 - #9 bodovi
INFO  19:48:11,718 - #31 )
INFO  19:48:11,718 - #28 ;
INFO  19:48:11,718 - #4 read
INFO  19:48:11,718 - #30 (
INFO  19:48:11,718 - #9 bodovi
INFO  19:48:11,718 - #31 )
INFO  19:48:11,718 - #28 ;
INFO  19:48:11,718 - #9 bt
INFO  19:48:11,718 - #25 =
INFO  19:48:11,718 - #8 true
INFO  19:48:11,718 - #28 ;
INFO  19:48:11,718 - #32 if
INFO  19:48:11,718 - #30 (
INFO  19:48:11,718 - #9 bt
INFO  19:48:11,719 - #31 )
INFO  19:48:11,719 - #21 {
ERROR 19:48:11,719 - 
Sintaksna greska na liniji 48
INFO  19:48:11,719 - #3 print
INFO  19:48:11,719 - #30 (
INFO  19:48:11,719 - #9 bodovi
INFO  19:48:11,719 - #31 )
INFO  19:48:11,719 - #28 ;
INFO  19:48:11,719 - #22 }
INFO  19:48:11,719 - #33 else
INFO  19:48:11,719 - #21 {
INFO  19:48:11,720 - #3 print
INFO  19:48:11,720 - #30 (
INFO  19:48:11,720 - #9 bodovi
INFO  19:48:11,720 - #14 +
INFO  19:48:11,720 - #10 10
INFO  19:48:11,720 - #31 )
INFO  19:48:11,720 - #28 ;
INFO  19:48:11,720 - #22 }
INFO  19:48:11,720 - #32 if
INFO  19:48:11,720 - #30 (
INFO  19:48:11,720 - #9 bodovi
INFO  19:48:11,720 - #38 >
INFO  19:48:11,720 - #10 10
INFO  19:48:11,720 - #31 )
INFO  19:48:11,720 - #21 {
INFO  19:48:11,720 - #3 print
INFO  19:48:11,720 - #30 (
INFO  19:48:11,720 - #11 +
INFO  19:48:11,720 - #31 )
INFO  19:48:11,720 - #28 ;
INFO  19:48:11,720 - #22 }
INFO  19:48:11,720 - #33 else
INFO  19:48:11,720 - #21 {
INFO  19:48:11,721 - #3 print
INFO  19:48:11,721 - #30 (
INFO  19:48:11,721 - #11 -
INFO  19:48:11,721 - #31 )
INFO  19:48:11,721 - #28 ;
INFO  19:48:11,721 - #22 }
INFO  19:48:11,721 - #22 }
INFO  19:48:11,721 - #22 }
ERROR 19:48:11,721 - Izvrsen oporavak do 5 u liniji 48
ERROR 19:48:11,722 - 
Sintaksna greska na liniji 60
ERROR 19:48:11,723 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 63
INFO  19:49:13,642 - Kompajliranje ulaznog fajla test\program.mj
INFO  19:49:13,674 - #2 program
INFO  19:49:13,674 - #9 test301
INFO  19:49:13,674 - #5 const
INFO  19:49:13,675 - #9 int
INFO  19:49:13,675 - #9 nula
INFO  19:49:13,676 - #25 =
INFO  19:49:13,676 - #10 0
INFO  19:49:13,676 - #28 ;
INFO  19:49:13,676 - #5 const
INFO  19:49:13,677 - #9 int
INFO  19:49:13,677 - #9 jedan
INFO  19:49:13,677 - #25 =
INFO  19:49:13,677 - #10 1
INFO  19:49:13,678 - #28 ;
INFO  19:49:13,678 - #5 const
INFO  19:49:13,678 - #9 int
INFO  19:49:13,678 - #9 pet
INFO  19:49:13,678 - #25 =
INFO  19:49:13,678 - #10 5
INFO  19:49:13,678 - #28 ;
INFO  19:49:13,678 - #9 int
INFO  19:49:13,678 - #9 niz
INFO  19:49:13,678 - #23 [
INFO  19:49:13,678 - #24 ]
INFO  19:49:13,678 - #28 ;
INFO  19:49:13,679 - #9 char
INFO  19:49:13,679 - #9 nizch
INFO  19:49:13,679 - #23 [
INFO  19:49:13,679 - #24 ]
INFO  19:49:13,680 - #28 ;
INFO  19:49:13,680 - #21 {
INFO  19:49:13,680 - #9 int
INFO  19:49:13,680 - #9 main
INFO  19:49:13,680 - #30 (
INFO  19:49:13,681 - #31 )
INFO  19:49:13,681 - #9 int
INFO  19:49:13,681 - #9 bodovi
INFO  19:49:13,682 - #28 ;
INFO  19:49:13,682 - #9 bool
INFO  19:49:13,682 - #9 bt
INFO  19:49:13,682 - #28 ;
INFO  19:49:13,682 - #21 {
INFO  19:49:13,682 - #9 bodovi
INFO  19:49:13,682 - #25 =
INFO  19:49:13,683 - #10 0
INFO  19:49:13,683 - #28 ;
INFO  19:49:13,683 - #9 bodovi
INFO  19:49:13,683 - #26 ++
INFO  19:49:13,683 - #28 ;
INFO  19:49:13,684 - #9 bodovi
INFO  19:49:13,684 - #25 =
INFO  19:49:13,684 - #9 bodovi
INFO  19:49:13,684 - #14 +
INFO  19:49:13,684 - #9 jedan
INFO  19:49:13,684 - #28 ;
INFO  19:49:13,685 - #9 bodovi
INFO  19:49:13,685 - #25 =
INFO  19:49:13,685 - #9 bodovi
INFO  19:49:13,685 - #16 *
INFO  19:49:13,685 - #9 pet
INFO  19:49:13,686 - #28 ;
INFO  19:49:13,686 - #9 bodovi
INFO  19:49:13,686 - #27 --
INFO  19:49:13,687 - #28 ;
INFO  19:49:13,687 - #3 print
INFO  19:49:13,687 - #30 (
INFO  19:49:13,687 - #9 bodovi
INFO  19:49:13,687 - #31 )
INFO  19:49:13,687 - #28 ;
INFO  19:49:13,687 - #9 niz
INFO  19:49:13,687 - #25 =
INFO  19:49:13,687 - #7 new
INFO  19:49:13,687 - #9 int
INFO  19:49:13,687 - #23 [
INFO  19:49:13,687 - #10 3
INFO  19:49:13,687 - #24 ]
INFO  19:49:13,688 - #28 ;
INFO  19:49:13,688 - #9 niz
INFO  19:49:13,688 - #23 [
INFO  19:49:13,688 - #9 nula
INFO  19:49:13,688 - #24 ]
INFO  19:49:13,688 - #25 =
INFO  19:49:13,688 - #9 jedan
INFO  19:49:13,688 - #28 ;
INFO  19:49:13,688 - #9 niz
INFO  19:49:13,688 - #23 [
INFO  19:49:13,688 - #10 1
INFO  19:49:13,689 - #24 ]
INFO  19:49:13,689 - #25 =
INFO  19:49:13,689 - #10 2
INFO  19:49:13,689 - #28 ;
INFO  19:49:13,689 - #9 niz
INFO  19:49:13,689 - #23 [
INFO  19:49:13,689 - #9 niz
INFO  19:49:13,689 - #23 [
INFO  19:49:13,689 - #9 jedan
INFO  19:49:13,689 - #24 ]
INFO  19:49:13,689 - #24 ]
INFO  19:49:13,689 - #25 =
INFO  19:49:13,689 - #9 niz
INFO  19:49:13,689 - #23 [
INFO  19:49:13,690 - #9 niz
INFO  19:49:13,690 - #23 [
INFO  19:49:13,690 - #10 0
INFO  19:49:13,690 - #24 ]
INFO  19:49:13,690 - #24 ]
INFO  19:49:13,690 - #16 *
INFO  19:49:13,690 - #10 3
INFO  19:49:13,690 - #28 ;
INFO  19:49:13,690 - #9 bodovi
INFO  19:49:13,690 - #25 =
INFO  19:49:13,690 - #9 niz
INFO  19:49:13,690 - #23 [
INFO  19:49:13,691 - #10 2
INFO  19:49:13,691 - #24 ]
INFO  19:49:13,691 - #17 /
INFO  19:49:13,691 - #9 niz
INFO  19:49:13,691 - #23 [
INFO  19:49:13,691 - #10 0
INFO  19:49:13,691 - #24 ]
INFO  19:49:13,691 - #28 ;
INFO  19:49:13,691 - #3 print
INFO  19:49:13,691 - #30 (
INFO  19:49:13,692 - #9 bodovi
INFO  19:49:13,692 - #31 )
INFO  19:49:13,692 - #28 ;
INFO  19:49:13,692 - #3 print
INFO  19:49:13,692 - #30 (
INFO  19:49:13,692 - #9 niz
INFO  19:49:13,692 - #23 [
INFO  19:49:13,692 - #10 2
INFO  19:49:13,692 - #24 ]
INFO  19:49:13,692 - #31 )
INFO  19:49:13,692 - #28 ;
INFO  19:49:13,692 - #9 nizch
INFO  19:49:13,692 - #25 =
INFO  19:49:13,692 - #7 new
INFO  19:49:13,692 - #9 char
INFO  19:49:13,693 - #23 [
INFO  19:49:13,693 - #10 3
INFO  19:49:13,693 - #24 ]
INFO  19:49:13,693 - #28 ;
INFO  19:49:13,693 - #9 nizch
INFO  19:49:13,693 - #23 [
INFO  19:49:13,693 - #10 0
INFO  19:49:13,693 - #24 ]
INFO  19:49:13,693 - #25 =
INFO  19:49:13,693 - #11 a
INFO  19:49:13,696 - #28 ;
INFO  19:49:13,696 - #9 nizch
INFO  19:49:13,696 - #23 [
INFO  19:49:13,696 - #9 jedan
INFO  19:49:13,696 - #24 ]
INFO  19:49:13,696 - #25 =
INFO  19:49:13,696 - #11 b
INFO  19:49:13,696 - #28 ;
INFO  19:49:13,696 - #9 nizch
INFO  19:49:13,696 - #23 [
INFO  19:49:13,696 - #9 pet
INFO  19:49:13,696 - #15 -
INFO  19:49:13,696 - #10 3
INFO  19:49:13,697 - #24 ]
INFO  19:49:13,697 - #25 =
INFO  19:49:13,697 - #11 c
INFO  19:49:13,697 - #28 ;
INFO  19:49:13,697 - #3 print
INFO  19:49:13,697 - #30 (
INFO  19:49:13,697 - #9 nizch
INFO  19:49:13,697 - #23 [
INFO  19:49:13,697 - #10 1
INFO  19:49:13,697 - #24 ]
INFO  19:49:13,697 - #31 )
INFO  19:49:13,697 - #28 ;
INFO  19:49:13,697 - #3 print
INFO  19:49:13,697 - #30 (
INFO  19:49:13,697 - #9 nizch
INFO  19:49:13,698 - #23 [
INFO  19:49:13,698 - #9 jedan
INFO  19:49:13,698 - #16 *
INFO  19:49:13,698 - #10 2
INFO  19:49:13,698 - #24 ]
INFO  19:49:13,698 - #31 )
INFO  19:49:13,698 - #28 ;
INFO  19:49:13,698 - #9 bodovi
INFO  19:49:13,698 - #25 =
INFO  19:49:13,698 - #9 bodovi
INFO  19:49:13,698 - #14 +
INFO  19:49:13,698 - #30 (
INFO  19:49:13,698 - #9 pet
INFO  19:49:13,698 - #16 *
INFO  19:49:13,698 - #9 jedan
INFO  19:49:13,698 - #15 -
INFO  19:49:13,698 - #10 1
INFO  19:49:13,698 - #31 )
INFO  19:49:13,698 - #16 *
INFO  19:49:13,699 - #9 bodovi
INFO  19:49:13,699 - #15 -
INFO  19:49:13,699 - #30 (
INFO  19:49:13,699 - #10 3
INFO  19:49:13,699 - #18 %
INFO  19:49:13,699 - #10 2
INFO  19:49:13,700 - #14 +
INFO  19:49:13,700 - #10 3
INFO  19:49:13,700 - #16 *
INFO  19:49:13,700 - #10 2
INFO  19:49:13,700 - #15 -
INFO  19:49:13,700 - #10 3
INFO  19:49:13,700 - #31 )
INFO  19:49:13,700 - #28 ;
INFO  19:49:13,700 - #3 print
INFO  19:49:13,700 - #30 (
INFO  19:49:13,700 - #9 bodovi
INFO  19:49:13,700 - #31 )
INFO  19:49:13,701 - #28 ;
INFO  19:49:13,701 - #4 read
INFO  19:49:13,701 - #30 (
INFO  19:49:13,701 - #9 bodovi
INFO  19:49:13,701 - #31 )
INFO  19:49:13,701 - #28 ;
INFO  19:49:13,701 - #9 bt
INFO  19:49:13,701 - #25 =
INFO  19:49:13,701 - #8 true
INFO  19:49:13,701 - #28 ;
INFO  19:49:13,701 - #32 if
INFO  19:49:13,701 - #30 (
INFO  19:49:13,701 - #9 bt
INFO  19:49:13,701 - #31 )
INFO  19:49:13,701 - #21 {
ERROR 19:49:13,701 - 
Sintaksna greska na liniji 48
INFO  19:49:13,701 - #3 print
INFO  19:49:13,701 - #30 (
INFO  19:49:13,701 - #9 bodovi
INFO  19:49:13,702 - #31 )
INFO  19:49:13,702 - #28 ;
INFO  19:49:13,702 - #22 }
INFO  19:49:13,702 - #33 else
INFO  19:49:13,702 - #21 {
INFO  19:49:13,702 - #3 print
INFO  19:49:13,702 - #30 (
INFO  19:49:13,702 - #9 bodovi
INFO  19:49:13,702 - #14 +
INFO  19:49:13,702 - #10 10
INFO  19:49:13,702 - #31 )
INFO  19:49:13,702 - #28 ;
INFO  19:49:13,702 - #22 }
INFO  19:49:13,702 - #32 if
INFO  19:49:13,702 - #30 (
INFO  19:49:13,702 - #9 bodovi
INFO  19:49:13,702 - #38 >
INFO  19:49:13,703 - #10 10
INFO  19:49:13,703 - #31 )
INFO  19:49:13,703 - #21 {
INFO  19:49:13,703 - #3 print
INFO  19:49:13,703 - #30 (
INFO  19:49:13,703 - #11 +
INFO  19:49:13,703 - #31 )
INFO  19:49:13,703 - #28 ;
INFO  19:49:13,703 - #22 }
INFO  19:49:13,703 - #33 else
INFO  19:49:13,703 - #21 {
INFO  19:49:13,703 - #3 print
INFO  19:49:13,703 - #30 (
INFO  19:49:13,703 - #11 -
INFO  19:49:13,703 - #31 )
INFO  19:49:13,703 - #28 ;
INFO  19:49:13,703 - #22 }
INFO  19:49:13,703 - #22 }
INFO  19:49:13,703 - #22 }
ERROR 19:49:13,703 - Izvrsen oporavak do 5 u liniji 48
ERROR 19:49:13,705 - 
Sintaksna greska na liniji 60
ERROR 19:49:13,705 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 63
INFO  20:27:46,828 - Kompajliranje ulaznog fajla test\program.mj
INFO  20:27:46,864 - #2 program
INFO  20:27:46,864 - #9 test301
INFO  20:27:46,864 - #5 const
INFO  20:27:46,865 - #9 int
INFO  20:27:46,865 - #9 nula
INFO  20:27:46,866 - #25 =
INFO  20:27:46,866 - #10 0
INFO  20:27:46,866 - #28 ;
INFO  20:27:46,866 - #5 const
INFO  20:27:46,867 - #9 int
INFO  20:27:46,867 - #9 jedan
INFO  20:27:46,868 - #25 =
INFO  20:27:46,868 - #10 1
INFO  20:27:46,868 - #28 ;
INFO  20:27:46,868 - #5 const
INFO  20:27:46,868 - #9 int
INFO  20:27:46,868 - #9 pet
INFO  20:27:46,868 - #25 =
INFO  20:27:46,868 - #10 5
INFO  20:27:46,868 - #28 ;
INFO  20:27:46,868 - #9 int
INFO  20:27:46,868 - #9 niz
INFO  20:27:46,869 - #23 [
INFO  20:27:46,869 - #24 ]
INFO  20:27:46,869 - #28 ;
INFO  20:27:46,869 - #9 char
INFO  20:27:46,870 - #9 nizch
INFO  20:27:46,870 - #23 [
INFO  20:27:46,870 - #24 ]
INFO  20:27:46,870 - #28 ;
INFO  20:27:46,870 - #21 {
INFO  20:27:46,870 - #9 int
INFO  20:27:46,871 - #9 main
INFO  20:27:46,871 - #30 (
INFO  20:27:46,872 - #31 )
INFO  20:27:46,872 - #9 int
INFO  20:27:46,872 - #9 bodovi
INFO  20:27:46,872 - #28 ;
INFO  20:27:46,873 - #9 bool
INFO  20:27:46,873 - #9 bt
INFO  20:27:46,873 - #28 ;
INFO  20:27:46,873 - #21 {
INFO  20:27:46,873 - #9 bodovi
INFO  20:27:46,873 - #25 =
INFO  20:27:46,873 - #10 0
INFO  20:27:46,873 - #28 ;
INFO  20:27:46,874 - #9 bodovi
INFO  20:27:46,874 - #26 ++
INFO  20:27:46,874 - #28 ;
INFO  20:27:46,874 - #9 bodovi
INFO  20:27:46,874 - #25 =
INFO  20:27:46,874 - #9 bodovi
INFO  20:27:46,874 - #14 +
INFO  20:27:46,874 - #9 jedan
INFO  20:27:46,875 - #28 ;
INFO  20:27:46,876 - #9 bodovi
INFO  20:27:46,876 - #25 =
INFO  20:27:46,876 - #9 bodovi
INFO  20:27:46,876 - #16 *
INFO  20:27:46,876 - #9 pet
INFO  20:27:46,876 - #28 ;
INFO  20:27:46,877 - #9 bodovi
INFO  20:27:46,877 - #27 --
INFO  20:27:46,877 - #28 ;
INFO  20:27:46,877 - #3 print
INFO  20:27:46,877 - #30 (
INFO  20:27:46,877 - #9 bodovi
INFO  20:27:46,877 - #31 )
INFO  20:27:46,877 - #28 ;
INFO  20:27:46,877 - #9 niz
INFO  20:27:46,877 - #25 =
INFO  20:27:46,877 - #7 new
INFO  20:27:46,878 - #9 int
INFO  20:27:46,878 - #23 [
INFO  20:27:46,878 - #10 3
INFO  20:27:46,878 - #24 ]
INFO  20:27:46,878 - #28 ;
INFO  20:27:46,878 - #9 niz
INFO  20:27:46,878 - #23 [
INFO  20:27:46,878 - #9 nula
INFO  20:27:46,878 - #24 ]
INFO  20:27:46,878 - #25 =
INFO  20:27:46,878 - #9 jedan
INFO  20:27:46,878 - #28 ;
INFO  20:27:46,878 - #9 niz
INFO  20:27:46,878 - #23 [
INFO  20:27:46,879 - #10 1
INFO  20:27:46,879 - #24 ]
INFO  20:27:46,879 - #25 =
INFO  20:27:46,879 - #10 2
INFO  20:27:46,879 - #28 ;
INFO  20:27:46,879 - #9 niz
INFO  20:27:46,879 - #23 [
INFO  20:27:46,879 - #9 niz
INFO  20:27:46,879 - #23 [
INFO  20:27:46,879 - #9 jedan
INFO  20:27:46,879 - #24 ]
INFO  20:27:46,879 - #24 ]
INFO  20:27:46,879 - #25 =
INFO  20:27:46,879 - #9 niz
INFO  20:27:46,879 - #23 [
INFO  20:27:46,880 - #9 niz
INFO  20:27:46,880 - #23 [
INFO  20:27:46,880 - #10 0
INFO  20:27:46,880 - #24 ]
INFO  20:27:46,880 - #24 ]
INFO  20:27:46,880 - #16 *
INFO  20:27:46,880 - #10 3
INFO  20:27:46,880 - #28 ;
INFO  20:27:46,880 - #9 bodovi
INFO  20:27:46,880 - #25 =
INFO  20:27:46,880 - #9 niz
INFO  20:27:46,880 - #23 [
INFO  20:27:46,880 - #10 2
INFO  20:27:46,880 - #24 ]
INFO  20:27:46,881 - #17 /
INFO  20:27:46,881 - #9 niz
INFO  20:27:46,881 - #23 [
INFO  20:27:46,881 - #10 0
INFO  20:27:46,881 - #24 ]
INFO  20:27:46,881 - #28 ;
INFO  20:27:46,882 - #3 print
INFO  20:27:46,882 - #30 (
INFO  20:27:46,882 - #9 bodovi
INFO  20:27:46,882 - #31 )
INFO  20:27:46,882 - #28 ;
INFO  20:27:46,882 - #3 print
INFO  20:27:46,882 - #30 (
INFO  20:27:46,882 - #9 niz
INFO  20:27:46,882 - #23 [
INFO  20:27:46,882 - #10 2
INFO  20:27:46,882 - #24 ]
INFO  20:27:46,882 - #31 )
INFO  20:27:46,882 - #28 ;
INFO  20:27:46,882 - #9 nizch
INFO  20:27:46,882 - #25 =
INFO  20:27:46,882 - #7 new
INFO  20:27:46,883 - #9 char
INFO  20:27:46,883 - #23 [
INFO  20:27:46,883 - #10 3
INFO  20:27:46,883 - #24 ]
INFO  20:27:46,883 - #28 ;
INFO  20:27:46,883 - #9 nizch
INFO  20:27:46,883 - #23 [
INFO  20:27:46,883 - #10 0
INFO  20:27:46,883 - #24 ]
INFO  20:27:46,883 - #25 =
INFO  20:27:46,883 - #11 a
INFO  20:27:46,887 - #28 ;
INFO  20:27:46,887 - #9 nizch
INFO  20:27:46,887 - #23 [
INFO  20:27:46,887 - #9 jedan
INFO  20:27:46,887 - #24 ]
INFO  20:27:46,887 - #25 =
INFO  20:27:46,887 - #11 b
INFO  20:27:46,887 - #28 ;
INFO  20:27:46,887 - #9 nizch
INFO  20:27:46,887 - #23 [
INFO  20:27:46,887 - #9 pet
INFO  20:27:46,887 - #15 -
INFO  20:27:46,887 - #10 3
INFO  20:27:46,888 - #24 ]
INFO  20:27:46,888 - #25 =
INFO  20:27:46,888 - #11 c
INFO  20:27:46,888 - #28 ;
INFO  20:27:46,888 - #3 print
INFO  20:27:46,888 - #30 (
INFO  20:27:46,888 - #9 nizch
INFO  20:27:46,888 - #23 [
INFO  20:27:46,888 - #10 1
INFO  20:27:46,888 - #24 ]
INFO  20:27:46,888 - #31 )
INFO  20:27:46,888 - #28 ;
INFO  20:27:46,888 - #3 print
INFO  20:27:46,889 - #30 (
INFO  20:27:46,889 - #9 nizch
INFO  20:27:46,889 - #23 [
INFO  20:27:46,889 - #9 jedan
INFO  20:27:46,889 - #16 *
INFO  20:27:46,889 - #10 2
INFO  20:27:46,889 - #24 ]
INFO  20:27:46,889 - #31 )
INFO  20:27:46,889 - #28 ;
INFO  20:27:46,889 - #9 bodovi
INFO  20:27:46,889 - #25 =
INFO  20:27:46,889 - #9 bodovi
INFO  20:27:46,889 - #14 +
INFO  20:27:46,889 - #30 (
INFO  20:27:46,889 - #9 pet
INFO  20:27:46,889 - #16 *
INFO  20:27:46,889 - #9 jedan
INFO  20:27:46,889 - #15 -
INFO  20:27:46,889 - #10 1
INFO  20:27:46,889 - #31 )
INFO  20:27:46,889 - #16 *
INFO  20:27:46,889 - #9 bodovi
INFO  20:27:46,889 - #15 -
INFO  20:27:46,889 - #30 (
INFO  20:27:46,890 - #10 3
INFO  20:27:46,890 - #18 %
INFO  20:27:46,890 - #10 2
INFO  20:27:46,890 - #14 +
INFO  20:27:46,890 - #10 3
INFO  20:27:46,890 - #16 *
INFO  20:27:46,890 - #10 2
INFO  20:27:46,890 - #15 -
INFO  20:27:46,890 - #10 3
INFO  20:27:46,890 - #31 )
INFO  20:27:46,890 - #28 ;
INFO  20:27:46,890 - #3 print
INFO  20:27:46,890 - #30 (
INFO  20:27:46,890 - #9 bodovi
INFO  20:27:46,891 - #31 )
INFO  20:27:46,891 - #28 ;
INFO  20:27:46,891 - #4 read
INFO  20:27:46,891 - #30 (
INFO  20:27:46,891 - #9 bodovi
INFO  20:27:46,891 - #31 )
INFO  20:27:46,891 - #28 ;
INFO  20:27:46,891 - #9 bt
INFO  20:27:46,891 - #25 =
INFO  20:27:46,891 - #8 true
INFO  20:27:46,891 - #28 ;
INFO  20:27:46,891 - #32 if
INFO  20:27:46,891 - #30 (
INFO  20:27:46,891 - #9 bt
INFO  20:27:46,891 - #31 )
INFO  20:27:46,891 - #21 {
ERROR 20:27:46,891 - 
Sintaksna greska na liniji 48
INFO  20:27:46,891 - #3 print
INFO  20:27:46,891 - #30 (
INFO  20:27:46,891 - #9 bodovi
INFO  20:27:46,892 - #31 )
INFO  20:27:46,892 - #28 ;
INFO  20:27:46,892 - #22 }
INFO  20:27:46,892 - #33 else
INFO  20:27:46,892 - #21 {
INFO  20:27:46,892 - #3 print
INFO  20:27:46,892 - #30 (
INFO  20:27:46,892 - #9 bodovi
INFO  20:27:46,892 - #14 +
INFO  20:27:46,892 - #10 10
INFO  20:27:46,892 - #31 )
INFO  20:27:46,892 - #28 ;
INFO  20:27:46,892 - #22 }
INFO  20:27:46,892 - #32 if
INFO  20:27:46,893 - #30 (
INFO  20:27:46,893 - #9 bodovi
INFO  20:27:46,893 - #38 >
INFO  20:27:46,893 - #10 10
INFO  20:27:46,893 - #31 )
INFO  20:27:46,893 - #21 {
INFO  20:27:46,893 - #3 print
INFO  20:27:46,893 - #30 (
INFO  20:27:46,893 - #11 +
INFO  20:27:46,893 - #31 )
INFO  20:27:46,893 - #28 ;
INFO  20:27:46,893 - #22 }
INFO  20:27:46,893 - #33 else
INFO  20:27:46,893 - #21 {
INFO  20:27:46,893 - #3 print
INFO  20:27:46,894 - #30 (
INFO  20:27:46,894 - #11 -
INFO  20:27:46,894 - #31 )
INFO  20:27:46,894 - #28 ;
INFO  20:27:46,894 - #22 }
INFO  20:27:46,894 - #22 }
INFO  20:27:46,894 - #22 }
ERROR 20:27:46,894 - Izvrsen oporavak do 5 u liniji 48
ERROR 20:27:46,895 - 
Sintaksna greska na liniji 60
ERROR 20:27:46,895 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 63
INFO  20:29:56,543 - Kompajliranje ulaznog fajla test\program.mj
INFO  20:29:56,576 - #2 program
INFO  20:29:56,576 - #9 test301
INFO  20:29:56,577 - #5 const
INFO  20:29:56,577 - #9 int
INFO  20:29:56,578 - #9 nula
INFO  20:29:56,578 - #25 =
INFO  20:29:56,578 - #10 0
INFO  20:29:56,578 - #28 ;
INFO  20:29:56,579 - #5 const
INFO  20:29:56,579 - #9 int
INFO  20:29:56,580 - #9 jedan
INFO  20:29:56,580 - #25 =
INFO  20:29:56,580 - #10 1
INFO  20:29:56,580 - #28 ;
INFO  20:29:56,580 - #5 const
INFO  20:29:56,580 - #9 int
INFO  20:29:56,580 - #9 pet
INFO  20:29:56,580 - #25 =
INFO  20:29:56,580 - #10 5
INFO  20:29:56,580 - #28 ;
INFO  20:29:56,580 - #9 int
INFO  20:29:56,580 - #9 niz
INFO  20:29:56,580 - #23 [
INFO  20:29:56,580 - #24 ]
INFO  20:29:56,580 - #28 ;
INFO  20:29:56,581 - #9 char
INFO  20:29:56,581 - #9 nizch
INFO  20:29:56,581 - #23 [
INFO  20:29:56,581 - #24 ]
INFO  20:29:56,582 - #28 ;
INFO  20:29:56,582 - #21 {
INFO  20:29:56,582 - #9 int
INFO  20:29:56,582 - #9 main
INFO  20:29:56,582 - #30 (
INFO  20:29:56,583 - #31 )
INFO  20:29:56,583 - #9 int
INFO  20:29:56,583 - #9 bodovi
INFO  20:29:56,584 - #28 ;
INFO  20:29:56,584 - #9 bool
INFO  20:29:56,584 - #9 bt
INFO  20:29:56,584 - #28 ;
INFO  20:29:56,584 - #21 {
INFO  20:29:56,584 - #9 bodovi
INFO  20:29:56,584 - #25 =
INFO  20:29:56,584 - #10 0
INFO  20:29:56,585 - #28 ;
INFO  20:29:56,585 - #9 bodovi
INFO  20:29:56,585 - #26 ++
INFO  20:29:56,585 - #28 ;
INFO  20:29:56,585 - #9 bodovi
INFO  20:29:56,586 - #25 =
INFO  20:29:56,586 - #9 bodovi
INFO  20:29:56,586 - #14 +
INFO  20:29:56,586 - #9 jedan
INFO  20:29:56,586 - #28 ;
INFO  20:29:56,587 - #9 bodovi
INFO  20:29:56,587 - #25 =
INFO  20:29:56,587 - #9 bodovi
INFO  20:29:56,587 - #16 *
INFO  20:29:56,587 - #9 pet
INFO  20:29:56,588 - #28 ;
INFO  20:29:56,588 - #9 bodovi
INFO  20:29:56,588 - #27 --
INFO  20:29:56,588 - #28 ;
INFO  20:29:56,589 - #3 print
INFO  20:29:56,589 - #30 (
INFO  20:29:56,589 - #9 bodovi
INFO  20:29:56,589 - #31 )
INFO  20:29:56,589 - #28 ;
INFO  20:29:56,589 - #9 niz
INFO  20:29:56,589 - #25 =
INFO  20:29:56,589 - #7 new
INFO  20:29:56,589 - #9 int
INFO  20:29:56,589 - #23 [
INFO  20:29:56,589 - #10 3
INFO  20:29:56,589 - #24 ]
INFO  20:29:56,590 - #28 ;
INFO  20:29:56,590 - #9 niz
INFO  20:29:56,590 - #23 [
INFO  20:29:56,590 - #9 nula
INFO  20:29:56,590 - #24 ]
INFO  20:29:56,590 - #25 =
INFO  20:29:56,590 - #9 jedan
INFO  20:29:56,590 - #28 ;
INFO  20:29:56,594 - #9 niz
INFO  20:29:56,594 - #23 [
INFO  20:29:56,594 - #10 1
INFO  20:29:56,594 - #24 ]
INFO  20:29:56,594 - #25 =
INFO  20:29:56,594 - #10 2
INFO  20:29:56,594 - #28 ;
INFO  20:29:56,594 - #9 niz
INFO  20:29:56,594 - #23 [
INFO  20:29:56,594 - #9 niz
INFO  20:29:56,594 - #23 [
INFO  20:29:56,594 - #9 jedan
INFO  20:29:56,594 - #24 ]
INFO  20:29:56,594 - #24 ]
INFO  20:29:56,595 - #25 =
INFO  20:29:56,595 - #9 niz
INFO  20:29:56,595 - #23 [
INFO  20:29:56,595 - #9 niz
INFO  20:29:56,595 - #23 [
INFO  20:29:56,595 - #10 0
INFO  20:29:56,595 - #24 ]
INFO  20:29:56,595 - #24 ]
INFO  20:29:56,595 - #16 *
INFO  20:29:56,595 - #10 3
INFO  20:29:56,595 - #28 ;
INFO  20:29:56,595 - #9 bodovi
INFO  20:29:56,595 - #25 =
INFO  20:29:56,595 - #9 niz
INFO  20:29:56,595 - #23 [
INFO  20:29:56,595 - #10 2
INFO  20:29:56,595 - #24 ]
INFO  20:29:56,595 - #17 /
INFO  20:29:56,596 - #9 niz
INFO  20:29:56,596 - #23 [
INFO  20:29:56,596 - #10 0
INFO  20:29:56,596 - #24 ]
INFO  20:29:56,596 - #28 ;
INFO  20:29:56,596 - #3 print
INFO  20:29:56,596 - #30 (
INFO  20:29:56,596 - #9 bodovi
INFO  20:29:56,596 - #31 )
INFO  20:29:56,597 - #28 ;
INFO  20:29:56,597 - #3 print
INFO  20:29:56,597 - #30 (
INFO  20:29:56,597 - #9 niz
INFO  20:29:56,597 - #23 [
INFO  20:29:56,597 - #10 2
INFO  20:29:56,597 - #24 ]
INFO  20:29:56,597 - #31 )
INFO  20:29:56,597 - #28 ;
INFO  20:29:56,597 - #9 nizch
INFO  20:29:56,597 - #25 =
INFO  20:29:56,597 - #7 new
INFO  20:29:56,597 - #9 char
INFO  20:29:56,597 - #23 [
INFO  20:29:56,597 - #10 3
INFO  20:29:56,597 - #24 ]
INFO  20:29:56,597 - #28 ;
INFO  20:29:56,597 - #9 nizch
INFO  20:29:56,597 - #23 [
INFO  20:29:56,597 - #10 0
INFO  20:29:56,597 - #24 ]
INFO  20:29:56,597 - #25 =
INFO  20:29:56,598 - #11 a
INFO  20:29:56,598 - #28 ;
INFO  20:29:56,598 - #9 nizch
INFO  20:29:56,598 - #23 [
INFO  20:29:56,598 - #9 jedan
INFO  20:29:56,598 - #24 ]
INFO  20:29:56,598 - #25 =
INFO  20:29:56,598 - #11 b
INFO  20:29:56,598 - #28 ;
INFO  20:29:56,598 - #9 nizch
INFO  20:29:56,598 - #23 [
INFO  20:29:56,598 - #9 pet
INFO  20:29:56,598 - #15 -
INFO  20:29:56,598 - #10 3
INFO  20:29:56,599 - #24 ]
INFO  20:29:56,599 - #25 =
INFO  20:29:56,599 - #11 c
INFO  20:29:56,599 - #28 ;
INFO  20:29:56,599 - #3 print
INFO  20:29:56,599 - #30 (
INFO  20:29:56,599 - #9 nizch
INFO  20:29:56,599 - #23 [
INFO  20:29:56,599 - #10 1
INFO  20:29:56,599 - #24 ]
INFO  20:29:56,599 - #31 )
INFO  20:29:56,599 - #28 ;
INFO  20:29:56,599 - #3 print
INFO  20:29:56,599 - #30 (
INFO  20:29:56,599 - #9 nizch
INFO  20:29:56,599 - #23 [
INFO  20:29:56,600 - #9 jedan
INFO  20:29:56,600 - #16 *
INFO  20:29:56,600 - #10 2
INFO  20:29:56,600 - #24 ]
INFO  20:29:56,600 - #31 )
INFO  20:29:56,600 - #28 ;
INFO  20:29:56,600 - #9 bodovi
INFO  20:29:56,600 - #25 =
INFO  20:29:56,600 - #9 bodovi
INFO  20:29:56,600 - #14 +
INFO  20:29:56,600 - #30 (
INFO  20:29:56,600 - #9 pet
INFO  20:29:56,600 - #16 *
INFO  20:29:56,601 - #9 jedan
INFO  20:29:56,601 - #15 -
INFO  20:29:56,601 - #10 1
INFO  20:29:56,601 - #31 )
INFO  20:29:56,601 - #16 *
INFO  20:29:56,601 - #9 bodovi
INFO  20:29:56,601 - #15 -
INFO  20:29:56,601 - #30 (
INFO  20:29:56,601 - #10 3
INFO  20:29:56,602 - #18 %
INFO  20:29:56,602 - #10 2
INFO  20:29:56,602 - #14 +
INFO  20:29:56,602 - #10 3
INFO  20:29:56,602 - #16 *
INFO  20:29:56,602 - #10 2
INFO  20:29:56,603 - #15 -
INFO  20:29:56,603 - #10 3
INFO  20:29:56,603 - #31 )
INFO  20:29:56,603 - #28 ;
INFO  20:29:56,603 - #3 print
INFO  20:29:56,603 - #30 (
INFO  20:29:56,603 - #9 bodovi
INFO  20:29:56,603 - #31 )
INFO  20:29:56,603 - #28 ;
INFO  20:29:56,603 - #4 read
INFO  20:29:56,603 - #30 (
INFO  20:29:56,603 - #9 bodovi
INFO  20:29:56,603 - #31 )
INFO  20:29:56,603 - #28 ;
INFO  20:29:56,603 - #9 bt
INFO  20:29:56,603 - #25 =
INFO  20:29:56,603 - #8 true
INFO  20:29:56,604 - #28 ;
INFO  20:29:56,604 - #32 if
INFO  20:29:56,604 - #30 (
INFO  20:29:56,604 - #9 bt
INFO  20:29:56,604 - #31 )
INFO  20:29:56,604 - #21 {
ERROR 20:29:56,604 - 
Sintaksna greska na liniji 48
INFO  20:29:56,604 - #3 print
INFO  20:29:56,604 - #30 (
INFO  20:29:56,604 - #9 bodovi
INFO  20:29:56,605 - #31 )
INFO  20:29:56,605 - #28 ;
INFO  20:29:56,605 - #22 }
INFO  20:29:56,605 - #33 else
INFO  20:29:56,605 - #21 {
INFO  20:29:56,605 - #3 print
INFO  20:29:56,605 - #30 (
INFO  20:29:56,605 - #9 bodovi
INFO  20:29:56,605 - #14 +
INFO  20:29:56,605 - #10 10
INFO  20:29:56,605 - #31 )
INFO  20:29:56,605 - #28 ;
INFO  20:29:56,605 - #22 }
INFO  20:29:56,605 - #32 if
INFO  20:29:56,605 - #30 (
INFO  20:29:56,605 - #9 bodovi
INFO  20:29:56,605 - #38 >
INFO  20:29:56,606 - #10 10
INFO  20:29:56,606 - #31 )
INFO  20:29:56,606 - #21 {
INFO  20:29:56,606 - #3 print
INFO  20:29:56,606 - #30 (
INFO  20:29:56,606 - #11 +
INFO  20:29:56,606 - #31 )
INFO  20:29:56,606 - #28 ;
INFO  20:29:56,606 - #22 }
INFO  20:29:56,606 - #33 else
INFO  20:29:56,606 - #21 {
INFO  20:29:56,606 - #3 print
INFO  20:29:56,606 - #30 (
INFO  20:29:56,607 - #11 -
INFO  20:29:56,607 - #31 )
INFO  20:29:56,607 - #28 ;
INFO  20:29:56,607 - #22 }
INFO  20:29:56,607 - #22 }
INFO  20:29:56,607 - #22 }
ERROR 20:29:56,607 - Izvrsen oporavak do 5 u liniji 48
ERROR 20:29:56,608 - 
Sintaksna greska na liniji 60
ERROR 20:29:56,608 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 63
INFO  20:37:22,988 - Kompajliranje ulaznog fajla test\program.mj
INFO  20:37:23,022 - #2 program
INFO  20:37:23,022 - #9 test301
INFO  20:37:23,022 - #5 const
INFO  20:37:23,023 - #9 int
INFO  20:37:23,023 - #9 nula
INFO  20:37:23,023 - #25 =
INFO  20:37:23,023 - #10 0
INFO  20:37:23,023 - #28 ;
INFO  20:37:23,024 - #5 const
INFO  20:37:23,025 - #9 int
INFO  20:37:23,025 - #9 jedan
INFO  20:37:23,025 - #25 =
INFO  20:37:23,025 - #10 1
INFO  20:37:23,025 - #28 ;
INFO  20:37:23,025 - #5 const
INFO  20:37:23,025 - #9 int
INFO  20:37:23,026 - #9 pet
INFO  20:37:23,026 - #25 =
INFO  20:37:23,026 - #10 5
INFO  20:37:23,026 - #28 ;
INFO  20:37:23,026 - #9 int
INFO  20:37:23,026 - #9 niz
INFO  20:37:23,026 - #23 [
INFO  20:37:23,026 - #24 ]
INFO  20:37:23,026 - #28 ;
INFO  20:37:23,026 - #9 char
INFO  20:37:23,027 - #9 nizch
INFO  20:37:23,027 - #23 [
INFO  20:37:23,027 - #24 ]
INFO  20:37:23,027 - #28 ;
INFO  20:37:23,028 - #21 {
INFO  20:37:23,028 - #9 int
INFO  20:37:23,028 - #9 main
INFO  20:37:23,028 - #30 (
INFO  20:37:23,029 - #31 )
INFO  20:37:23,030 - #9 int
INFO  20:37:23,030 - #9 bodovi
INFO  20:37:23,030 - #28 ;
INFO  20:37:23,030 - #9 bool
INFO  20:37:23,030 - #9 bt
INFO  20:37:23,031 - #28 ;
INFO  20:37:23,031 - #21 {
INFO  20:37:23,031 - #9 bodovi
INFO  20:37:23,031 - #25 =
INFO  20:37:23,032 - #10 0
INFO  20:37:23,032 - #28 ;
INFO  20:37:23,032 - #9 bodovi
INFO  20:37:23,032 - #26 ++
INFO  20:37:23,032 - #28 ;
INFO  20:37:23,032 - #9 bodovi
INFO  20:37:23,033 - #25 =
INFO  20:37:23,033 - #9 bodovi
INFO  20:37:23,033 - #14 +
INFO  20:37:23,033 - #9 jedan
INFO  20:37:23,033 - #28 ;
INFO  20:37:23,034 - #9 bodovi
INFO  20:37:23,034 - #25 =
INFO  20:37:23,034 - #9 bodovi
INFO  20:37:23,034 - #16 *
INFO  20:37:23,034 - #9 pet
INFO  20:37:23,035 - #28 ;
INFO  20:37:23,035 - #9 bodovi
INFO  20:37:23,036 - #27 --
INFO  20:37:23,036 - #28 ;
INFO  20:37:23,036 - #3 print
INFO  20:37:23,036 - #30 (
INFO  20:37:23,036 - #9 bodovi
INFO  20:37:23,036 - #31 )
INFO  20:37:23,036 - #28 ;
INFO  20:37:23,036 - #9 niz
INFO  20:37:23,036 - #25 =
INFO  20:37:23,036 - #7 new
INFO  20:37:23,036 - #9 int
INFO  20:37:23,036 - #23 [
INFO  20:37:23,036 - #10 3
INFO  20:37:23,036 - #24 ]
INFO  20:37:23,036 - #28 ;
INFO  20:37:23,036 - #9 niz
INFO  20:37:23,037 - #23 [
INFO  20:37:23,037 - #9 nula
INFO  20:37:23,037 - #24 ]
INFO  20:37:23,037 - #25 =
INFO  20:37:23,037 - #9 jedan
INFO  20:37:23,037 - #28 ;
INFO  20:37:23,041 - #9 niz
INFO  20:37:23,041 - #23 [
INFO  20:37:23,041 - #10 1
INFO  20:37:23,041 - #24 ]
INFO  20:37:23,042 - #25 =
INFO  20:37:23,042 - #10 2
INFO  20:37:23,042 - #28 ;
INFO  20:37:23,042 - #9 niz
INFO  20:37:23,042 - #23 [
INFO  20:37:23,042 - #9 niz
INFO  20:37:23,042 - #23 [
INFO  20:37:23,042 - #9 jedan
INFO  20:37:23,042 - #24 ]
INFO  20:37:23,042 - #24 ]
INFO  20:37:23,042 - #25 =
INFO  20:37:23,042 - #9 niz
INFO  20:37:23,042 - #23 [
INFO  20:37:23,042 - #9 niz
INFO  20:37:23,043 - #23 [
INFO  20:37:23,043 - #10 0
INFO  20:37:23,043 - #24 ]
INFO  20:37:23,043 - #24 ]
INFO  20:37:23,043 - #16 *
INFO  20:37:23,043 - #10 3
INFO  20:37:23,043 - #28 ;
INFO  20:37:23,043 - #9 bodovi
INFO  20:37:23,043 - #25 =
INFO  20:37:23,043 - #9 niz
INFO  20:37:23,043 - #23 [
INFO  20:37:23,043 - #10 2
INFO  20:37:23,043 - #24 ]
INFO  20:37:23,044 - #17 /
INFO  20:37:23,044 - #9 niz
INFO  20:37:23,045 - #23 [
INFO  20:37:23,045 - #10 0
INFO  20:37:23,046 - #24 ]
INFO  20:37:23,046 - #28 ;
INFO  20:37:23,046 - #3 print
INFO  20:37:23,046 - #30 (
INFO  20:37:23,046 - #9 bodovi
INFO  20:37:23,046 - #31 )
INFO  20:37:23,046 - #28 ;
INFO  20:37:23,046 - #3 print
INFO  20:37:23,047 - #30 (
INFO  20:37:23,047 - #9 niz
INFO  20:37:23,047 - #23 [
INFO  20:37:23,047 - #10 2
INFO  20:37:23,047 - #24 ]
INFO  20:37:23,047 - #31 )
INFO  20:37:23,047 - #28 ;
INFO  20:37:23,047 - #9 nizch
INFO  20:37:23,047 - #25 =
INFO  20:37:23,047 - #7 new
INFO  20:37:23,047 - #9 char
INFO  20:37:23,047 - #23 [
INFO  20:37:23,047 - #10 3
INFO  20:37:23,047 - #24 ]
INFO  20:37:23,047 - #28 ;
INFO  20:37:23,047 - #9 nizch
INFO  20:37:23,047 - #23 [
INFO  20:37:23,047 - #10 0
INFO  20:37:23,047 - #24 ]
INFO  20:37:23,047 - #25 =
INFO  20:37:23,047 - #11 a
INFO  20:37:23,047 - #28 ;
INFO  20:37:23,048 - #9 nizch
INFO  20:37:23,048 - #23 [
INFO  20:37:23,048 - #9 jedan
INFO  20:37:23,048 - #24 ]
INFO  20:37:23,048 - #25 =
INFO  20:37:23,048 - #11 b
INFO  20:37:23,048 - #28 ;
INFO  20:37:23,048 - #9 nizch
INFO  20:37:23,048 - #23 [
INFO  20:37:23,048 - #9 pet
INFO  20:37:23,048 - #15 -
INFO  20:37:23,048 - #10 3
INFO  20:37:23,049 - #24 ]
INFO  20:37:23,049 - #25 =
INFO  20:37:23,049 - #11 c
INFO  20:37:23,049 - #28 ;
INFO  20:37:23,049 - #3 print
INFO  20:37:23,049 - #30 (
INFO  20:37:23,049 - #9 nizch
INFO  20:37:23,049 - #23 [
INFO  20:37:23,049 - #10 1
INFO  20:37:23,049 - #24 ]
INFO  20:37:23,049 - #31 )
INFO  20:37:23,049 - #28 ;
INFO  20:37:23,049 - #3 print
INFO  20:37:23,049 - #30 (
INFO  20:37:23,049 - #9 nizch
INFO  20:37:23,049 - #23 [
INFO  20:37:23,049 - #9 jedan
INFO  20:37:23,049 - #16 *
INFO  20:37:23,049 - #10 2
INFO  20:37:23,049 - #24 ]
INFO  20:37:23,049 - #31 )
INFO  20:37:23,050 - #28 ;
INFO  20:37:23,050 - #9 bodovi
INFO  20:37:23,050 - #25 =
INFO  20:37:23,050 - #9 bodovi
INFO  20:37:23,050 - #14 +
INFO  20:37:23,050 - #30 (
INFO  20:37:23,050 - #9 pet
INFO  20:37:23,050 - #16 *
INFO  20:37:23,050 - #9 jedan
INFO  20:37:23,050 - #15 -
INFO  20:37:23,050 - #10 1
INFO  20:37:23,050 - #31 )
INFO  20:37:23,050 - #16 *
INFO  20:37:23,050 - #9 bodovi
INFO  20:37:23,050 - #15 -
INFO  20:37:23,050 - #30 (
INFO  20:37:23,050 - #10 3
INFO  20:37:23,050 - #18 %
INFO  20:37:23,050 - #10 2
INFO  20:37:23,051 - #14 +
INFO  20:37:23,051 - #10 3
INFO  20:37:23,051 - #16 *
INFO  20:37:23,051 - #10 2
INFO  20:37:23,051 - #15 -
INFO  20:37:23,051 - #10 3
INFO  20:37:23,051 - #31 )
INFO  20:37:23,051 - #28 ;
INFO  20:37:23,051 - #3 print
INFO  20:37:23,051 - #30 (
INFO  20:37:23,051 - #9 bodovi
INFO  20:37:23,051 - #31 )
INFO  20:37:23,051 - #28 ;
INFO  20:37:23,052 - #4 read
INFO  20:37:23,052 - #30 (
INFO  20:37:23,052 - #9 bodovi
INFO  20:37:23,052 - #31 )
INFO  20:37:23,052 - #28 ;
INFO  20:37:23,052 - #9 bt
INFO  20:37:23,052 - #25 =
INFO  20:37:23,052 - #8 true
INFO  20:37:23,052 - #28 ;
INFO  20:37:23,052 - #32 if
INFO  20:37:23,052 - #30 (
INFO  20:37:23,052 - #9 bt
INFO  20:37:23,052 - #31 )
INFO  20:37:23,053 - #21 {
ERROR 20:37:23,053 - 
Sintaksna greska na liniji 48
INFO  20:37:23,053 - #3 print
INFO  20:37:23,053 - #30 (
INFO  20:37:23,053 - #9 bodovi
INFO  20:37:23,054 - #31 )
INFO  20:37:23,054 - #28 ;
INFO  20:37:23,054 - #22 }
INFO  20:37:23,054 - #33 else
INFO  20:37:23,054 - #21 {
INFO  20:37:23,054 - #3 print
INFO  20:37:23,054 - #30 (
INFO  20:37:23,054 - #9 bodovi
INFO  20:37:23,054 - #14 +
INFO  20:37:23,054 - #10 10
INFO  20:37:23,054 - #31 )
INFO  20:37:23,054 - #28 ;
INFO  20:37:23,054 - #22 }
INFO  20:37:23,054 - #32 if
INFO  20:37:23,054 - #30 (
INFO  20:37:23,054 - #9 bodovi
INFO  20:37:23,054 - #38 >
INFO  20:37:23,054 - #10 10
INFO  20:37:23,054 - #31 )
INFO  20:37:23,054 - #21 {
INFO  20:37:23,054 - #3 print
INFO  20:37:23,054 - #30 (
INFO  20:37:23,055 - #11 +
INFO  20:37:23,055 - #31 )
INFO  20:37:23,055 - #28 ;
INFO  20:37:23,055 - #22 }
INFO  20:37:23,055 - #33 else
INFO  20:37:23,055 - #21 {
INFO  20:37:23,055 - #3 print
INFO  20:37:23,055 - #30 (
INFO  20:37:23,055 - #11 -
INFO  20:37:23,055 - #31 )
INFO  20:37:23,055 - #28 ;
INFO  20:37:23,055 - #22 }
INFO  20:37:23,055 - #22 }
INFO  20:37:23,055 - #22 }
ERROR 20:37:23,055 - Izvrsen oporavak do 5 u liniji 48
ERROR 20:37:23,056 - 
Sintaksna greska na liniji 60
ERROR 20:37:23,057 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 63
INFO  20:38:36,863 - Kompajliranje ulaznog fajla test\program.mj
INFO  20:38:36,897 - #2 program
INFO  20:38:36,897 - #9 test301
INFO  20:38:36,897 - #5 const
INFO  20:38:36,898 - #9 int
INFO  20:38:36,898 - #9 nula
INFO  20:38:36,899 - #25 =
INFO  20:38:36,899 - #10 0
INFO  20:38:36,899 - #28 ;
INFO  20:38:36,900 - #5 const
INFO  20:38:36,901 - #9 int
INFO  20:38:36,901 - #9 jedan
INFO  20:38:36,901 - #25 =
INFO  20:38:36,901 - #10 1
INFO  20:38:36,901 - #28 ;
INFO  20:38:36,901 - #5 const
INFO  20:38:36,901 - #9 int
INFO  20:38:36,901 - #9 pet
INFO  20:38:36,901 - #25 =
INFO  20:38:36,901 - #10 5
INFO  20:38:36,901 - #28 ;
INFO  20:38:36,901 - #9 int
INFO  20:38:36,901 - #9 niz
INFO  20:38:36,901 - #23 [
INFO  20:38:36,901 - #24 ]
INFO  20:38:36,901 - #28 ;
INFO  20:38:36,902 - #9 char
INFO  20:38:36,902 - #9 nizch
INFO  20:38:36,902 - #23 [
INFO  20:38:36,902 - #24 ]
INFO  20:38:36,902 - #28 ;
INFO  20:38:36,903 - #21 {
INFO  20:38:36,903 - #9 int
INFO  20:38:36,903 - #9 main
INFO  20:38:36,903 - #30 (
INFO  20:38:36,904 - #31 )
INFO  20:38:36,905 - #9 int
INFO  20:38:36,905 - #9 bodovi
INFO  20:38:36,905 - #28 ;
INFO  20:38:36,905 - #9 bool
INFO  20:38:36,906 - #9 bt
INFO  20:38:36,906 - #28 ;
INFO  20:38:36,906 - #21 {
INFO  20:38:36,906 - #9 bodovi
INFO  20:38:36,906 - #25 =
INFO  20:38:36,907 - #10 0
INFO  20:38:36,907 - #28 ;
INFO  20:38:36,907 - #9 bodovi
INFO  20:38:36,907 - #26 ++
INFO  20:38:36,907 - #28 ;
INFO  20:38:36,907 - #9 bodovi
INFO  20:38:36,908 - #25 =
INFO  20:38:36,908 - #9 bodovi
INFO  20:38:36,908 - #14 +
INFO  20:38:36,908 - #9 jedan
INFO  20:38:36,908 - #28 ;
INFO  20:38:36,909 - #9 bodovi
INFO  20:38:36,909 - #25 =
INFO  20:38:36,909 - #9 bodovi
INFO  20:38:36,909 - #16 *
INFO  20:38:36,909 - #9 pet
INFO  20:38:36,910 - #28 ;
INFO  20:38:36,911 - #9 bodovi
INFO  20:38:36,911 - #27 --
INFO  20:38:36,911 - #28 ;
INFO  20:38:36,911 - #3 print
INFO  20:38:36,911 - #30 (
INFO  20:38:36,911 - #9 bodovi
INFO  20:38:36,911 - #31 )
INFO  20:38:36,911 - #28 ;
INFO  20:38:36,912 - #9 niz
INFO  20:38:36,912 - #25 =
INFO  20:38:36,912 - #7 new
INFO  20:38:36,912 - #9 int
INFO  20:38:36,912 - #23 [
INFO  20:38:36,912 - #10 3
INFO  20:38:36,912 - #24 ]
INFO  20:38:36,912 - #28 ;
INFO  20:38:36,912 - #9 niz
INFO  20:38:36,912 - #23 [
INFO  20:38:36,912 - #9 nula
INFO  20:38:36,912 - #24 ]
INFO  20:38:36,912 - #25 =
INFO  20:38:36,913 - #9 jedan
INFO  20:38:36,913 - #28 ;
INFO  20:38:36,917 - #9 niz
INFO  20:38:36,917 - #23 [
INFO  20:38:36,917 - #10 1
INFO  20:38:36,917 - #24 ]
INFO  20:38:36,917 - #25 =
INFO  20:38:36,917 - #10 2
INFO  20:38:36,917 - #28 ;
INFO  20:38:36,917 - #9 niz
INFO  20:38:36,918 - #23 [
INFO  20:38:36,918 - #9 niz
INFO  20:38:36,918 - #23 [
INFO  20:38:36,918 - #9 jedan
INFO  20:38:36,918 - #24 ]
INFO  20:38:36,918 - #24 ]
INFO  20:38:36,918 - #25 =
INFO  20:38:36,918 - #9 niz
INFO  20:38:36,918 - #23 [
INFO  20:38:36,918 - #9 niz
INFO  20:38:36,918 - #23 [
INFO  20:38:36,918 - #10 0
INFO  20:38:36,918 - #24 ]
INFO  20:38:36,918 - #24 ]
INFO  20:38:36,919 - #16 *
INFO  20:38:36,919 - #10 3
INFO  20:38:36,919 - #28 ;
INFO  20:38:36,919 - #9 bodovi
INFO  20:38:36,919 - #25 =
INFO  20:38:36,919 - #9 niz
INFO  20:38:36,919 - #23 [
INFO  20:38:36,919 - #10 2
INFO  20:38:36,919 - #24 ]
INFO  20:38:36,919 - #17 /
INFO  20:38:36,919 - #9 niz
INFO  20:38:36,920 - #23 [
INFO  20:38:36,920 - #10 0
INFO  20:38:36,920 - #24 ]
INFO  20:38:36,920 - #28 ;
INFO  20:38:36,920 - #3 print
INFO  20:38:36,920 - #30 (
INFO  20:38:36,920 - #9 bodovi
INFO  20:38:36,920 - #31 )
INFO  20:38:36,920 - #28 ;
INFO  20:38:36,920 - #3 print
INFO  20:38:36,920 - #30 (
INFO  20:38:36,920 - #9 niz
INFO  20:38:36,920 - #23 [
INFO  20:38:36,920 - #10 2
INFO  20:38:36,920 - #24 ]
INFO  20:38:36,920 - #31 )
INFO  20:38:36,920 - #28 ;
INFO  20:38:36,921 - #9 nizch
INFO  20:38:36,921 - #25 =
INFO  20:38:36,921 - #7 new
INFO  20:38:36,921 - #9 char
INFO  20:38:36,921 - #23 [
INFO  20:38:36,921 - #10 3
INFO  20:38:36,921 - #24 ]
INFO  20:38:36,921 - #28 ;
INFO  20:38:36,921 - #9 nizch
INFO  20:38:36,921 - #23 [
INFO  20:38:36,921 - #10 0
INFO  20:38:36,921 - #24 ]
INFO  20:38:36,921 - #25 =
INFO  20:38:36,921 - #11 a
INFO  20:38:36,921 - #28 ;
INFO  20:38:36,921 - #9 nizch
INFO  20:38:36,921 - #23 [
INFO  20:38:36,921 - #9 jedan
INFO  20:38:36,921 - #24 ]
INFO  20:38:36,922 - #25 =
INFO  20:38:36,922 - #11 b
INFO  20:38:36,922 - #28 ;
INFO  20:38:36,922 - #9 nizch
INFO  20:38:36,922 - #23 [
INFO  20:38:36,922 - #9 pet
INFO  20:38:36,922 - #15 -
INFO  20:38:36,922 - #10 3
INFO  20:38:36,924 - #24 ]
INFO  20:38:36,924 - #25 =
INFO  20:38:36,924 - #11 c
INFO  20:38:36,924 - #28 ;
INFO  20:38:36,924 - #3 print
INFO  20:38:36,924 - #30 (
INFO  20:38:36,924 - #9 nizch
INFO  20:38:36,924 - #23 [
INFO  20:38:36,924 - #10 1
INFO  20:38:36,924 - #24 ]
INFO  20:38:36,924 - #31 )
INFO  20:38:36,924 - #28 ;
INFO  20:38:36,925 - #3 print
INFO  20:38:36,925 - #30 (
INFO  20:38:36,925 - #9 nizch
INFO  20:38:36,925 - #23 [
INFO  20:38:36,925 - #9 jedan
INFO  20:38:36,925 - #16 *
INFO  20:38:36,925 - #10 2
INFO  20:38:36,925 - #24 ]
INFO  20:38:36,925 - #31 )
INFO  20:38:36,925 - #28 ;
INFO  20:38:36,925 - #9 bodovi
INFO  20:38:36,925 - #25 =
INFO  20:38:36,925 - #9 bodovi
INFO  20:38:36,925 - #14 +
INFO  20:38:36,925 - #30 (
INFO  20:38:36,925 - #9 pet
INFO  20:38:36,925 - #16 *
INFO  20:38:36,925 - #9 jedan
INFO  20:38:36,925 - #15 -
INFO  20:38:36,925 - #10 1
INFO  20:38:36,925 - #31 )
INFO  20:38:36,925 - #16 *
INFO  20:38:36,926 - #9 bodovi
INFO  20:38:36,926 - #15 -
INFO  20:38:36,926 - #30 (
INFO  20:38:36,926 - #10 3
INFO  20:38:36,926 - #18 %
INFO  20:38:36,926 - #10 2
INFO  20:38:36,926 - #14 +
INFO  20:38:36,926 - #10 3
INFO  20:38:36,926 - #16 *
INFO  20:38:36,926 - #10 2
INFO  20:38:36,926 - #15 -
INFO  20:38:36,927 - #10 3
INFO  20:38:36,927 - #31 )
INFO  20:38:36,927 - #28 ;
INFO  20:38:36,927 - #3 print
INFO  20:38:36,927 - #30 (
INFO  20:38:36,927 - #9 bodovi
INFO  20:38:36,927 - #31 )
INFO  20:38:36,927 - #28 ;
INFO  20:38:36,927 - #4 read
INFO  20:38:36,927 - #30 (
INFO  20:38:36,927 - #9 bodovi
INFO  20:38:36,927 - #31 )
INFO  20:38:36,927 - #28 ;
INFO  20:38:36,927 - #9 bt
INFO  20:38:36,927 - #25 =
INFO  20:38:36,927 - #8 true
INFO  20:38:36,927 - #28 ;
INFO  20:38:36,927 - #32 if
INFO  20:38:36,927 - #30 (
INFO  20:38:36,927 - #9 bt
INFO  20:38:36,927 - #31 )
INFO  20:38:36,928 - #21 {
INFO  20:38:36,928 - #3 print
INFO  20:38:36,928 - #30 (
INFO  20:38:36,928 - #9 bodovi
INFO  20:38:36,928 - #31 )
INFO  20:38:36,928 - #28 ;
INFO  20:38:36,928 - #22 }
INFO  20:38:36,928 - #33 else
INFO  20:38:36,928 - #21 {
INFO  20:38:36,928 - #3 print
INFO  20:38:36,928 - #30 (
INFO  20:38:36,928 - #9 bodovi
INFO  20:38:36,928 - #14 +
INFO  20:38:36,930 - #10 10
INFO  20:38:36,930 - #31 )
INFO  20:38:36,930 - #28 ;
INFO  20:38:36,930 - #22 }
INFO  20:38:36,930 - #32 if
INFO  20:38:36,930 - #30 (
INFO  20:38:36,931 - #9 bodovi
INFO  20:38:36,931 - #38 >
INFO  20:38:36,931 - #10 10
INFO  20:38:36,931 - #31 )
INFO  20:38:36,932 - #21 {
INFO  20:38:36,932 - #3 print
INFO  20:38:36,932 - #30 (
INFO  20:38:36,932 - #11 +
INFO  20:38:36,932 - #31 )
INFO  20:38:36,932 - #28 ;
INFO  20:38:36,932 - #22 }
INFO  20:38:36,932 - #33 else
INFO  20:38:36,932 - #21 {
INFO  20:38:36,932 - #3 print
INFO  20:38:36,932 - #30 (
INFO  20:38:36,932 - #11 -
INFO  20:38:36,932 - #31 )
INFO  20:38:36,932 - #28 ;
INFO  20:38:36,932 - #22 }
INFO  20:38:36,932 - #22 }
INFO  20:38:36,932 - #22 }
INFO  20:38:36,934 - 
================SINTAKSNO STABLO====================

INFO  20:38:36,939 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 bodovi
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            Statements(
                                              Statements(
                                                Statements(
                                                  Statements(
                                                    Statements(
                                                      Statements(
                                                        NoStmt(
                                                        ) [NoStmt]
                                                        DesignatorStatement(
                                                          Assignment(
                                                            Designator_1(
                                                             bodovi
                                                            ) [Designator_1]
                                                            TermExpr(
                                                              FactorTerm(
                                                                ValFactor(
                                                                  NumConst(
                                                                   0
                                                                  ) [NumConst]
                                                                ) [ValFactor]
                                                              ) [FactorTerm]
                                                            ) [TermExpr]
                                                          ) [Assignment]
                                                        ) [DesignatorStatement]
                                                      ) [Statements]
                                                      DesignatorStatement(
                                                        Increment(
                                                          Designator_1(
                                                           bodovi
                                                          ) [Designator_1]
                                                        ) [Increment]
                                                      ) [DesignatorStatement]
                                                    ) [Statements]
                                                    DesignatorStatement(
                                                      Assignment(
                                                        Designator_1(
                                                         bodovi
                                                        ) [Designator_1]
                                                        AddExpr(
                                                          FactorTerm(
                                                            VarFactor(
                                                              Designator_1(
                                                               bodovi
                                                              ) [Designator_1]
                                                            ) [VarFactor]
                                                          ) [FactorTerm]
                                                          MoreTermSingle(
                                                            MoreTermPart(
                                                              Addop(
                                                              ) [Addop]
                                                              FactorTerm(
                                                                VarFactor(
                                                                  Designator_1(
                                                                   jedan
                                                                  ) [Designator_1]
                                                                ) [VarFactor]
                                                              ) [FactorTerm]
                                                            ) [MoreTermPart]
                                                          ) [MoreTermSingle]
                                                        ) [AddExpr]
                                                      ) [Assignment]
                                                    ) [DesignatorStatement]
                                                  ) [Statements]
                                                  DesignatorStatement(
                                                    Assignment(
                                                      Designator_1(
                                                       bodovi
                                                      ) [Designator_1]
                                                      TermExpr(
                                                        MulTerm(
                                                          VarFactor(
                                                            Designator_1(
                                                             bodovi
                                                            ) [Designator_1]
                                                          ) [VarFactor]
                                                          MoreFactorSingle(
                                                            MoreFactorPart(
                                                              Mulop(
                                                              ) [Mulop]
                                                              VarFactor(
                                                                Designator_1(
                                                                 pet
                                                                ) [Designator_1]
                                                              ) [VarFactor]
                                                            ) [MoreFactorPart]
                                                          ) [MoreFactorSingle]
                                                        ) [MulTerm]
                                                      ) [TermExpr]
                                                    ) [Assignment]
                                                  ) [DesignatorStatement]
                                                ) [Statements]
                                                DesignatorStatement(
                                                  Decrement(
                                                    Designator_1(
                                                     bodovi
                                                    ) [Designator_1]
                                                  ) [Decrement]
                                                ) [DesignatorStatement]
                                              ) [Statements]
                                              PrintStmt(
                                                TermExpr(
                                                  FactorTerm(
                                                    VarFactor(
                                                      Designator_1(
                                                       bodovi
                                                      ) [Designator_1]
                                                    ) [VarFactor]
                                                  ) [FactorTerm]
                                                ) [TermExpr]
                                              ) [PrintStmt]
                                            ) [Statements]
                                            DesignatorStatement(
                                              Assignment(
                                                Designator_1(
                                                 niz
                                                ) [Designator_1]
                                                TermExpr(
                                                  FactorTerm(
                                                    NewOperator(
                                                      Type(
                                                       int
                                                      ) [Type]
                                                      TermExpr(
                                                        FactorTerm(
                                                          ValFactor(
                                                            NumConst(
                                                             3
                                                            ) [NumConst]
                                                          ) [ValFactor]
                                                        ) [FactorTerm]
                                                      ) [TermExpr]
                                                    ) [NewOperator]
                                                  ) [FactorTerm]
                                                ) [TermExpr]
                                              ) [Assignment]
                                            ) [DesignatorStatement]
                                          ) [Statements]
                                          DesignatorStatement(
                                            Assignment(
                                              Designator_0(
                                               niz
                                                TermExpr(
                                                  FactorTerm(
                                                    VarFactor(
                                                      Designator_1(
                                                       nula
                                                      ) [Designator_1]
                                                    ) [VarFactor]
                                                  ) [FactorTerm]
                                                ) [TermExpr]
                                              ) [Designator_0]
                                              TermExpr(
                                                FactorTerm(
                                                  VarFactor(
                                                    Designator_1(
                                                     jedan
                                                    ) [Designator_1]
                                                  ) [VarFactor]
                                                ) [FactorTerm]
                                              ) [TermExpr]
                                            ) [Assignment]
                                          ) [DesignatorStatement]
                                        ) [Statements]
                                        DesignatorStatement(
                                          Assignment(
                                            Designator_0(
                                             niz
                                              TermExpr(
                                                FactorTerm(
                                                  ValFactor(
                                                    NumConst(
                                                     1
                                                    ) [NumConst]
                                                  ) [ValFactor]
                                                ) [FactorTerm]
                                              ) [TermExpr]
                                            ) [Designator_0]
                                            TermExpr(
                                              FactorTerm(
                                                ValFactor(
                                                  NumConst(
                                                   2
                                                  ) [NumConst]
                                                ) [ValFactor]
                                              ) [FactorTerm]
                                            ) [TermExpr]
                                          ) [Assignment]
                                        ) [DesignatorStatement]
                                      ) [Statements]
                                      DesignatorStatement(
                                        Assignment(
                                          Designator_0(
                                           niz
                                            TermExpr(
                                              FactorTerm(
                                                VarFactor(
                                                  Designator_0(
                                                   niz
                                                    TermExpr(
                                                      FactorTerm(
                                                        VarFactor(
                                                          Designator_1(
                                                           jedan
                                                          ) [Designator_1]
                                                        ) [VarFactor]
                                                      ) [FactorTerm]
                                                    ) [TermExpr]
                                                  ) [Designator_0]
                                                ) [VarFactor]
                                              ) [FactorTerm]
                                            ) [TermExpr]
                                          ) [Designator_0]
                                          TermExpr(
                                            MulTerm(
                                              VarFactor(
                                                Designator_0(
                                                 niz
                                                  TermExpr(
                                                    FactorTerm(
                                                      VarFactor(
                                                        Designator_0(
                                                         niz
                                                          TermExpr(
                                                            FactorTerm(
                                                              ValFactor(
                                                                NumConst(
                                                                 0
                                                                ) [NumConst]
                                                              ) [ValFactor]
                                                            ) [FactorTerm]
                                                          ) [TermExpr]
                                                        ) [Designator_0]
                                                      ) [VarFactor]
                                                    ) [FactorTerm]
                                                  ) [TermExpr]
                                                ) [Designator_0]
                                              ) [VarFactor]
                                              MoreFactorSingle(
                                                MoreFactorPart(
                                                  Mulop(
                                                  ) [Mulop]
                                                  ValFactor(
                                                    NumConst(
                                                     3
                                                    ) [NumConst]
                                                  ) [ValFactor]
                                                ) [MoreFactorPart]
                                              ) [MoreFactorSingle]
                                            ) [MulTerm]
                                          ) [TermExpr]
                                        ) [Assignment]
                                      ) [DesignatorStatement]
                                    ) [Statements]
                                    DesignatorStatement(
                                      Assignment(
                                        Designator_1(
                                         bodovi
                                        ) [Designator_1]
                                        TermExpr(
                                          MulTerm(
                                            VarFactor(
                                              Designator_0(
                                               niz
                                                TermExpr(
                                                  FactorTerm(
                                                    ValFactor(
                                                      NumConst(
                                                       2
                                                      ) [NumConst]
                                                    ) [ValFactor]
                                                  ) [FactorTerm]
                                                ) [TermExpr]
                                              ) [Designator_0]
                                            ) [VarFactor]
                                            MoreFactorSingle(
                                              MoreFactorPart(
                                                Divop(
                                                ) [Divop]
                                                VarFactor(
                                                  Designator_0(
                                                   niz
                                                    TermExpr(
                                                      FactorTerm(
                                                        ValFactor(
                                                          NumConst(
                                                           0
                                                          ) [NumConst]
                                                        ) [ValFactor]
                                                      ) [FactorTerm]
                                                    ) [TermExpr]
                                                  ) [Designator_0]
                                                ) [VarFactor]
                                              ) [MoreFactorPart]
                                            ) [MoreFactorSingle]
                                          ) [MulTerm]
                                        ) [TermExpr]
                                      ) [Assignment]
                                    ) [DesignatorStatement]
                                  ) [Statements]
                                  PrintStmt(
                                    TermExpr(
                                      FactorTerm(
                                        VarFactor(
                                          Designator_1(
                                           bodovi
                                          ) [Designator_1]
                                        ) [VarFactor]
                                      ) [FactorTerm]
                                    ) [TermExpr]
                                  ) [PrintStmt]
                                ) [Statements]
                                PrintStmt(
                                  TermExpr(
                                    FactorTerm(
                                      VarFactor(
                                        Designator_0(
                                         niz
                                          TermExpr(
                                            FactorTerm(
                                              ValFactor(
                                                NumConst(
                                                 2
                                                ) [NumConst]
                                              ) [ValFactor]
                                            ) [FactorTerm]
                                          ) [TermExpr]
                                        ) [Designator_0]
                                      ) [VarFactor]
                                    ) [FactorTerm]
                                  ) [TermExpr]
                                ) [PrintStmt]
                              ) [Statements]
                              DesignatorStatement(
                                Assignment(
                                  Designator_1(
                                   nizch
                                  ) [Designator_1]
                                  TermExpr(
                                    FactorTerm(
                                      NewOperator(
                                        Type(
                                         char
                                        ) [Type]
                                        TermExpr(
                                          FactorTerm(
                                            ValFactor(
                                              NumConst(
                                               3
                                              ) [NumConst]
                                            ) [ValFactor]
                                          ) [FactorTerm]
                                        ) [TermExpr]
                                      ) [NewOperator]
                                    ) [FactorTerm]
                                  ) [TermExpr]
                                ) [Assignment]
                              ) [DesignatorStatement]
                            ) [Statements]
                            DesignatorStatement(
                              Assignment(
                                Designator_0(
                                 nizch
                                  TermExpr(
                                    FactorTerm(
                                      ValFactor(
                                        NumConst(
                                         0
                                        ) [NumConst]
                                      ) [ValFactor]
                                    ) [FactorTerm]
                                  ) [TermExpr]
                                ) [Designator_0]
                                TermExpr(
                                  FactorTerm(
                                    ValFactor(
                                      CharConst(
                                       a
                                      ) [CharConst]
                                    ) [ValFactor]
                                  ) [FactorTerm]
                                ) [TermExpr]
                              ) [Assignment]
                            ) [DesignatorStatement]
                          ) [Statements]
                          DesignatorStatement(
                            Assignment(
                              Designator_0(
                               nizch
                                TermExpr(
                                  FactorTerm(
                                    VarFactor(
                                      Designator_1(
                                       jedan
                                      ) [Designator_1]
                                    ) [VarFactor]
                                  ) [FactorTerm]
                                ) [TermExpr]
                              ) [Designator_0]
                              TermExpr(
                                FactorTerm(
                                  ValFactor(
                                    CharConst(
                                     b
                                    ) [CharConst]
                                  ) [ValFactor]
                                ) [FactorTerm]
                              ) [TermExpr]
                            ) [Assignment]
                          ) [DesignatorStatement]
                        ) [Statements]
                        DesignatorStatement(
                          Assignment(
                            Designator_0(
                             nizch
                              AddExpr(
                                FactorTerm(
                                  VarFactor(
                                    Designator_1(
                                     pet
                                    ) [Designator_1]
                                  ) [VarFactor]
                                ) [FactorTerm]
                                MoreTermSingle(
                                  MoreTermPart(
                                    Subop(
                                    ) [Subop]
                                    FactorTerm(
                                      ValFactor(
                                        NumConst(
                                         3
                                        ) [NumConst]
                                      ) [ValFactor]
                                    ) [FactorTerm]
                                  ) [MoreTermPart]
                                ) [MoreTermSingle]
                              ) [AddExpr]
                            ) [Designator_0]
                            TermExpr(
                              FactorTerm(
                                ValFactor(
                                  CharConst(
                                   c
                                  ) [CharConst]
                                ) [ValFactor]
                              ) [FactorTerm]
                            ) [TermExpr]
                          ) [Assignment]
                        ) [DesignatorStatement]
                      ) [Statements]
                      PrintStmt(
                        TermExpr(
                          FactorTerm(
                            VarFactor(
                              Designator_0(
                               nizch
                                TermExpr(
                                  FactorTerm(
                                    ValFactor(
                                      NumConst(
                                       1
                                      ) [NumConst]
                                    ) [ValFactor]
                                  ) [FactorTerm]
                                ) [TermExpr]
                              ) [Designator_0]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [TermExpr]
                      ) [PrintStmt]
                    ) [Statements]
                    PrintStmt(
                      TermExpr(
                        FactorTerm(
                          VarFactor(
                            Designator_0(
                             nizch
                              TermExpr(
                                MulTerm(
                                  VarFactor(
                                    Designator_1(
                                     jedan
                                    ) [Designator_1]
                                  ) [VarFactor]
                                  MoreFactorSingle(
                                    MoreFactorPart(
                                      Mulop(
                                      ) [Mulop]
                                      ValFactor(
                                        NumConst(
                                         2
                                        ) [NumConst]
                                      ) [ValFactor]
                                    ) [MoreFactorPart]
                                  ) [MoreFactorSingle]
                                ) [MulTerm]
                              ) [TermExpr]
                            ) [Designator_0]
                          ) [VarFactor]
                        ) [FactorTerm]
                      ) [TermExpr]
                    ) [PrintStmt]
                  ) [Statements]
                  DesignatorStatement(
                    Assignment(
                      Designator_1(
                       bodovi
                      ) [Designator_1]
                      AddExpr(
                        FactorTerm(
                          VarFactor(
                            Designator_1(
                             bodovi
                            ) [Designator_1]
                          ) [VarFactor]
                        ) [FactorTerm]
                        MoreTermMulti(
                          MoreTermSingle(
                            MoreTermPart(
                              Addop(
                              ) [Addop]
                              MulTerm(
                                FactorExpr(
                                  AddExpr(
                                    MulTerm(
                                      VarFactor(
                                        Designator_1(
                                         pet
                                        ) [Designator_1]
                                      ) [VarFactor]
                                      MoreFactorSingle(
                                        MoreFactorPart(
                                          Mulop(
                                          ) [Mulop]
                                          VarFactor(
                                            Designator_1(
                                             jedan
                                            ) [Designator_1]
                                          ) [VarFactor]
                                        ) [MoreFactorPart]
                                      ) [MoreFactorSingle]
                                    ) [MulTerm]
                                    MoreTermSingle(
                                      MoreTermPart(
                                        Subop(
                                        ) [Subop]
                                        FactorTerm(
                                          ValFactor(
                                            NumConst(
                                             1
                                            ) [NumConst]
                                          ) [ValFactor]
                                        ) [FactorTerm]
                                      ) [MoreTermPart]
                                    ) [MoreTermSingle]
                                  ) [AddExpr]
                                ) [FactorExpr]
                                MoreFactorSingle(
                                  MoreFactorPart(
                                    Mulop(
                                    ) [Mulop]
                                    VarFactor(
                                      Designator_1(
                                       bodovi
                                      ) [Designator_1]
                                    ) [VarFactor]
                                  ) [MoreFactorPart]
                                ) [MoreFactorSingle]
                              ) [MulTerm]
                            ) [MoreTermPart]
                          ) [MoreTermSingle]
                          MoreTermPart(
                            Subop(
                            ) [Subop]
                            FactorTerm(
                              FactorExpr(
                                AddExpr(
                                  MulTerm(
                                    ValFactor(
                                      NumConst(
                                       3
                                      ) [NumConst]
                                    ) [ValFactor]
                                    MoreFactorSingle(
                                      MoreFactorPart(
                                        Modop(
                                        ) [Modop]
                                        ValFactor(
                                          NumConst(
                                           2
                                          ) [NumConst]
                                        ) [ValFactor]
                                      ) [MoreFactorPart]
                                    ) [MoreFactorSingle]
                                  ) [MulTerm]
                                  MoreTermMulti(
                                    MoreTermSingle(
                                      MoreTermPart(
                                        Addop(
                                        ) [Addop]
                                        MulTerm(
                                          ValFactor(
                                            NumConst(
                                             3
                                            ) [NumConst]
                                          ) [ValFactor]
                                          MoreFactorSingle(
                                            MoreFactorPart(
                                              Mulop(
                                              ) [Mulop]
                                              ValFactor(
                                                NumConst(
                                                 2
                                                ) [NumConst]
                                              ) [ValFactor]
                                            ) [MoreFactorPart]
                                          ) [MoreFactorSingle]
                                        ) [MulTerm]
                                      ) [MoreTermPart]
                                    ) [MoreTermSingle]
                                    MoreTermPart(
                                      Subop(
                                      ) [Subop]
                                      FactorTerm(
                                        ValFactor(
                                          NumConst(
                                           3
                                          ) [NumConst]
                                        ) [ValFactor]
                                      ) [FactorTerm]
                                    ) [MoreTermPart]
                                  ) [MoreTermMulti]
                                ) [AddExpr]
                              ) [FactorExpr]
                            ) [FactorTerm]
                          ) [MoreTermPart]
                        ) [MoreTermMulti]
                      ) [AddExpr]
                    ) [Assignment]
                  ) [DesignatorStatement]
                ) [Statements]
                PrintStmt(
                  TermExpr(
                    FactorTerm(
                      VarFactor(
                        Designator_1(
                         bodovi
                        ) [Designator_1]
                      ) [VarFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [Statements]
              StmtRead(
                Designator_1(
                 bodovi
                ) [Designator_1]
              ) [StmtRead]
            ) [Statements]
            DesignatorStatement(
              Assignment(
                Designator_1(
                 bt
                ) [Designator_1]
                TermExpr(
                  FactorTerm(
                    ValFactor(
                      BoolConst(
                       true
                      ) [BoolConst]
                    ) [ValFactor]
                  ) [FactorTerm]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStatement]
          ) [Statements]
          MatchedStatement(
            CondDerived1(
              Condition_one(
                Cond_term_one(
                  Cond_fact_one(
                    TermExpr(
                      FactorTerm(
                        VarFactor(
                          Designator_1(
                           bt
                          ) [Designator_1]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                  ) [Cond_fact_one]
                ) [Cond_term_one]
              ) [Condition_one]
            ) [CondDerived1]
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     bodovi
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
            PrintStmt(
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     bodovi
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         10
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [PrintStmt]
          ) [MatchedStatement]
        ) [Statements]
        MatchedStatement(
          CondDerived1(
            Condition_one(
              Cond_term_one(
                Cond_fact_two(
                  Cond_fact_one(
                    TermExpr(
                      FactorTerm(
                        VarFactor(
                          Designator_1(
                           bodovi
                          ) [Designator_1]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                  ) [Cond_fact_one]
                  RelopGT(
                  ) [RelopGT]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         10
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Cond_fact_two]
              ) [Cond_term_one]
            ) [Condition_one]
          ) [CondDerived1]
          PrintStmt(
            TermExpr(
              FactorTerm(
                ValFactor(
                  CharConst(
                   +
                  ) [CharConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [PrintStmt]
          PrintStmt(
            TermExpr(
              FactorTerm(
                ValFactor(
                  CharConst(
                   -
                  ) [CharConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStatement]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  20:38:36,957 - 
================SEMANTICKA OBRADA====================

INFO  20:38:36,961 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  20:38:36,961 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  20:38:36,962 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  20:38:36,962 - Deklarisan niz niz na liniji 9
INFO  20:38:36,962 - Deklarisan niz nizch na liniji 10
INFO  20:38:36,962 - Obradjuje se funkcija main na liniji 13
INFO  20:38:36,962 - Deklarisana promenljiva bodovi na liniji 14
INFO  20:38:36,962 - Deklarisana promenljiva bt na liniji 15
ERROR 20:38:36,962 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 20:38:36,962 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 34
ERROR 20:38:36,964 - Ulazni fajl [test/program.mj] ima semantickih gresaka!
Parsiranje nije uspesno zavrseno!
INFO  20:42:50,024 - Kompajliranje ulaznog fajla test\program.mj
INFO  20:42:50,056 - #2 program
INFO  20:42:50,056 - #9 test301
INFO  20:42:50,056 - #5 const
INFO  20:54:25,564 - Kompajliranje ulaznog fajla test\program.mj
INFO  20:54:25,601 - #2 program
INFO  20:54:25,601 - #9 test301
INFO  20:54:25,601 - #5 const
INFO  20:54:25,602 - #9 int
INFO  20:54:25,602 - #9 nula
INFO  20:54:25,602 - #25 =
INFO  20:54:25,603 - #10 0
INFO  20:54:25,603 - #28 ;
INFO  20:54:25,603 - #5 const
INFO  20:54:25,604 - #9 int
INFO  20:54:25,604 - #9 jedan
INFO  20:54:25,604 - #25 =
INFO  20:54:25,604 - #10 1
INFO  20:54:25,604 - #28 ;
INFO  20:54:25,604 - #5 const
INFO  20:54:25,604 - #9 int
INFO  20:54:25,604 - #9 pet
INFO  20:54:25,604 - #25 =
INFO  20:54:25,604 - #10 5
INFO  20:54:25,604 - #28 ;
INFO  20:54:25,604 - #9 int
INFO  20:54:25,604 - #9 niz
INFO  20:54:25,605 - #23 [
INFO  20:54:25,605 - #24 ]
INFO  20:54:25,605 - #28 ;
INFO  20:54:25,605 - #9 char
INFO  20:54:25,605 - #9 nizch
INFO  20:54:25,606 - #23 [
INFO  20:54:25,606 - #24 ]
INFO  20:54:25,606 - #28 ;
INFO  20:54:25,606 - #21 {
INFO  20:54:25,606 - #9 int
INFO  20:54:25,606 - #9 main
INFO  20:54:25,606 - #30 (
INFO  20:54:25,607 - #31 )
INFO  20:54:25,607 - #9 int
INFO  20:54:25,608 - #9 bodovi
INFO  20:54:25,608 - #28 ;
INFO  20:54:25,608 - #9 bool
INFO  20:54:25,608 - #9 bt
INFO  20:54:25,608 - #28 ;
INFO  20:54:25,608 - #21 {
INFO  20:54:25,608 - #9 bodovi
INFO  20:54:25,608 - #25 =
INFO  20:54:25,609 - #10 0
INFO  20:54:25,609 - #28 ;
INFO  20:54:25,609 - #9 bodovi
INFO  20:54:25,610 - #26 ++
INFO  20:54:25,610 - #28 ;
INFO  20:54:25,610 - #9 bodovi
INFO  20:54:25,610 - #25 =
INFO  20:54:25,610 - #9 bodovi
INFO  20:54:25,610 - #14 +
INFO  20:54:25,611 - #9 jedan
INFO  20:54:25,611 - #28 ;
INFO  20:54:25,612 - #9 bodovi
INFO  20:54:25,612 - #25 =
INFO  20:54:25,612 - #9 bodovi
INFO  20:54:25,612 - #16 *
INFO  20:54:25,612 - #9 pet
INFO  20:54:25,612 - #28 ;
INFO  20:54:25,613 - #9 bodovi
INFO  20:54:25,613 - #27 --
INFO  20:54:25,613 - #28 ;
INFO  20:54:25,614 - #3 print
INFO  20:54:25,614 - #30 (
INFO  20:54:25,614 - #9 bodovi
INFO  20:54:25,614 - #31 )
INFO  20:54:25,614 - #28 ;
INFO  20:54:25,614 - #9 niz
INFO  20:54:25,614 - #25 =
INFO  20:54:25,614 - #7 new
INFO  20:54:25,614 - #9 int
INFO  20:54:25,614 - #23 [
INFO  20:54:25,614 - #10 3
INFO  20:54:25,614 - #24 ]
INFO  20:54:25,614 - #28 ;
INFO  20:54:25,614 - #9 niz
INFO  20:54:25,615 - #23 [
INFO  20:54:25,615 - #9 nula
INFO  20:54:25,615 - #24 ]
INFO  20:54:25,615 - #25 =
INFO  20:54:25,615 - #9 jedan
INFO  20:54:25,615 - #28 ;
INFO  20:54:25,615 - #9 niz
INFO  20:54:25,615 - #23 [
INFO  20:54:25,615 - #10 1
INFO  20:54:25,615 - #24 ]
INFO  20:54:25,615 - #25 =
INFO  20:54:25,616 - #10 2
INFO  20:54:25,616 - #28 ;
INFO  20:54:25,616 - #9 niz
INFO  20:54:25,616 - #23 [
INFO  20:54:25,616 - #9 niz
INFO  20:54:25,616 - #23 [
INFO  20:54:25,616 - #9 jedan
INFO  20:54:25,616 - #24 ]
INFO  20:54:25,616 - #24 ]
INFO  20:54:25,616 - #25 =
INFO  20:54:25,616 - #9 niz
INFO  20:54:25,616 - #23 [
INFO  20:54:25,616 - #9 niz
INFO  20:54:25,616 - #23 [
INFO  20:54:25,616 - #10 0
INFO  20:54:25,616 - #24 ]
INFO  20:54:25,616 - #24 ]
INFO  20:54:25,616 - #16 *
INFO  20:54:25,617 - #10 3
INFO  20:54:25,617 - #28 ;
INFO  20:54:25,617 - #9 bodovi
INFO  20:54:25,617 - #25 =
INFO  20:54:25,617 - #9 niz
INFO  20:54:25,617 - #23 [
INFO  20:54:25,617 - #10 2
INFO  20:54:25,617 - #24 ]
INFO  20:54:25,617 - #17 /
INFO  20:54:25,617 - #9 niz
INFO  20:54:25,618 - #23 [
INFO  20:54:25,618 - #10 0
INFO  20:54:25,618 - #24 ]
INFO  20:54:25,618 - #28 ;
INFO  20:54:25,618 - #3 print
INFO  20:54:25,618 - #30 (
INFO  20:54:25,618 - #9 bodovi
INFO  20:54:25,618 - #31 )
INFO  20:54:25,618 - #28 ;
INFO  20:54:25,618 - #3 print
INFO  20:54:25,619 - #30 (
INFO  20:54:25,619 - #9 niz
INFO  20:54:25,619 - #23 [
INFO  20:54:25,619 - #10 2
INFO  20:54:25,619 - #24 ]
INFO  20:54:25,619 - #31 )
INFO  20:54:25,619 - #28 ;
INFO  20:54:25,619 - #9 nizch
INFO  20:54:25,619 - #25 =
INFO  20:54:25,619 - #7 new
INFO  20:54:25,619 - #9 char
INFO  20:54:25,619 - #23 [
INFO  20:54:25,619 - #10 3
INFO  20:54:25,619 - #24 ]
INFO  20:54:25,619 - #28 ;
INFO  20:54:25,619 - #9 nizch
INFO  20:54:25,619 - #23 [
INFO  20:54:25,620 - #10 0
INFO  20:54:25,620 - #24 ]
INFO  20:54:25,620 - #25 =
INFO  20:54:25,620 - #11 a
INFO  20:54:25,620 - #28 ;
INFO  20:54:25,620 - #9 nizch
INFO  20:54:25,620 - #23 [
INFO  20:54:25,620 - #9 jedan
INFO  20:54:25,620 - #24 ]
INFO  20:54:25,620 - #25 =
INFO  20:54:25,620 - #11 b
INFO  20:54:25,620 - #28 ;
INFO  20:54:25,620 - #9 nizch
INFO  20:54:25,620 - #23 [
INFO  20:54:25,620 - #9 pet
INFO  20:54:25,620 - #15 -
INFO  20:54:25,620 - #10 3
INFO  20:54:25,621 - #24 ]
INFO  20:54:25,621 - #25 =
INFO  20:54:25,621 - #11 c
INFO  20:54:25,621 - #28 ;
INFO  20:54:25,621 - #3 print
INFO  20:54:25,621 - #30 (
INFO  20:54:25,621 - #9 nizch
INFO  20:54:25,621 - #23 [
INFO  20:54:25,621 - #10 1
INFO  20:54:25,621 - #24 ]
INFO  20:54:25,621 - #31 )
INFO  20:54:25,622 - #28 ;
INFO  20:54:25,622 - #3 print
INFO  20:54:25,622 - #30 (
INFO  20:54:25,622 - #9 nizch
INFO  20:54:25,622 - #23 [
INFO  20:54:25,622 - #9 jedan
INFO  20:54:25,622 - #16 *
INFO  20:54:25,622 - #10 2
INFO  20:54:25,622 - #24 ]
INFO  20:54:25,622 - #31 )
INFO  20:54:25,622 - #28 ;
INFO  20:54:25,622 - #9 bodovi
INFO  20:54:25,623 - #25 =
INFO  20:54:25,623 - #9 bodovi
INFO  20:54:25,623 - #14 +
INFO  20:54:25,623 - #30 (
INFO  20:54:25,623 - #9 pet
INFO  20:54:25,623 - #16 *
INFO  20:54:25,623 - #9 jedan
INFO  20:54:25,624 - #15 -
INFO  20:54:25,624 - #10 1
INFO  20:54:25,624 - #31 )
INFO  20:54:25,624 - #16 *
INFO  20:54:25,624 - #9 bodovi
INFO  20:54:25,624 - #15 -
INFO  20:54:25,624 - #30 (
INFO  20:54:25,624 - #10 3
INFO  20:54:25,624 - #18 %
INFO  20:54:25,624 - #10 2
INFO  20:54:25,625 - #14 +
INFO  20:54:25,625 - #10 3
INFO  20:54:25,625 - #16 *
INFO  20:54:25,625 - #10 2
INFO  20:54:25,625 - #15 -
INFO  20:54:25,625 - #10 3
INFO  20:54:25,625 - #31 )
INFO  20:54:25,625 - #28 ;
INFO  20:54:25,625 - #3 print
INFO  20:54:25,625 - #30 (
INFO  20:54:25,625 - #9 bodovi
INFO  20:54:25,628 - #31 )
INFO  20:54:25,628 - #28 ;
INFO  20:54:25,628 - #4 read
INFO  20:54:25,628 - #30 (
INFO  20:54:25,628 - #9 bodovi
INFO  20:54:25,628 - #31 )
INFO  20:54:25,628 - #28 ;
INFO  20:54:25,628 - #9 bt
INFO  20:54:25,629 - #25 =
INFO  20:54:25,629 - #8 true
INFO  20:54:25,629 - #28 ;
INFO  20:54:25,629 - #32 if
INFO  20:54:25,629 - #30 (
INFO  20:54:25,629 - #9 bt
INFO  20:54:25,629 - #31 )
INFO  20:54:25,629 - #21 {
INFO  20:54:25,629 - #3 print
INFO  20:54:25,629 - #30 (
INFO  20:54:25,629 - #9 bodovi
INFO  20:54:25,629 - #31 )
INFO  20:54:25,630 - #28 ;
INFO  20:54:25,630 - #22 }
INFO  20:54:25,630 - #33 else
ERROR 20:54:25,630 - 
Sintaksna greska na liniji 50
INFO  20:54:25,630 - #21 {
INFO  20:54:25,630 - #3 print
INFO  20:54:25,630 - #30 (
INFO  20:54:25,630 - #9 bodovi
INFO  20:54:25,630 - #14 +
INFO  20:54:25,630 - #10 10
INFO  20:54:25,630 - #31 )
INFO  20:54:25,630 - #28 ;
INFO  20:54:25,630 - #22 }
INFO  20:54:25,631 - #32 if
INFO  20:54:25,631 - #30 (
ERROR 20:54:25,631 - Izvrsen oporavak do 5 u liniji 49
INFO  20:54:25,631 - #9 bodovi
INFO  20:54:25,631 - #38 >
INFO  20:54:25,631 - #10 10
INFO  20:54:25,632 - #31 )
INFO  20:54:25,632 - #21 {
INFO  20:54:25,632 - #3 print
INFO  20:54:25,632 - #30 (
INFO  20:54:25,632 - #11 +
INFO  20:54:25,632 - #31 )
INFO  20:54:25,632 - #28 ;
INFO  20:54:25,632 - #22 }
INFO  20:54:25,632 - #33 else
ERROR 20:54:25,633 - 
Sintaksna greska na liniji 56
INFO  20:54:25,633 - #21 {
INFO  20:54:25,633 - #3 print
INFO  20:54:25,633 - #30 (
INFO  20:54:25,633 - #11 -
INFO  20:54:25,633 - #31 )
INFO  20:54:25,633 - #28 ;
INFO  20:54:25,633 - #22 }
INFO  20:54:25,633 - #22 }
INFO  20:54:25,633 - #22 }
ERROR 20:54:25,633 - Izvrsen oporavak do 5 u liniji 55
INFO  20:54:25,634 - 
================SINTAKSNO STABLO====================

INFO  20:54:25,640 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 bodovi
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            Statements(
                                              Statements(
                                                Statements(
                                                  Statements(
                                                    Statements(
                                                      Statements(
                                                        NoStmt(
                                                        ) [NoStmt]
                                                        MatchedStmt(
                                                          DesignatorStatement(
                                                            Assignment(
                                                              Designator_1(
                                                               bodovi
                                                              ) [Designator_1]
                                                              TermExpr(
                                                                FactorTerm(
                                                                  ValFactor(
                                                                    NumConst(
                                                                     0
                                                                    ) [NumConst]
                                                                  ) [ValFactor]
                                                                ) [FactorTerm]
                                                              ) [TermExpr]
                                                            ) [Assignment]
                                                          ) [DesignatorStatement]
                                                        ) [MatchedStmt]
                                                      ) [Statements]
                                                      MatchedStmt(
                                                        DesignatorStatement(
                                                          Increment(
                                                            Designator_1(
                                                             bodovi
                                                            ) [Designator_1]
                                                          ) [Increment]
                                                        ) [DesignatorStatement]
                                                      ) [MatchedStmt]
                                                    ) [Statements]
                                                    MatchedStmt(
                                                      DesignatorStatement(
                                                        Assignment(
                                                          Designator_1(
                                                           bodovi
                                                          ) [Designator_1]
                                                          AddExpr(
                                                            FactorTerm(
                                                              VarFactor(
                                                                Designator_1(
                                                                 bodovi
                                                                ) [Designator_1]
                                                              ) [VarFactor]
                                                            ) [FactorTerm]
                                                            MoreTermSingle(
                                                              MoreTermPart(
                                                                Addop(
                                                                ) [Addop]
                                                                FactorTerm(
                                                                  VarFactor(
                                                                    Designator_1(
                                                                     jedan
                                                                    ) [Designator_1]
                                                                  ) [VarFactor]
                                                                ) [FactorTerm]
                                                              ) [MoreTermPart]
                                                            ) [MoreTermSingle]
                                                          ) [AddExpr]
                                                        ) [Assignment]
                                                      ) [DesignatorStatement]
                                                    ) [MatchedStmt]
                                                  ) [Statements]
                                                  MatchedStmt(
                                                    DesignatorStatement(
                                                      Assignment(
                                                        Designator_1(
                                                         bodovi
                                                        ) [Designator_1]
                                                        TermExpr(
                                                          MulTerm(
                                                            VarFactor(
                                                              Designator_1(
                                                               bodovi
                                                              ) [Designator_1]
                                                            ) [VarFactor]
                                                            MoreFactorSingle(
                                                              MoreFactorPart(
                                                                Mulop(
                                                                ) [Mulop]
                                                                VarFactor(
                                                                  Designator_1(
                                                                   pet
                                                                  ) [Designator_1]
                                                                ) [VarFactor]
                                                              ) [MoreFactorPart]
                                                            ) [MoreFactorSingle]
                                                          ) [MulTerm]
                                                        ) [TermExpr]
                                                      ) [Assignment]
                                                    ) [DesignatorStatement]
                                                  ) [MatchedStmt]
                                                ) [Statements]
                                                MatchedStmt(
                                                  DesignatorStatement(
                                                    Decrement(
                                                      Designator_1(
                                                       bodovi
                                                      ) [Designator_1]
                                                    ) [Decrement]
                                                  ) [DesignatorStatement]
                                                ) [MatchedStmt]
                                              ) [Statements]
                                              MatchedStmt(
                                                PrintStmt(
                                                  TermExpr(
                                                    FactorTerm(
                                                      VarFactor(
                                                        Designator_1(
                                                         bodovi
                                                        ) [Designator_1]
                                                      ) [VarFactor]
                                                    ) [FactorTerm]
                                                  ) [TermExpr]
                                                ) [PrintStmt]
                                              ) [MatchedStmt]
                                            ) [Statements]
                                            MatchedStmt(
                                              DesignatorStatement(
                                                Assignment(
                                                  Designator_1(
                                                   niz
                                                  ) [Designator_1]
                                                  TermExpr(
                                                    FactorTerm(
                                                      NewOperator(
                                                        Type(
                                                         int
                                                        ) [Type]
                                                        TermExpr(
                                                          FactorTerm(
                                                            ValFactor(
                                                              NumConst(
                                                               3
                                                              ) [NumConst]
                                                            ) [ValFactor]
                                                          ) [FactorTerm]
                                                        ) [TermExpr]
                                                      ) [NewOperator]
                                                    ) [FactorTerm]
                                                  ) [TermExpr]
                                                ) [Assignment]
                                              ) [DesignatorStatement]
                                            ) [MatchedStmt]
                                          ) [Statements]
                                          MatchedStmt(
                                            DesignatorStatement(
                                              Assignment(
                                                Designator_0(
                                                 niz
                                                  TermExpr(
                                                    FactorTerm(
                                                      VarFactor(
                                                        Designator_1(
                                                         nula
                                                        ) [Designator_1]
                                                      ) [VarFactor]
                                                    ) [FactorTerm]
                                                  ) [TermExpr]
                                                ) [Designator_0]
                                                TermExpr(
                                                  FactorTerm(
                                                    VarFactor(
                                                      Designator_1(
                                                       jedan
                                                      ) [Designator_1]
                                                    ) [VarFactor]
                                                  ) [FactorTerm]
                                                ) [TermExpr]
                                              ) [Assignment]
                                            ) [DesignatorStatement]
                                          ) [MatchedStmt]
                                        ) [Statements]
                                        MatchedStmt(
                                          DesignatorStatement(
                                            Assignment(
                                              Designator_0(
                                               niz
                                                TermExpr(
                                                  FactorTerm(
                                                    ValFactor(
                                                      NumConst(
                                                       1
                                                      ) [NumConst]
                                                    ) [ValFactor]
                                                  ) [FactorTerm]
                                                ) [TermExpr]
                                              ) [Designator_0]
                                              TermExpr(
                                                FactorTerm(
                                                  ValFactor(
                                                    NumConst(
                                                     2
                                                    ) [NumConst]
                                                  ) [ValFactor]
                                                ) [FactorTerm]
                                              ) [TermExpr]
                                            ) [Assignment]
                                          ) [DesignatorStatement]
                                        ) [MatchedStmt]
                                      ) [Statements]
                                      MatchedStmt(
                                        DesignatorStatement(
                                          Assignment(
                                            Designator_0(
                                             niz
                                              TermExpr(
                                                FactorTerm(
                                                  VarFactor(
                                                    Designator_0(
                                                     niz
                                                      TermExpr(
                                                        FactorTerm(
                                                          VarFactor(
                                                            Designator_1(
                                                             jedan
                                                            ) [Designator_1]
                                                          ) [VarFactor]
                                                        ) [FactorTerm]
                                                      ) [TermExpr]
                                                    ) [Designator_0]
                                                  ) [VarFactor]
                                                ) [FactorTerm]
                                              ) [TermExpr]
                                            ) [Designator_0]
                                            TermExpr(
                                              MulTerm(
                                                VarFactor(
                                                  Designator_0(
                                                   niz
                                                    TermExpr(
                                                      FactorTerm(
                                                        VarFactor(
                                                          Designator_0(
                                                           niz
                                                            TermExpr(
                                                              FactorTerm(
                                                                ValFactor(
                                                                  NumConst(
                                                                   0
                                                                  ) [NumConst]
                                                                ) [ValFactor]
                                                              ) [FactorTerm]
                                                            ) [TermExpr]
                                                          ) [Designator_0]
                                                        ) [VarFactor]
                                                      ) [FactorTerm]
                                                    ) [TermExpr]
                                                  ) [Designator_0]
                                                ) [VarFactor]
                                                MoreFactorSingle(
                                                  MoreFactorPart(
                                                    Mulop(
                                                    ) [Mulop]
                                                    ValFactor(
                                                      NumConst(
                                                       3
                                                      ) [NumConst]
                                                    ) [ValFactor]
                                                  ) [MoreFactorPart]
                                                ) [MoreFactorSingle]
                                              ) [MulTerm]
                                            ) [TermExpr]
                                          ) [Assignment]
                                        ) [DesignatorStatement]
                                      ) [MatchedStmt]
                                    ) [Statements]
                                    MatchedStmt(
                                      DesignatorStatement(
                                        Assignment(
                                          Designator_1(
                                           bodovi
                                          ) [Designator_1]
                                          TermExpr(
                                            MulTerm(
                                              VarFactor(
                                                Designator_0(
                                                 niz
                                                  TermExpr(
                                                    FactorTerm(
                                                      ValFactor(
                                                        NumConst(
                                                         2
                                                        ) [NumConst]
                                                      ) [ValFactor]
                                                    ) [FactorTerm]
                                                  ) [TermExpr]
                                                ) [Designator_0]
                                              ) [VarFactor]
                                              MoreFactorSingle(
                                                MoreFactorPart(
                                                  Divop(
                                                  ) [Divop]
                                                  VarFactor(
                                                    Designator_0(
                                                     niz
                                                      TermExpr(
                                                        FactorTerm(
                                                          ValFactor(
                                                            NumConst(
                                                             0
                                                            ) [NumConst]
                                                          ) [ValFactor]
                                                        ) [FactorTerm]
                                                      ) [TermExpr]
                                                    ) [Designator_0]
                                                  ) [VarFactor]
                                                ) [MoreFactorPart]
                                              ) [MoreFactorSingle]
                                            ) [MulTerm]
                                          ) [TermExpr]
                                        ) [Assignment]
                                      ) [DesignatorStatement]
                                    ) [MatchedStmt]
                                  ) [Statements]
                                  MatchedStmt(
                                    PrintStmt(
                                      TermExpr(
                                        FactorTerm(
                                          VarFactor(
                                            Designator_1(
                                             bodovi
                                            ) [Designator_1]
                                          ) [VarFactor]
                                        ) [FactorTerm]
                                      ) [TermExpr]
                                    ) [PrintStmt]
                                  ) [MatchedStmt]
                                ) [Statements]
                                MatchedStmt(
                                  PrintStmt(
                                    TermExpr(
                                      FactorTerm(
                                        VarFactor(
                                          Designator_0(
                                           niz
                                            TermExpr(
                                              FactorTerm(
                                                ValFactor(
                                                  NumConst(
                                                   2
                                                  ) [NumConst]
                                                ) [ValFactor]
                                              ) [FactorTerm]
                                            ) [TermExpr]
                                          ) [Designator_0]
                                        ) [VarFactor]
                                      ) [FactorTerm]
                                    ) [TermExpr]
                                  ) [PrintStmt]
                                ) [MatchedStmt]
                              ) [Statements]
                              MatchedStmt(
                                DesignatorStatement(
                                  Assignment(
                                    Designator_1(
                                     nizch
                                    ) [Designator_1]
                                    TermExpr(
                                      FactorTerm(
                                        NewOperator(
                                          Type(
                                           char
                                          ) [Type]
                                          TermExpr(
                                            FactorTerm(
                                              ValFactor(
                                                NumConst(
                                                 3
                                                ) [NumConst]
                                              ) [ValFactor]
                                            ) [FactorTerm]
                                          ) [TermExpr]
                                        ) [NewOperator]
                                      ) [FactorTerm]
                                    ) [TermExpr]
                                  ) [Assignment]
                                ) [DesignatorStatement]
                              ) [MatchedStmt]
                            ) [Statements]
                            MatchedStmt(
                              DesignatorStatement(
                                Assignment(
                                  Designator_0(
                                   nizch
                                    TermExpr(
                                      FactorTerm(
                                        ValFactor(
                                          NumConst(
                                           0
                                          ) [NumConst]
                                        ) [ValFactor]
                                      ) [FactorTerm]
                                    ) [TermExpr]
                                  ) [Designator_0]
                                  TermExpr(
                                    FactorTerm(
                                      ValFactor(
                                        CharConst(
                                         a
                                        ) [CharConst]
                                      ) [ValFactor]
                                    ) [FactorTerm]
                                  ) [TermExpr]
                                ) [Assignment]
                              ) [DesignatorStatement]
                            ) [MatchedStmt]
                          ) [Statements]
                          MatchedStmt(
                            DesignatorStatement(
                              Assignment(
                                Designator_0(
                                 nizch
                                  TermExpr(
                                    FactorTerm(
                                      VarFactor(
                                        Designator_1(
                                         jedan
                                        ) [Designator_1]
                                      ) [VarFactor]
                                    ) [FactorTerm]
                                  ) [TermExpr]
                                ) [Designator_0]
                                TermExpr(
                                  FactorTerm(
                                    ValFactor(
                                      CharConst(
                                       b
                                      ) [CharConst]
                                    ) [ValFactor]
                                  ) [FactorTerm]
                                ) [TermExpr]
                              ) [Assignment]
                            ) [DesignatorStatement]
                          ) [MatchedStmt]
                        ) [Statements]
                        MatchedStmt(
                          DesignatorStatement(
                            Assignment(
                              Designator_0(
                               nizch
                                AddExpr(
                                  FactorTerm(
                                    VarFactor(
                                      Designator_1(
                                       pet
                                      ) [Designator_1]
                                    ) [VarFactor]
                                  ) [FactorTerm]
                                  MoreTermSingle(
                                    MoreTermPart(
                                      Subop(
                                      ) [Subop]
                                      FactorTerm(
                                        ValFactor(
                                          NumConst(
                                           3
                                          ) [NumConst]
                                        ) [ValFactor]
                                      ) [FactorTerm]
                                    ) [MoreTermPart]
                                  ) [MoreTermSingle]
                                ) [AddExpr]
                              ) [Designator_0]
                              TermExpr(
                                FactorTerm(
                                  ValFactor(
                                    CharConst(
                                     c
                                    ) [CharConst]
                                  ) [ValFactor]
                                ) [FactorTerm]
                              ) [TermExpr]
                            ) [Assignment]
                          ) [DesignatorStatement]
                        ) [MatchedStmt]
                      ) [Statements]
                      MatchedStmt(
                        PrintStmt(
                          TermExpr(
                            FactorTerm(
                              VarFactor(
                                Designator_0(
                                 nizch
                                  TermExpr(
                                    FactorTerm(
                                      ValFactor(
                                        NumConst(
                                         1
                                        ) [NumConst]
                                      ) [ValFactor]
                                    ) [FactorTerm]
                                  ) [TermExpr]
                                ) [Designator_0]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [TermExpr]
                        ) [PrintStmt]
                      ) [MatchedStmt]
                    ) [Statements]
                    MatchedStmt(
                      PrintStmt(
                        TermExpr(
                          FactorTerm(
                            VarFactor(
                              Designator_0(
                               nizch
                                TermExpr(
                                  MulTerm(
                                    VarFactor(
                                      Designator_1(
                                       jedan
                                      ) [Designator_1]
                                    ) [VarFactor]
                                    MoreFactorSingle(
                                      MoreFactorPart(
                                        Mulop(
                                        ) [Mulop]
                                        ValFactor(
                                          NumConst(
                                           2
                                          ) [NumConst]
                                        ) [ValFactor]
                                      ) [MoreFactorPart]
                                    ) [MoreFactorSingle]
                                  ) [MulTerm]
                                ) [TermExpr]
                              ) [Designator_0]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [TermExpr]
                      ) [PrintStmt]
                    ) [MatchedStmt]
                  ) [Statements]
                  MatchedStmt(
                    DesignatorStatement(
                      Assignment(
                        Designator_1(
                         bodovi
                        ) [Designator_1]
                        AddExpr(
                          FactorTerm(
                            VarFactor(
                              Designator_1(
                               bodovi
                              ) [Designator_1]
                            ) [VarFactor]
                          ) [FactorTerm]
                          MoreTermMulti(
                            MoreTermSingle(
                              MoreTermPart(
                                Addop(
                                ) [Addop]
                                MulTerm(
                                  FactorExpr(
                                    AddExpr(
                                      MulTerm(
                                        VarFactor(
                                          Designator_1(
                                           pet
                                          ) [Designator_1]
                                        ) [VarFactor]
                                        MoreFactorSingle(
                                          MoreFactorPart(
                                            Mulop(
                                            ) [Mulop]
                                            VarFactor(
                                              Designator_1(
                                               jedan
                                              ) [Designator_1]
                                            ) [VarFactor]
                                          ) [MoreFactorPart]
                                        ) [MoreFactorSingle]
                                      ) [MulTerm]
                                      MoreTermSingle(
                                        MoreTermPart(
                                          Subop(
                                          ) [Subop]
                                          FactorTerm(
                                            ValFactor(
                                              NumConst(
                                               1
                                              ) [NumConst]
                                            ) [ValFactor]
                                          ) [FactorTerm]
                                        ) [MoreTermPart]
                                      ) [MoreTermSingle]
                                    ) [AddExpr]
                                  ) [FactorExpr]
                                  MoreFactorSingle(
                                    MoreFactorPart(
                                      Mulop(
                                      ) [Mulop]
                                      VarFactor(
                                        Designator_1(
                                         bodovi
                                        ) [Designator_1]
                                      ) [VarFactor]
                                    ) [MoreFactorPart]
                                  ) [MoreFactorSingle]
                                ) [MulTerm]
                              ) [MoreTermPart]
                            ) [MoreTermSingle]
                            MoreTermPart(
                              Subop(
                              ) [Subop]
                              FactorTerm(
                                FactorExpr(
                                  AddExpr(
                                    MulTerm(
                                      ValFactor(
                                        NumConst(
                                         3
                                        ) [NumConst]
                                      ) [ValFactor]
                                      MoreFactorSingle(
                                        MoreFactorPart(
                                          Modop(
                                          ) [Modop]
                                          ValFactor(
                                            NumConst(
                                             2
                                            ) [NumConst]
                                          ) [ValFactor]
                                        ) [MoreFactorPart]
                                      ) [MoreFactorSingle]
                                    ) [MulTerm]
                                    MoreTermMulti(
                                      MoreTermSingle(
                                        MoreTermPart(
                                          Addop(
                                          ) [Addop]
                                          MulTerm(
                                            ValFactor(
                                              NumConst(
                                               3
                                              ) [NumConst]
                                            ) [ValFactor]
                                            MoreFactorSingle(
                                              MoreFactorPart(
                                                Mulop(
                                                ) [Mulop]
                                                ValFactor(
                                                  NumConst(
                                                   2
                                                  ) [NumConst]
                                                ) [ValFactor]
                                              ) [MoreFactorPart]
                                            ) [MoreFactorSingle]
                                          ) [MulTerm]
                                        ) [MoreTermPart]
                                      ) [MoreTermSingle]
                                      MoreTermPart(
                                        Subop(
                                        ) [Subop]
                                        FactorTerm(
                                          ValFactor(
                                            NumConst(
                                             3
                                            ) [NumConst]
                                          ) [ValFactor]
                                        ) [FactorTerm]
                                      ) [MoreTermPart]
                                    ) [MoreTermMulti]
                                  ) [AddExpr]
                                ) [FactorExpr]
                              ) [FactorTerm]
                            ) [MoreTermPart]
                          ) [MoreTermMulti]
                        ) [AddExpr]
                      ) [Assignment]
                    ) [DesignatorStatement]
                  ) [MatchedStmt]
                ) [Statements]
                MatchedStmt(
                  PrintStmt(
                    TermExpr(
                      FactorTerm(
                        VarFactor(
                          Designator_1(
                           bodovi
                          ) [Designator_1]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                  ) [PrintStmt]
                ) [MatchedStmt]
              ) [Statements]
              MatchedStmt(
                StmtRead(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                ) [StmtRead]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   bt
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        BoolConst(
                         true
                        ) [BoolConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          UnmatchedStmt(
            UnmatchedIf(
              CondDerived1(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      TermExpr(
                        FactorTerm(
                          VarFactor(
                            Designator_1(
                             bt
                            ) [Designator_1]
                          ) [VarFactor]
                        ) [FactorTerm]
                      ) [TermExpr]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [CondDerived1]
              MatchedStmt(
                ErrorStmt(
                ) [ErrorStmt]
              ) [MatchedStmt]
            ) [UnmatchedIf]
          ) [UnmatchedStmt]
        ) [Statements]
        UnmatchedStmt(
          UnmatchedIf(
            CondDerived1(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    TermExpr(
                      FactorTerm(
                        VarFactor(
                          Designator_1(
                           bodovi
                          ) [Designator_1]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                    RelopGT(
                    ) [RelopGT]
                    TermExpr(
                      FactorTerm(
                        ValFactor(
                          NumConst(
                           10
                          ) [NumConst]
                        ) [ValFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
            ) [CondDerived1]
            MatchedStmt(
              ErrorStmt(
              ) [ErrorStmt]
            ) [MatchedStmt]
          ) [UnmatchedIf]
        ) [UnmatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  20:54:25,656 - 
================SEMANTICKA OBRADA====================

INFO  20:54:25,660 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  20:54:25,660 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  20:54:25,660 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  20:54:25,661 - Deklarisan niz niz na liniji 9
INFO  20:54:25,661 - Deklarisan niz nizch na liniji 10
INFO  20:54:25,661 - Obradjuje se funkcija main na liniji 13
INFO  20:54:25,661 - Deklarisana promenljiva bodovi na liniji 14
INFO  20:54:25,661 - Deklarisana promenljiva bt na liniji 15
ERROR 20:54:25,661 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 20:54:25,661 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 34
ERROR 20:54:25,662 - Ulazni fajl [test/program.mj] ima semantickih gresaka!
Parsiranje nije uspesno zavrseno!
INFO  21:01:32,608 - Kompajliranje ulaznog fajla test\program.mj
INFO  21:01:32,654 - #2 program
INFO  21:01:32,654 - #9 test301
INFO  21:01:32,654 - #5 const
INFO  21:01:32,655 - #9 int
INFO  21:01:32,655 - #9 nula
INFO  21:01:32,655 - #25 =
INFO  21:01:32,655 - #10 0
INFO  21:01:32,656 - #28 ;
INFO  21:01:32,656 - #5 const
INFO  21:01:32,657 - #9 int
INFO  21:01:32,657 - #9 jedan
INFO  21:01:32,657 - #25 =
INFO  21:01:32,657 - #10 1
INFO  21:01:32,657 - #28 ;
INFO  21:01:32,657 - #5 const
INFO  21:01:32,657 - #9 int
INFO  21:01:32,657 - #9 pet
INFO  21:01:32,657 - #25 =
INFO  21:01:32,657 - #10 5
INFO  21:01:32,657 - #28 ;
INFO  21:01:32,658 - #9 int
INFO  21:01:32,658 - #9 niz
INFO  21:01:32,658 - #23 [
INFO  21:01:32,658 - #24 ]
INFO  21:01:32,658 - #28 ;
INFO  21:01:32,658 - #9 char
INFO  21:01:32,659 - #9 nizch
INFO  21:01:32,659 - #23 [
INFO  21:01:32,660 - #24 ]
INFO  21:01:32,660 - #28 ;
INFO  21:01:32,660 - #21 {
INFO  21:01:32,660 - #9 int
INFO  21:01:32,661 - #9 main
INFO  21:01:32,661 - #30 (
INFO  21:01:32,662 - #31 )
INFO  21:01:32,663 - #9 int
INFO  21:01:32,663 - #9 bodovi
INFO  21:01:32,663 - #28 ;
INFO  21:01:32,663 - #9 bool
INFO  21:01:32,663 - #9 bt
INFO  21:01:32,663 - #28 ;
INFO  21:01:32,663 - #21 {
INFO  21:01:32,663 - #9 bodovi
INFO  21:01:32,664 - #25 =
INFO  21:01:32,664 - #10 0
INFO  21:01:32,664 - #28 ;
INFO  21:01:32,665 - #9 bodovi
INFO  21:01:32,665 - #26 ++
INFO  21:01:32,665 - #28 ;
INFO  21:01:32,666 - #9 bodovi
INFO  21:01:32,666 - #25 =
INFO  21:01:32,666 - #9 bodovi
INFO  21:01:32,666 - #14 +
INFO  21:01:32,666 - #9 jedan
INFO  21:01:32,666 - #28 ;
INFO  21:01:32,667 - #9 bodovi
INFO  21:01:32,667 - #25 =
INFO  21:01:32,667 - #9 bodovi
INFO  21:01:32,667 - #16 *
INFO  21:01:32,667 - #9 pet
INFO  21:01:32,668 - #28 ;
INFO  21:01:32,669 - #9 bodovi
INFO  21:01:32,669 - #27 --
INFO  21:01:32,669 - #28 ;
INFO  21:01:32,669 - #3 print
INFO  21:01:32,669 - #30 (
INFO  21:01:32,669 - #9 bodovi
INFO  21:01:32,669 - #31 )
INFO  21:01:32,669 - #28 ;
INFO  21:01:32,669 - #9 niz
INFO  21:01:32,669 - #25 =
INFO  21:01:32,669 - #7 new
INFO  21:01:32,669 - #9 int
INFO  21:01:32,669 - #23 [
INFO  21:01:32,669 - #10 3
INFO  21:01:32,670 - #24 ]
INFO  21:01:32,670 - #28 ;
INFO  21:01:32,670 - #9 niz
INFO  21:01:32,670 - #23 [
INFO  21:01:32,670 - #9 nula
INFO  21:01:32,670 - #24 ]
INFO  21:01:32,670 - #25 =
INFO  21:01:32,670 - #9 jedan
INFO  21:01:32,670 - #28 ;
INFO  21:01:32,671 - #9 niz
INFO  21:01:32,671 - #23 [
INFO  21:01:32,671 - #10 1
INFO  21:01:32,671 - #24 ]
INFO  21:01:32,671 - #25 =
INFO  21:01:32,671 - #10 2
INFO  21:01:32,671 - #28 ;
INFO  21:01:32,671 - #9 niz
INFO  21:01:32,671 - #23 [
INFO  21:01:32,671 - #9 niz
INFO  21:01:32,671 - #23 [
INFO  21:01:32,671 - #9 jedan
INFO  21:01:32,671 - #24 ]
INFO  21:01:32,671 - #24 ]
INFO  21:01:32,672 - #25 =
INFO  21:01:32,672 - #9 niz
INFO  21:01:32,672 - #23 [
INFO  21:01:32,672 - #9 niz
INFO  21:01:32,672 - #23 [
INFO  21:01:32,672 - #10 0
INFO  21:01:32,672 - #24 ]
INFO  21:01:32,672 - #24 ]
INFO  21:01:32,672 - #16 *
INFO  21:01:32,672 - #10 3
INFO  21:01:32,672 - #28 ;
INFO  21:01:32,672 - #9 bodovi
INFO  21:01:32,672 - #25 =
INFO  21:01:32,672 - #9 niz
INFO  21:01:32,672 - #23 [
INFO  21:01:32,673 - #10 2
INFO  21:01:32,673 - #24 ]
INFO  21:01:32,673 - #17 /
INFO  21:01:32,673 - #9 niz
INFO  21:01:32,673 - #23 [
INFO  21:01:32,673 - #10 0
INFO  21:01:32,673 - #24 ]
INFO  21:01:32,674 - #28 ;
INFO  21:01:32,674 - #3 print
INFO  21:01:32,674 - #30 (
INFO  21:01:32,674 - #9 bodovi
INFO  21:01:32,674 - #31 )
INFO  21:01:32,674 - #28 ;
INFO  21:01:32,674 - #3 print
INFO  21:01:32,674 - #30 (
INFO  21:01:32,674 - #9 niz
INFO  21:01:32,674 - #23 [
INFO  21:01:32,674 - #10 2
INFO  21:01:32,674 - #24 ]
INFO  21:01:32,674 - #31 )
INFO  21:01:32,674 - #28 ;
INFO  21:01:32,674 - #9 nizch
INFO  21:01:32,674 - #25 =
INFO  21:01:32,674 - #7 new
INFO  21:01:32,674 - #9 char
INFO  21:01:32,674 - #23 [
INFO  21:01:32,675 - #10 3
INFO  21:01:32,675 - #24 ]
INFO  21:01:32,675 - #28 ;
INFO  21:01:32,675 - #9 nizch
INFO  21:01:32,675 - #23 [
INFO  21:01:32,675 - #10 0
INFO  21:01:32,675 - #24 ]
INFO  21:01:32,675 - #25 =
INFO  21:01:32,675 - #11 a
INFO  21:01:32,675 - #28 ;
INFO  21:01:32,676 - #9 nizch
INFO  21:01:32,676 - #23 [
INFO  21:01:32,676 - #9 jedan
INFO  21:01:32,676 - #24 ]
INFO  21:01:32,676 - #25 =
INFO  21:01:32,676 - #11 b
INFO  21:01:32,676 - #28 ;
INFO  21:01:32,676 - #9 nizch
INFO  21:01:32,676 - #23 [
INFO  21:01:32,676 - #9 pet
INFO  21:01:32,676 - #15 -
INFO  21:01:32,676 - #10 3
INFO  21:01:32,677 - #24 ]
INFO  21:01:32,677 - #25 =
INFO  21:01:32,677 - #11 c
INFO  21:01:32,677 - #28 ;
INFO  21:01:32,677 - #3 print
INFO  21:01:32,677 - #30 (
INFO  21:01:32,677 - #9 nizch
INFO  21:01:32,677 - #23 [
INFO  21:01:32,677 - #10 1
INFO  21:01:32,677 - #24 ]
INFO  21:01:32,677 - #31 )
INFO  21:01:32,678 - #28 ;
INFO  21:01:32,678 - #3 print
INFO  21:01:32,678 - #30 (
INFO  21:01:32,678 - #9 nizch
INFO  21:01:32,678 - #23 [
INFO  21:01:32,678 - #9 jedan
INFO  21:01:32,678 - #16 *
INFO  21:01:32,678 - #10 2
INFO  21:01:32,678 - #24 ]
INFO  21:01:32,678 - #31 )
INFO  21:01:32,678 - #28 ;
INFO  21:01:32,678 - #9 bodovi
INFO  21:01:32,678 - #25 =
INFO  21:01:32,678 - #9 bodovi
INFO  21:01:32,678 - #14 +
INFO  21:01:32,678 - #30 (
INFO  21:01:32,678 - #9 pet
INFO  21:01:32,678 - #16 *
INFO  21:01:32,679 - #9 jedan
INFO  21:01:32,679 - #15 -
INFO  21:01:32,679 - #10 1
INFO  21:01:32,679 - #31 )
INFO  21:01:32,679 - #16 *
INFO  21:01:32,679 - #9 bodovi
INFO  21:01:32,679 - #15 -
INFO  21:01:32,679 - #30 (
INFO  21:01:32,679 - #10 3
INFO  21:01:32,679 - #18 %
INFO  21:01:32,679 - #10 2
INFO  21:01:32,680 - #14 +
INFO  21:01:32,680 - #10 3
INFO  21:01:32,680 - #16 *
INFO  21:01:32,680 - #10 2
INFO  21:01:32,680 - #15 -
INFO  21:01:32,680 - #10 3
INFO  21:01:32,680 - #31 )
INFO  21:01:32,680 - #28 ;
INFO  21:01:32,680 - #3 print
INFO  21:01:32,680 - #30 (
INFO  21:01:32,680 - #9 bodovi
INFO  21:01:32,684 - #31 )
INFO  21:01:32,684 - #28 ;
INFO  21:01:32,684 - #4 read
INFO  21:01:32,684 - #30 (
INFO  21:01:32,684 - #9 bodovi
INFO  21:01:32,684 - #31 )
INFO  21:01:32,684 - #28 ;
INFO  21:01:32,684 - #9 bt
INFO  21:01:32,684 - #25 =
INFO  21:01:32,684 - #8 true
INFO  21:01:32,684 - #28 ;
INFO  21:01:32,684 - #32 if
INFO  21:01:32,684 - #30 (
INFO  21:01:32,684 - #9 bt
INFO  21:01:32,685 - #31 )
INFO  21:01:32,685 - #21 {
INFO  21:01:32,685 - #3 print
INFO  21:01:32,685 - #30 (
INFO  21:01:32,685 - #9 bodovi
INFO  21:01:32,685 - #31 )
INFO  21:01:32,685 - #28 ;
INFO  21:01:32,685 - #22 }
INFO  21:01:32,685 - #33 else
INFO  21:01:32,685 - #21 {
INFO  21:01:32,686 - #3 print
INFO  21:01:32,686 - #30 (
INFO  21:01:32,686 - #9 bodovi
INFO  21:01:32,686 - #14 +
INFO  21:01:32,686 - #10 10
INFO  21:01:32,686 - #31 )
INFO  21:01:32,686 - #28 ;
INFO  21:01:32,686 - #22 }
INFO  21:01:32,686 - #32 if
INFO  21:01:32,686 - #30 (
INFO  21:01:32,686 - #9 bodovi
INFO  21:01:32,686 - #38 >
INFO  21:01:32,686 - #10 10
INFO  21:01:32,687 - #31 )
INFO  21:01:32,687 - #21 {
INFO  21:01:32,687 - #3 print
INFO  21:01:32,687 - #30 (
INFO  21:01:32,687 - #11 +
INFO  21:01:32,688 - #31 )
INFO  21:01:32,688 - #28 ;
INFO  21:01:32,688 - #22 }
INFO  21:01:32,688 - #33 else
INFO  21:01:32,688 - #21 {
INFO  21:01:32,688 - #3 print
INFO  21:01:32,688 - #30 (
INFO  21:01:32,688 - #11 -
INFO  21:01:32,688 - #31 )
INFO  21:01:32,688 - #28 ;
INFO  21:01:32,688 - #22 }
INFO  21:01:32,688 - #22 }
INFO  21:01:32,688 - #22 }
INFO  21:01:32,690 - 
================SINTAKSNO STABLO====================

INFO  21:01:32,696 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 bodovi
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            Statements(
                                              Statements(
                                                Statements(
                                                  Statements(
                                                    Statements(
                                                      Statements(
                                                        NoStmt(
                                                        ) [NoStmt]
                                                        MatchedStmt(
                                                          DesignatorStatement(
                                                            Assignment(
                                                              Designator_1(
                                                               bodovi
                                                              ) [Designator_1]
                                                              TermExpr(
                                                                FactorTerm(
                                                                  ValFactor(
                                                                    NumConst(
                                                                     0
                                                                    ) [NumConst]
                                                                  ) [ValFactor]
                                                                ) [FactorTerm]
                                                              ) [TermExpr]
                                                            ) [Assignment]
                                                          ) [DesignatorStatement]
                                                        ) [MatchedStmt]
                                                      ) [Statements]
                                                      MatchedStmt(
                                                        DesignatorStatement(
                                                          Increment(
                                                            Designator_1(
                                                             bodovi
                                                            ) [Designator_1]
                                                          ) [Increment]
                                                        ) [DesignatorStatement]
                                                      ) [MatchedStmt]
                                                    ) [Statements]
                                                    MatchedStmt(
                                                      DesignatorStatement(
                                                        Assignment(
                                                          Designator_1(
                                                           bodovi
                                                          ) [Designator_1]
                                                          AddExpr(
                                                            FactorTerm(
                                                              VarFactor(
                                                                Designator_1(
                                                                 bodovi
                                                                ) [Designator_1]
                                                              ) [VarFactor]
                                                            ) [FactorTerm]
                                                            MoreTermSingle(
                                                              MoreTermPart(
                                                                Addop(
                                                                ) [Addop]
                                                                FactorTerm(
                                                                  VarFactor(
                                                                    Designator_1(
                                                                     jedan
                                                                    ) [Designator_1]
                                                                  ) [VarFactor]
                                                                ) [FactorTerm]
                                                              ) [MoreTermPart]
                                                            ) [MoreTermSingle]
                                                          ) [AddExpr]
                                                        ) [Assignment]
                                                      ) [DesignatorStatement]
                                                    ) [MatchedStmt]
                                                  ) [Statements]
                                                  MatchedStmt(
                                                    DesignatorStatement(
                                                      Assignment(
                                                        Designator_1(
                                                         bodovi
                                                        ) [Designator_1]
                                                        TermExpr(
                                                          MulTerm(
                                                            VarFactor(
                                                              Designator_1(
                                                               bodovi
                                                              ) [Designator_1]
                                                            ) [VarFactor]
                                                            MoreFactorSingle(
                                                              MoreFactorPart(
                                                                Mulop(
                                                                ) [Mulop]
                                                                VarFactor(
                                                                  Designator_1(
                                                                   pet
                                                                  ) [Designator_1]
                                                                ) [VarFactor]
                                                              ) [MoreFactorPart]
                                                            ) [MoreFactorSingle]
                                                          ) [MulTerm]
                                                        ) [TermExpr]
                                                      ) [Assignment]
                                                    ) [DesignatorStatement]
                                                  ) [MatchedStmt]
                                                ) [Statements]
                                                MatchedStmt(
                                                  DesignatorStatement(
                                                    Decrement(
                                                      Designator_1(
                                                       bodovi
                                                      ) [Designator_1]
                                                    ) [Decrement]
                                                  ) [DesignatorStatement]
                                                ) [MatchedStmt]
                                              ) [Statements]
                                              MatchedStmt(
                                                PrintStmt(
                                                  TermExpr(
                                                    FactorTerm(
                                                      VarFactor(
                                                        Designator_1(
                                                         bodovi
                                                        ) [Designator_1]
                                                      ) [VarFactor]
                                                    ) [FactorTerm]
                                                  ) [TermExpr]
                                                ) [PrintStmt]
                                              ) [MatchedStmt]
                                            ) [Statements]
                                            MatchedStmt(
                                              DesignatorStatement(
                                                Assignment(
                                                  Designator_1(
                                                   niz
                                                  ) [Designator_1]
                                                  TermExpr(
                                                    FactorTerm(
                                                      NewOperator(
                                                        Type(
                                                         int
                                                        ) [Type]
                                                        TermExpr(
                                                          FactorTerm(
                                                            ValFactor(
                                                              NumConst(
                                                               3
                                                              ) [NumConst]
                                                            ) [ValFactor]
                                                          ) [FactorTerm]
                                                        ) [TermExpr]
                                                      ) [NewOperator]
                                                    ) [FactorTerm]
                                                  ) [TermExpr]
                                                ) [Assignment]
                                              ) [DesignatorStatement]
                                            ) [MatchedStmt]
                                          ) [Statements]
                                          MatchedStmt(
                                            DesignatorStatement(
                                              Assignment(
                                                Designator_0(
                                                 niz
                                                  TermExpr(
                                                    FactorTerm(
                                                      VarFactor(
                                                        Designator_1(
                                                         nula
                                                        ) [Designator_1]
                                                      ) [VarFactor]
                                                    ) [FactorTerm]
                                                  ) [TermExpr]
                                                ) [Designator_0]
                                                TermExpr(
                                                  FactorTerm(
                                                    VarFactor(
                                                      Designator_1(
                                                       jedan
                                                      ) [Designator_1]
                                                    ) [VarFactor]
                                                  ) [FactorTerm]
                                                ) [TermExpr]
                                              ) [Assignment]
                                            ) [DesignatorStatement]
                                          ) [MatchedStmt]
                                        ) [Statements]
                                        MatchedStmt(
                                          DesignatorStatement(
                                            Assignment(
                                              Designator_0(
                                               niz
                                                TermExpr(
                                                  FactorTerm(
                                                    ValFactor(
                                                      NumConst(
                                                       1
                                                      ) [NumConst]
                                                    ) [ValFactor]
                                                  ) [FactorTerm]
                                                ) [TermExpr]
                                              ) [Designator_0]
                                              TermExpr(
                                                FactorTerm(
                                                  ValFactor(
                                                    NumConst(
                                                     2
                                                    ) [NumConst]
                                                  ) [ValFactor]
                                                ) [FactorTerm]
                                              ) [TermExpr]
                                            ) [Assignment]
                                          ) [DesignatorStatement]
                                        ) [MatchedStmt]
                                      ) [Statements]
                                      MatchedStmt(
                                        DesignatorStatement(
                                          Assignment(
                                            Designator_0(
                                             niz
                                              TermExpr(
                                                FactorTerm(
                                                  VarFactor(
                                                    Designator_0(
                                                     niz
                                                      TermExpr(
                                                        FactorTerm(
                                                          VarFactor(
                                                            Designator_1(
                                                             jedan
                                                            ) [Designator_1]
                                                          ) [VarFactor]
                                                        ) [FactorTerm]
                                                      ) [TermExpr]
                                                    ) [Designator_0]
                                                  ) [VarFactor]
                                                ) [FactorTerm]
                                              ) [TermExpr]
                                            ) [Designator_0]
                                            TermExpr(
                                              MulTerm(
                                                VarFactor(
                                                  Designator_0(
                                                   niz
                                                    TermExpr(
                                                      FactorTerm(
                                                        VarFactor(
                                                          Designator_0(
                                                           niz
                                                            TermExpr(
                                                              FactorTerm(
                                                                ValFactor(
                                                                  NumConst(
                                                                   0
                                                                  ) [NumConst]
                                                                ) [ValFactor]
                                                              ) [FactorTerm]
                                                            ) [TermExpr]
                                                          ) [Designator_0]
                                                        ) [VarFactor]
                                                      ) [FactorTerm]
                                                    ) [TermExpr]
                                                  ) [Designator_0]
                                                ) [VarFactor]
                                                MoreFactorSingle(
                                                  MoreFactorPart(
                                                    Mulop(
                                                    ) [Mulop]
                                                    ValFactor(
                                                      NumConst(
                                                       3
                                                      ) [NumConst]
                                                    ) [ValFactor]
                                                  ) [MoreFactorPart]
                                                ) [MoreFactorSingle]
                                              ) [MulTerm]
                                            ) [TermExpr]
                                          ) [Assignment]
                                        ) [DesignatorStatement]
                                      ) [MatchedStmt]
                                    ) [Statements]
                                    MatchedStmt(
                                      DesignatorStatement(
                                        Assignment(
                                          Designator_1(
                                           bodovi
                                          ) [Designator_1]
                                          TermExpr(
                                            MulTerm(
                                              VarFactor(
                                                Designator_0(
                                                 niz
                                                  TermExpr(
                                                    FactorTerm(
                                                      ValFactor(
                                                        NumConst(
                                                         2
                                                        ) [NumConst]
                                                      ) [ValFactor]
                                                    ) [FactorTerm]
                                                  ) [TermExpr]
                                                ) [Designator_0]
                                              ) [VarFactor]
                                              MoreFactorSingle(
                                                MoreFactorPart(
                                                  Divop(
                                                  ) [Divop]
                                                  VarFactor(
                                                    Designator_0(
                                                     niz
                                                      TermExpr(
                                                        FactorTerm(
                                                          ValFactor(
                                                            NumConst(
                                                             0
                                                            ) [NumConst]
                                                          ) [ValFactor]
                                                        ) [FactorTerm]
                                                      ) [TermExpr]
                                                    ) [Designator_0]
                                                  ) [VarFactor]
                                                ) [MoreFactorPart]
                                              ) [MoreFactorSingle]
                                            ) [MulTerm]
                                          ) [TermExpr]
                                        ) [Assignment]
                                      ) [DesignatorStatement]
                                    ) [MatchedStmt]
                                  ) [Statements]
                                  MatchedStmt(
                                    PrintStmt(
                                      TermExpr(
                                        FactorTerm(
                                          VarFactor(
                                            Designator_1(
                                             bodovi
                                            ) [Designator_1]
                                          ) [VarFactor]
                                        ) [FactorTerm]
                                      ) [TermExpr]
                                    ) [PrintStmt]
                                  ) [MatchedStmt]
                                ) [Statements]
                                MatchedStmt(
                                  PrintStmt(
                                    TermExpr(
                                      FactorTerm(
                                        VarFactor(
                                          Designator_0(
                                           niz
                                            TermExpr(
                                              FactorTerm(
                                                ValFactor(
                                                  NumConst(
                                                   2
                                                  ) [NumConst]
                                                ) [ValFactor]
                                              ) [FactorTerm]
                                            ) [TermExpr]
                                          ) [Designator_0]
                                        ) [VarFactor]
                                      ) [FactorTerm]
                                    ) [TermExpr]
                                  ) [PrintStmt]
                                ) [MatchedStmt]
                              ) [Statements]
                              MatchedStmt(
                                DesignatorStatement(
                                  Assignment(
                                    Designator_1(
                                     nizch
                                    ) [Designator_1]
                                    TermExpr(
                                      FactorTerm(
                                        NewOperator(
                                          Type(
                                           char
                                          ) [Type]
                                          TermExpr(
                                            FactorTerm(
                                              ValFactor(
                                                NumConst(
                                                 3
                                                ) [NumConst]
                                              ) [ValFactor]
                                            ) [FactorTerm]
                                          ) [TermExpr]
                                        ) [NewOperator]
                                      ) [FactorTerm]
                                    ) [TermExpr]
                                  ) [Assignment]
                                ) [DesignatorStatement]
                              ) [MatchedStmt]
                            ) [Statements]
                            MatchedStmt(
                              DesignatorStatement(
                                Assignment(
                                  Designator_0(
                                   nizch
                                    TermExpr(
                                      FactorTerm(
                                        ValFactor(
                                          NumConst(
                                           0
                                          ) [NumConst]
                                        ) [ValFactor]
                                      ) [FactorTerm]
                                    ) [TermExpr]
                                  ) [Designator_0]
                                  TermExpr(
                                    FactorTerm(
                                      ValFactor(
                                        CharConst(
                                         a
                                        ) [CharConst]
                                      ) [ValFactor]
                                    ) [FactorTerm]
                                  ) [TermExpr]
                                ) [Assignment]
                              ) [DesignatorStatement]
                            ) [MatchedStmt]
                          ) [Statements]
                          MatchedStmt(
                            DesignatorStatement(
                              Assignment(
                                Designator_0(
                                 nizch
                                  TermExpr(
                                    FactorTerm(
                                      VarFactor(
                                        Designator_1(
                                         jedan
                                        ) [Designator_1]
                                      ) [VarFactor]
                                    ) [FactorTerm]
                                  ) [TermExpr]
                                ) [Designator_0]
                                TermExpr(
                                  FactorTerm(
                                    ValFactor(
                                      CharConst(
                                       b
                                      ) [CharConst]
                                    ) [ValFactor]
                                  ) [FactorTerm]
                                ) [TermExpr]
                              ) [Assignment]
                            ) [DesignatorStatement]
                          ) [MatchedStmt]
                        ) [Statements]
                        MatchedStmt(
                          DesignatorStatement(
                            Assignment(
                              Designator_0(
                               nizch
                                AddExpr(
                                  FactorTerm(
                                    VarFactor(
                                      Designator_1(
                                       pet
                                      ) [Designator_1]
                                    ) [VarFactor]
                                  ) [FactorTerm]
                                  MoreTermSingle(
                                    MoreTermPart(
                                      Subop(
                                      ) [Subop]
                                      FactorTerm(
                                        ValFactor(
                                          NumConst(
                                           3
                                          ) [NumConst]
                                        ) [ValFactor]
                                      ) [FactorTerm]
                                    ) [MoreTermPart]
                                  ) [MoreTermSingle]
                                ) [AddExpr]
                              ) [Designator_0]
                              TermExpr(
                                FactorTerm(
                                  ValFactor(
                                    CharConst(
                                     c
                                    ) [CharConst]
                                  ) [ValFactor]
                                ) [FactorTerm]
                              ) [TermExpr]
                            ) [Assignment]
                          ) [DesignatorStatement]
                        ) [MatchedStmt]
                      ) [Statements]
                      MatchedStmt(
                        PrintStmt(
                          TermExpr(
                            FactorTerm(
                              VarFactor(
                                Designator_0(
                                 nizch
                                  TermExpr(
                                    FactorTerm(
                                      ValFactor(
                                        NumConst(
                                         1
                                        ) [NumConst]
                                      ) [ValFactor]
                                    ) [FactorTerm]
                                  ) [TermExpr]
                                ) [Designator_0]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [TermExpr]
                        ) [PrintStmt]
                      ) [MatchedStmt]
                    ) [Statements]
                    MatchedStmt(
                      PrintStmt(
                        TermExpr(
                          FactorTerm(
                            VarFactor(
                              Designator_0(
                               nizch
                                TermExpr(
                                  MulTerm(
                                    VarFactor(
                                      Designator_1(
                                       jedan
                                      ) [Designator_1]
                                    ) [VarFactor]
                                    MoreFactorSingle(
                                      MoreFactorPart(
                                        Mulop(
                                        ) [Mulop]
                                        ValFactor(
                                          NumConst(
                                           2
                                          ) [NumConst]
                                        ) [ValFactor]
                                      ) [MoreFactorPart]
                                    ) [MoreFactorSingle]
                                  ) [MulTerm]
                                ) [TermExpr]
                              ) [Designator_0]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [TermExpr]
                      ) [PrintStmt]
                    ) [MatchedStmt]
                  ) [Statements]
                  MatchedStmt(
                    DesignatorStatement(
                      Assignment(
                        Designator_1(
                         bodovi
                        ) [Designator_1]
                        AddExpr(
                          FactorTerm(
                            VarFactor(
                              Designator_1(
                               bodovi
                              ) [Designator_1]
                            ) [VarFactor]
                          ) [FactorTerm]
                          MoreTermMulti(
                            MoreTermSingle(
                              MoreTermPart(
                                Addop(
                                ) [Addop]
                                MulTerm(
                                  FactorExpr(
                                    AddExpr(
                                      MulTerm(
                                        VarFactor(
                                          Designator_1(
                                           pet
                                          ) [Designator_1]
                                        ) [VarFactor]
                                        MoreFactorSingle(
                                          MoreFactorPart(
                                            Mulop(
                                            ) [Mulop]
                                            VarFactor(
                                              Designator_1(
                                               jedan
                                              ) [Designator_1]
                                            ) [VarFactor]
                                          ) [MoreFactorPart]
                                        ) [MoreFactorSingle]
                                      ) [MulTerm]
                                      MoreTermSingle(
                                        MoreTermPart(
                                          Subop(
                                          ) [Subop]
                                          FactorTerm(
                                            ValFactor(
                                              NumConst(
                                               1
                                              ) [NumConst]
                                            ) [ValFactor]
                                          ) [FactorTerm]
                                        ) [MoreTermPart]
                                      ) [MoreTermSingle]
                                    ) [AddExpr]
                                  ) [FactorExpr]
                                  MoreFactorSingle(
                                    MoreFactorPart(
                                      Mulop(
                                      ) [Mulop]
                                      VarFactor(
                                        Designator_1(
                                         bodovi
                                        ) [Designator_1]
                                      ) [VarFactor]
                                    ) [MoreFactorPart]
                                  ) [MoreFactorSingle]
                                ) [MulTerm]
                              ) [MoreTermPart]
                            ) [MoreTermSingle]
                            MoreTermPart(
                              Subop(
                              ) [Subop]
                              FactorTerm(
                                FactorExpr(
                                  AddExpr(
                                    MulTerm(
                                      ValFactor(
                                        NumConst(
                                         3
                                        ) [NumConst]
                                      ) [ValFactor]
                                      MoreFactorSingle(
                                        MoreFactorPart(
                                          Modop(
                                          ) [Modop]
                                          ValFactor(
                                            NumConst(
                                             2
                                            ) [NumConst]
                                          ) [ValFactor]
                                        ) [MoreFactorPart]
                                      ) [MoreFactorSingle]
                                    ) [MulTerm]
                                    MoreTermMulti(
                                      MoreTermSingle(
                                        MoreTermPart(
                                          Addop(
                                          ) [Addop]
                                          MulTerm(
                                            ValFactor(
                                              NumConst(
                                               3
                                              ) [NumConst]
                                            ) [ValFactor]
                                            MoreFactorSingle(
                                              MoreFactorPart(
                                                Mulop(
                                                ) [Mulop]
                                                ValFactor(
                                                  NumConst(
                                                   2
                                                  ) [NumConst]
                                                ) [ValFactor]
                                              ) [MoreFactorPart]
                                            ) [MoreFactorSingle]
                                          ) [MulTerm]
                                        ) [MoreTermPart]
                                      ) [MoreTermSingle]
                                      MoreTermPart(
                                        Subop(
                                        ) [Subop]
                                        FactorTerm(
                                          ValFactor(
                                            NumConst(
                                             3
                                            ) [NumConst]
                                          ) [ValFactor]
                                        ) [FactorTerm]
                                      ) [MoreTermPart]
                                    ) [MoreTermMulti]
                                  ) [AddExpr]
                                ) [FactorExpr]
                              ) [FactorTerm]
                            ) [MoreTermPart]
                          ) [MoreTermMulti]
                        ) [AddExpr]
                      ) [Assignment]
                    ) [DesignatorStatement]
                  ) [MatchedStmt]
                ) [Statements]
                MatchedStmt(
                  PrintStmt(
                    TermExpr(
                      FactorTerm(
                        VarFactor(
                          Designator_1(
                           bodovi
                          ) [Designator_1]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                  ) [PrintStmt]
                ) [MatchedStmt]
              ) [Statements]
              MatchedStmt(
                StmtRead(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                ) [StmtRead]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   bt
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        BoolConst(
                         true
                        ) [BoolConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            MatchedStatement(
              CondDerived1(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      TermExpr(
                        FactorTerm(
                          VarFactor(
                            Designator_1(
                             bt
                            ) [Designator_1]
                          ) [VarFactor]
                        ) [FactorTerm]
                      ) [TermExpr]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [CondDerived1]
              PrintStmt(
                TermExpr(
                  FactorTerm(
                    VarFactor(
                      Designator_1(
                       bodovi
                      ) [Designator_1]
                    ) [VarFactor]
                  ) [FactorTerm]
                ) [TermExpr]
              ) [PrintStmt]
              PrintStmt(
                AddExpr(
                  FactorTerm(
                    VarFactor(
                      Designator_1(
                       bodovi
                      ) [Designator_1]
                    ) [VarFactor]
                  ) [FactorTerm]
                  MoreTermSingle(
                    MoreTermPart(
                      Addop(
                      ) [Addop]
                      FactorTerm(
                        ValFactor(
                          NumConst(
                           10
                          ) [NumConst]
                        ) [ValFactor]
                      ) [FactorTerm]
                    ) [MoreTermPart]
                  ) [MoreTermSingle]
                ) [AddExpr]
              ) [PrintStmt]
            ) [MatchedStatement]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          MatchedStatement(
            CondDerived1(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    TermExpr(
                      FactorTerm(
                        VarFactor(
                          Designator_1(
                           bodovi
                          ) [Designator_1]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                    RelopGT(
                    ) [RelopGT]
                    TermExpr(
                      FactorTerm(
                        ValFactor(
                          NumConst(
                           10
                          ) [NumConst]
                        ) [ValFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
            ) [CondDerived1]
            PrintStmt(
              TermExpr(
                FactorTerm(
                  ValFactor(
                    CharConst(
                     +
                    ) [CharConst]
                  ) [ValFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
            PrintStmt(
              TermExpr(
                FactorTerm(
                  ValFactor(
                    CharConst(
                     -
                    ) [CharConst]
                  ) [ValFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStatement]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:01:32,712 - 
================SEMANTICKA OBRADA====================

INFO  21:01:32,715 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  21:01:32,715 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  21:01:32,715 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  21:01:32,715 - Deklarisan niz niz na liniji 9
INFO  21:01:32,715 - Deklarisan niz nizch na liniji 10
INFO  21:01:32,715 - Obradjuje se funkcija main na liniji 13
INFO  21:01:32,716 - Deklarisana promenljiva bodovi na liniji 14
INFO  21:01:32,716 - Deklarisana promenljiva bt na liniji 15
ERROR 21:01:32,716 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 21:01:32,716 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 34
ERROR 21:01:32,717 - Ulazni fajl [test/program.mj] ima semantickih gresaka!
Parsiranje nije uspesno zavrseno!
INFO  21:03:25,144 - Kompajliranje ulaznog fajla test\program.mj
INFO  21:03:25,178 - #2 program
INFO  21:03:25,178 - #9 test301
INFO  21:03:25,178 - #5 const
INFO  21:03:25,179 - #9 int
INFO  21:03:25,179 - #9 nula
INFO  21:03:25,180 - #25 =
INFO  21:03:25,180 - #10 0
INFO  21:03:25,180 - #28 ;
INFO  21:03:25,181 - #5 const
INFO  21:03:25,182 - #9 int
INFO  21:03:25,182 - #9 jedan
INFO  21:03:25,182 - #25 =
INFO  21:03:25,182 - #10 1
INFO  21:03:25,182 - #28 ;
INFO  21:03:25,182 - #5 const
INFO  21:03:25,182 - #9 int
INFO  21:03:25,183 - #9 pet
INFO  21:03:25,183 - #25 =
INFO  21:03:25,183 - #10 5
INFO  21:03:25,183 - #28 ;
INFO  21:03:25,183 - #9 int
INFO  21:03:25,183 - #9 niz
INFO  21:03:25,183 - #23 [
INFO  21:03:25,183 - #24 ]
INFO  21:03:25,183 - #28 ;
INFO  21:03:25,183 - #9 char
INFO  21:03:25,184 - #9 nizch
INFO  21:03:25,184 - #23 [
INFO  21:03:25,184 - #24 ]
INFO  21:03:25,184 - #28 ;
INFO  21:03:25,184 - #21 {
INFO  21:03:25,184 - #9 int
INFO  21:03:25,184 - #9 main
INFO  21:03:25,185 - #30 (
INFO  21:03:25,185 - #31 )
INFO  21:03:25,185 - #9 int
INFO  21:03:25,186 - #9 bodovi
INFO  21:03:25,186 - #28 ;
INFO  21:03:25,186 - #9 bool
INFO  21:03:25,186 - #9 bt
INFO  21:03:25,186 - #28 ;
INFO  21:03:25,186 - #21 {
INFO  21:03:25,186 - #9 bodovi
INFO  21:03:25,186 - #25 =
INFO  21:03:25,187 - #10 0
INFO  21:03:25,187 - #28 ;
INFO  21:03:25,187 - #9 bodovi
INFO  21:03:25,187 - #26 ++
INFO  21:03:25,187 - #28 ;
INFO  21:03:25,187 - #9 bodovi
INFO  21:03:25,188 - #25 =
INFO  21:03:25,188 - #9 bodovi
INFO  21:03:25,188 - #14 +
INFO  21:03:25,188 - #9 jedan
INFO  21:03:25,188 - #28 ;
INFO  21:03:25,189 - #9 bodovi
INFO  21:03:25,189 - #25 =
INFO  21:03:25,189 - #9 bodovi
INFO  21:03:25,189 - #16 *
INFO  21:03:25,189 - #9 pet
INFO  21:03:25,189 - #28 ;
INFO  21:03:25,190 - #9 bodovi
INFO  21:03:25,190 - #27 --
INFO  21:03:25,190 - #28 ;
INFO  21:03:25,190 - #3 print
INFO  21:03:25,190 - #30 (
INFO  21:03:25,190 - #9 bodovi
INFO  21:03:25,191 - #31 )
INFO  21:03:25,191 - #28 ;
INFO  21:03:25,191 - #9 niz
INFO  21:03:25,191 - #25 =
INFO  21:03:25,191 - #7 new
INFO  21:03:25,191 - #9 int
INFO  21:03:25,191 - #23 [
INFO  21:03:25,191 - #10 3
INFO  21:03:25,191 - #24 ]
INFO  21:03:25,191 - #28 ;
INFO  21:03:25,191 - #9 niz
INFO  21:03:25,191 - #23 [
INFO  21:03:25,191 - #9 nula
INFO  21:03:25,191 - #24 ]
INFO  21:03:25,192 - #25 =
INFO  21:03:25,192 - #9 jedan
INFO  21:03:25,192 - #28 ;
INFO  21:03:25,192 - #9 niz
INFO  21:03:25,192 - #23 [
INFO  21:03:25,192 - #10 1
INFO  21:03:25,192 - #24 ]
INFO  21:03:25,192 - #25 =
INFO  21:03:25,192 - #10 2
INFO  21:03:25,193 - #28 ;
INFO  21:03:25,193 - #9 niz
INFO  21:03:25,193 - #23 [
INFO  21:03:25,193 - #9 niz
INFO  21:03:25,193 - #23 [
INFO  21:03:25,193 - #9 jedan
INFO  21:03:25,193 - #24 ]
INFO  21:03:25,193 - #24 ]
INFO  21:03:25,193 - #25 =
INFO  21:03:25,194 - #9 niz
INFO  21:03:25,194 - #23 [
INFO  21:03:25,194 - #9 niz
INFO  21:03:25,194 - #23 [
INFO  21:03:25,194 - #10 0
INFO  21:03:25,194 - #24 ]
INFO  21:03:25,194 - #24 ]
INFO  21:03:25,194 - #16 *
INFO  21:03:25,194 - #10 3
INFO  21:03:25,195 - #28 ;
INFO  21:03:25,195 - #9 bodovi
INFO  21:03:25,195 - #25 =
INFO  21:03:25,195 - #9 niz
INFO  21:03:25,195 - #23 [
INFO  21:03:25,195 - #10 2
INFO  21:03:25,195 - #24 ]
INFO  21:03:25,195 - #17 /
INFO  21:03:25,196 - #9 niz
INFO  21:03:25,196 - #23 [
INFO  21:03:25,196 - #10 0
INFO  21:03:25,196 - #24 ]
INFO  21:03:25,196 - #28 ;
INFO  21:03:25,196 - #3 print
INFO  21:03:25,196 - #30 (
INFO  21:03:25,197 - #9 bodovi
INFO  21:03:25,197 - #31 )
INFO  21:03:25,197 - #28 ;
INFO  21:03:25,197 - #3 print
INFO  21:03:25,197 - #30 (
INFO  21:03:25,197 - #9 niz
INFO  21:03:25,197 - #23 [
INFO  21:03:25,197 - #10 2
INFO  21:03:25,197 - #24 ]
INFO  21:03:25,197 - #31 )
INFO  21:03:25,197 - #28 ;
INFO  21:03:25,197 - #9 nizch
INFO  21:03:25,197 - #25 =
INFO  21:03:25,197 - #7 new
INFO  21:03:25,197 - #9 char
INFO  21:03:25,197 - #23 [
INFO  21:03:25,197 - #10 3
INFO  21:03:25,197 - #24 ]
INFO  21:03:25,197 - #28 ;
INFO  21:03:25,197 - #9 nizch
INFO  21:03:25,197 - #23 [
INFO  21:03:25,197 - #10 0
INFO  21:03:25,197 - #24 ]
INFO  21:03:25,198 - #25 =
INFO  21:03:25,198 - #11 a
INFO  21:03:25,198 - #28 ;
INFO  21:03:25,198 - #9 nizch
INFO  21:03:25,198 - #23 [
INFO  21:03:25,198 - #9 jedan
INFO  21:03:25,198 - #24 ]
INFO  21:03:25,198 - #25 =
INFO  21:03:25,198 - #11 b
INFO  21:03:25,198 - #28 ;
INFO  21:03:25,198 - #9 nizch
INFO  21:03:25,198 - #23 [
INFO  21:03:25,198 - #9 pet
INFO  21:03:25,198 - #15 -
INFO  21:03:25,198 - #10 3
INFO  21:03:25,199 - #24 ]
INFO  21:03:25,199 - #25 =
INFO  21:03:25,199 - #11 c
INFO  21:03:25,199 - #28 ;
INFO  21:03:25,199 - #3 print
INFO  21:03:25,199 - #30 (
INFO  21:03:25,199 - #9 nizch
INFO  21:03:25,199 - #23 [
INFO  21:03:25,199 - #10 1
INFO  21:03:25,199 - #24 ]
INFO  21:03:25,199 - #31 )
INFO  21:03:25,199 - #28 ;
INFO  21:03:25,199 - #3 print
INFO  21:03:25,199 - #30 (
INFO  21:03:25,199 - #9 nizch
INFO  21:03:25,199 - #23 [
INFO  21:03:25,199 - #9 jedan
INFO  21:03:25,199 - #16 *
INFO  21:03:25,199 - #10 2
INFO  21:03:25,199 - #24 ]
INFO  21:03:25,199 - #31 )
INFO  21:03:25,200 - #28 ;
INFO  21:03:25,200 - #9 bodovi
INFO  21:03:25,200 - #25 =
INFO  21:03:25,200 - #9 bodovi
INFO  21:03:25,200 - #14 +
INFO  21:03:25,200 - #30 (
INFO  21:03:25,200 - #9 pet
INFO  21:03:25,200 - #16 *
INFO  21:03:25,200 - #9 jedan
INFO  21:03:25,200 - #15 -
INFO  21:03:25,200 - #10 1
INFO  21:03:25,200 - #31 )
INFO  21:03:25,200 - #16 *
INFO  21:03:25,200 - #9 bodovi
INFO  21:03:25,200 - #15 -
INFO  21:03:25,200 - #30 (
INFO  21:03:25,200 - #10 3
INFO  21:03:25,200 - #18 %
INFO  21:03:25,200 - #10 2
INFO  21:03:25,201 - #14 +
INFO  21:03:25,201 - #10 3
INFO  21:03:25,201 - #16 *
INFO  21:03:25,201 - #10 2
INFO  21:03:25,201 - #15 -
INFO  21:03:25,201 - #10 3
INFO  21:03:25,201 - #31 )
INFO  21:03:25,201 - #28 ;
INFO  21:03:25,201 - #3 print
INFO  21:03:25,201 - #30 (
INFO  21:03:25,201 - #9 bodovi
INFO  21:03:25,204 - #31 )
INFO  21:03:25,204 - #28 ;
INFO  21:03:25,204 - #4 read
INFO  21:03:25,204 - #30 (
INFO  21:03:25,204 - #9 bodovi
INFO  21:03:25,204 - #31 )
INFO  21:03:25,204 - #28 ;
INFO  21:03:25,204 - #9 bt
INFO  21:03:25,204 - #25 =
INFO  21:03:25,204 - #8 true
INFO  21:03:25,204 - #28 ;
INFO  21:03:25,204 - #32 if
INFO  21:03:25,204 - #30 (
INFO  21:03:25,205 - #9 bt
INFO  21:03:25,205 - #31 )
INFO  21:03:25,205 - #21 {
INFO  21:03:25,205 - #3 print
INFO  21:03:25,205 - #30 (
INFO  21:03:25,205 - #9 bodovi
INFO  21:03:25,205 - #31 )
INFO  21:03:25,205 - #28 ;
INFO  21:03:25,205 - #22 }
INFO  21:03:25,205 - #33 else
INFO  21:03:25,205 - #21 {
INFO  21:03:25,205 - #3 print
INFO  21:03:25,205 - #30 (
INFO  21:03:25,205 - #9 bodovi
INFO  21:03:25,205 - #14 +
INFO  21:03:25,205 - #10 10
INFO  21:03:25,205 - #31 )
INFO  21:03:25,205 - #28 ;
INFO  21:03:25,205 - #22 }
INFO  21:03:25,205 - #32 if
INFO  21:03:25,206 - #30 (
INFO  21:03:25,206 - #9 bodovi
INFO  21:03:25,206 - #38 >
INFO  21:03:25,206 - #10 10
INFO  21:03:25,206 - #31 )
INFO  21:03:25,206 - #21 {
INFO  21:03:25,207 - #3 print
INFO  21:03:25,207 - #30 (
INFO  21:03:25,207 - #11 +
INFO  21:03:25,207 - #31 )
INFO  21:03:25,207 - #28 ;
INFO  21:03:25,207 - #22 }
INFO  21:03:25,207 - #33 else
INFO  21:03:25,207 - #21 {
INFO  21:03:25,207 - #3 print
INFO  21:03:25,207 - #30 (
INFO  21:03:25,207 - #11 -
INFO  21:03:25,207 - #31 )
INFO  21:03:25,207 - #28 ;
INFO  21:03:25,207 - #22 }
INFO  21:03:25,207 - #22 }
INFO  21:03:25,207 - #22 }
INFO  21:03:25,208 - 
================SINTAKSNO STABLO====================

INFO  21:03:25,215 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 bodovi
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            Statements(
                                              Statements(
                                                Statements(
                                                  Statements(
                                                    Statements(
                                                      Statements(
                                                        NoStmt(
                                                        ) [NoStmt]
                                                        MatchedStmt(
                                                          DesignatorStatement(
                                                            Assignment(
                                                              Designator_1(
                                                               bodovi
                                                              ) [Designator_1]
                                                              TermExpr(
                                                                FactorTerm(
                                                                  ValFactor(
                                                                    NumConst(
                                                                     0
                                                                    ) [NumConst]
                                                                  ) [ValFactor]
                                                                ) [FactorTerm]
                                                              ) [TermExpr]
                                                            ) [Assignment]
                                                          ) [DesignatorStatement]
                                                        ) [MatchedStmt]
                                                      ) [Statements]
                                                      MatchedStmt(
                                                        DesignatorStatement(
                                                          Increment(
                                                            Designator_1(
                                                             bodovi
                                                            ) [Designator_1]
                                                          ) [Increment]
                                                        ) [DesignatorStatement]
                                                      ) [MatchedStmt]
                                                    ) [Statements]
                                                    MatchedStmt(
                                                      DesignatorStatement(
                                                        Assignment(
                                                          Designator_1(
                                                           bodovi
                                                          ) [Designator_1]
                                                          AddExpr(
                                                            FactorTerm(
                                                              VarFactor(
                                                                Designator_1(
                                                                 bodovi
                                                                ) [Designator_1]
                                                              ) [VarFactor]
                                                            ) [FactorTerm]
                                                            MoreTermSingle(
                                                              MoreTermPart(
                                                                Addop(
                                                                ) [Addop]
                                                                FactorTerm(
                                                                  VarFactor(
                                                                    Designator_1(
                                                                     jedan
                                                                    ) [Designator_1]
                                                                  ) [VarFactor]
                                                                ) [FactorTerm]
                                                              ) [MoreTermPart]
                                                            ) [MoreTermSingle]
                                                          ) [AddExpr]
                                                        ) [Assignment]
                                                      ) [DesignatorStatement]
                                                    ) [MatchedStmt]
                                                  ) [Statements]
                                                  MatchedStmt(
                                                    DesignatorStatement(
                                                      Assignment(
                                                        Designator_1(
                                                         bodovi
                                                        ) [Designator_1]
                                                        TermExpr(
                                                          MulTerm(
                                                            VarFactor(
                                                              Designator_1(
                                                               bodovi
                                                              ) [Designator_1]
                                                            ) [VarFactor]
                                                            MoreFactorSingle(
                                                              MoreFactorPart(
                                                                Mulop(
                                                                ) [Mulop]
                                                                VarFactor(
                                                                  Designator_1(
                                                                   pet
                                                                  ) [Designator_1]
                                                                ) [VarFactor]
                                                              ) [MoreFactorPart]
                                                            ) [MoreFactorSingle]
                                                          ) [MulTerm]
                                                        ) [TermExpr]
                                                      ) [Assignment]
                                                    ) [DesignatorStatement]
                                                  ) [MatchedStmt]
                                                ) [Statements]
                                                MatchedStmt(
                                                  DesignatorStatement(
                                                    Decrement(
                                                      Designator_1(
                                                       bodovi
                                                      ) [Designator_1]
                                                    ) [Decrement]
                                                  ) [DesignatorStatement]
                                                ) [MatchedStmt]
                                              ) [Statements]
                                              MatchedStmt(
                                                PrintStmt(
                                                  TermExpr(
                                                    FactorTerm(
                                                      VarFactor(
                                                        Designator_1(
                                                         bodovi
                                                        ) [Designator_1]
                                                      ) [VarFactor]
                                                    ) [FactorTerm]
                                                  ) [TermExpr]
                                                ) [PrintStmt]
                                              ) [MatchedStmt]
                                            ) [Statements]
                                            MatchedStmt(
                                              DesignatorStatement(
                                                Assignment(
                                                  Designator_1(
                                                   niz
                                                  ) [Designator_1]
                                                  TermExpr(
                                                    FactorTerm(
                                                      NewOperator(
                                                        Type(
                                                         int
                                                        ) [Type]
                                                        TermExpr(
                                                          FactorTerm(
                                                            ValFactor(
                                                              NumConst(
                                                               3
                                                              ) [NumConst]
                                                            ) [ValFactor]
                                                          ) [FactorTerm]
                                                        ) [TermExpr]
                                                      ) [NewOperator]
                                                    ) [FactorTerm]
                                                  ) [TermExpr]
                                                ) [Assignment]
                                              ) [DesignatorStatement]
                                            ) [MatchedStmt]
                                          ) [Statements]
                                          MatchedStmt(
                                            DesignatorStatement(
                                              Assignment(
                                                Designator_0(
                                                 niz
                                                  TermExpr(
                                                    FactorTerm(
                                                      VarFactor(
                                                        Designator_1(
                                                         nula
                                                        ) [Designator_1]
                                                      ) [VarFactor]
                                                    ) [FactorTerm]
                                                  ) [TermExpr]
                                                ) [Designator_0]
                                                TermExpr(
                                                  FactorTerm(
                                                    VarFactor(
                                                      Designator_1(
                                                       jedan
                                                      ) [Designator_1]
                                                    ) [VarFactor]
                                                  ) [FactorTerm]
                                                ) [TermExpr]
                                              ) [Assignment]
                                            ) [DesignatorStatement]
                                          ) [MatchedStmt]
                                        ) [Statements]
                                        MatchedStmt(
                                          DesignatorStatement(
                                            Assignment(
                                              Designator_0(
                                               niz
                                                TermExpr(
                                                  FactorTerm(
                                                    ValFactor(
                                                      NumConst(
                                                       1
                                                      ) [NumConst]
                                                    ) [ValFactor]
                                                  ) [FactorTerm]
                                                ) [TermExpr]
                                              ) [Designator_0]
                                              TermExpr(
                                                FactorTerm(
                                                  ValFactor(
                                                    NumConst(
                                                     2
                                                    ) [NumConst]
                                                  ) [ValFactor]
                                                ) [FactorTerm]
                                              ) [TermExpr]
                                            ) [Assignment]
                                          ) [DesignatorStatement]
                                        ) [MatchedStmt]
                                      ) [Statements]
                                      MatchedStmt(
                                        DesignatorStatement(
                                          Assignment(
                                            Designator_0(
                                             niz
                                              TermExpr(
                                                FactorTerm(
                                                  VarFactor(
                                                    Designator_0(
                                                     niz
                                                      TermExpr(
                                                        FactorTerm(
                                                          VarFactor(
                                                            Designator_1(
                                                             jedan
                                                            ) [Designator_1]
                                                          ) [VarFactor]
                                                        ) [FactorTerm]
                                                      ) [TermExpr]
                                                    ) [Designator_0]
                                                  ) [VarFactor]
                                                ) [FactorTerm]
                                              ) [TermExpr]
                                            ) [Designator_0]
                                            TermExpr(
                                              MulTerm(
                                                VarFactor(
                                                  Designator_0(
                                                   niz
                                                    TermExpr(
                                                      FactorTerm(
                                                        VarFactor(
                                                          Designator_0(
                                                           niz
                                                            TermExpr(
                                                              FactorTerm(
                                                                ValFactor(
                                                                  NumConst(
                                                                   0
                                                                  ) [NumConst]
                                                                ) [ValFactor]
                                                              ) [FactorTerm]
                                                            ) [TermExpr]
                                                          ) [Designator_0]
                                                        ) [VarFactor]
                                                      ) [FactorTerm]
                                                    ) [TermExpr]
                                                  ) [Designator_0]
                                                ) [VarFactor]
                                                MoreFactorSingle(
                                                  MoreFactorPart(
                                                    Mulop(
                                                    ) [Mulop]
                                                    ValFactor(
                                                      NumConst(
                                                       3
                                                      ) [NumConst]
                                                    ) [ValFactor]
                                                  ) [MoreFactorPart]
                                                ) [MoreFactorSingle]
                                              ) [MulTerm]
                                            ) [TermExpr]
                                          ) [Assignment]
                                        ) [DesignatorStatement]
                                      ) [MatchedStmt]
                                    ) [Statements]
                                    MatchedStmt(
                                      DesignatorStatement(
                                        Assignment(
                                          Designator_1(
                                           bodovi
                                          ) [Designator_1]
                                          TermExpr(
                                            MulTerm(
                                              VarFactor(
                                                Designator_0(
                                                 niz
                                                  TermExpr(
                                                    FactorTerm(
                                                      ValFactor(
                                                        NumConst(
                                                         2
                                                        ) [NumConst]
                                                      ) [ValFactor]
                                                    ) [FactorTerm]
                                                  ) [TermExpr]
                                                ) [Designator_0]
                                              ) [VarFactor]
                                              MoreFactorSingle(
                                                MoreFactorPart(
                                                  Divop(
                                                  ) [Divop]
                                                  VarFactor(
                                                    Designator_0(
                                                     niz
                                                      TermExpr(
                                                        FactorTerm(
                                                          ValFactor(
                                                            NumConst(
                                                             0
                                                            ) [NumConst]
                                                          ) [ValFactor]
                                                        ) [FactorTerm]
                                                      ) [TermExpr]
                                                    ) [Designator_0]
                                                  ) [VarFactor]
                                                ) [MoreFactorPart]
                                              ) [MoreFactorSingle]
                                            ) [MulTerm]
                                          ) [TermExpr]
                                        ) [Assignment]
                                      ) [DesignatorStatement]
                                    ) [MatchedStmt]
                                  ) [Statements]
                                  MatchedStmt(
                                    PrintStmt(
                                      TermExpr(
                                        FactorTerm(
                                          VarFactor(
                                            Designator_1(
                                             bodovi
                                            ) [Designator_1]
                                          ) [VarFactor]
                                        ) [FactorTerm]
                                      ) [TermExpr]
                                    ) [PrintStmt]
                                  ) [MatchedStmt]
                                ) [Statements]
                                MatchedStmt(
                                  PrintStmt(
                                    TermExpr(
                                      FactorTerm(
                                        VarFactor(
                                          Designator_0(
                                           niz
                                            TermExpr(
                                              FactorTerm(
                                                ValFactor(
                                                  NumConst(
                                                   2
                                                  ) [NumConst]
                                                ) [ValFactor]
                                              ) [FactorTerm]
                                            ) [TermExpr]
                                          ) [Designator_0]
                                        ) [VarFactor]
                                      ) [FactorTerm]
                                    ) [TermExpr]
                                  ) [PrintStmt]
                                ) [MatchedStmt]
                              ) [Statements]
                              MatchedStmt(
                                DesignatorStatement(
                                  Assignment(
                                    Designator_1(
                                     nizch
                                    ) [Designator_1]
                                    TermExpr(
                                      FactorTerm(
                                        NewOperator(
                                          Type(
                                           char
                                          ) [Type]
                                          TermExpr(
                                            FactorTerm(
                                              ValFactor(
                                                NumConst(
                                                 3
                                                ) [NumConst]
                                              ) [ValFactor]
                                            ) [FactorTerm]
                                          ) [TermExpr]
                                        ) [NewOperator]
                                      ) [FactorTerm]
                                    ) [TermExpr]
                                  ) [Assignment]
                                ) [DesignatorStatement]
                              ) [MatchedStmt]
                            ) [Statements]
                            MatchedStmt(
                              DesignatorStatement(
                                Assignment(
                                  Designator_0(
                                   nizch
                                    TermExpr(
                                      FactorTerm(
                                        ValFactor(
                                          NumConst(
                                           0
                                          ) [NumConst]
                                        ) [ValFactor]
                                      ) [FactorTerm]
                                    ) [TermExpr]
                                  ) [Designator_0]
                                  TermExpr(
                                    FactorTerm(
                                      ValFactor(
                                        CharConst(
                                         a
                                        ) [CharConst]
                                      ) [ValFactor]
                                    ) [FactorTerm]
                                  ) [TermExpr]
                                ) [Assignment]
                              ) [DesignatorStatement]
                            ) [MatchedStmt]
                          ) [Statements]
                          MatchedStmt(
                            DesignatorStatement(
                              Assignment(
                                Designator_0(
                                 nizch
                                  TermExpr(
                                    FactorTerm(
                                      VarFactor(
                                        Designator_1(
                                         jedan
                                        ) [Designator_1]
                                      ) [VarFactor]
                                    ) [FactorTerm]
                                  ) [TermExpr]
                                ) [Designator_0]
                                TermExpr(
                                  FactorTerm(
                                    ValFactor(
                                      CharConst(
                                       b
                                      ) [CharConst]
                                    ) [ValFactor]
                                  ) [FactorTerm]
                                ) [TermExpr]
                              ) [Assignment]
                            ) [DesignatorStatement]
                          ) [MatchedStmt]
                        ) [Statements]
                        MatchedStmt(
                          DesignatorStatement(
                            Assignment(
                              Designator_0(
                               nizch
                                AddExpr(
                                  FactorTerm(
                                    VarFactor(
                                      Designator_1(
                                       pet
                                      ) [Designator_1]
                                    ) [VarFactor]
                                  ) [FactorTerm]
                                  MoreTermSingle(
                                    MoreTermPart(
                                      Subop(
                                      ) [Subop]
                                      FactorTerm(
                                        ValFactor(
                                          NumConst(
                                           3
                                          ) [NumConst]
                                        ) [ValFactor]
                                      ) [FactorTerm]
                                    ) [MoreTermPart]
                                  ) [MoreTermSingle]
                                ) [AddExpr]
                              ) [Designator_0]
                              TermExpr(
                                FactorTerm(
                                  ValFactor(
                                    CharConst(
                                     c
                                    ) [CharConst]
                                  ) [ValFactor]
                                ) [FactorTerm]
                              ) [TermExpr]
                            ) [Assignment]
                          ) [DesignatorStatement]
                        ) [MatchedStmt]
                      ) [Statements]
                      MatchedStmt(
                        PrintStmt(
                          TermExpr(
                            FactorTerm(
                              VarFactor(
                                Designator_0(
                                 nizch
                                  TermExpr(
                                    FactorTerm(
                                      ValFactor(
                                        NumConst(
                                         1
                                        ) [NumConst]
                                      ) [ValFactor]
                                    ) [FactorTerm]
                                  ) [TermExpr]
                                ) [Designator_0]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [TermExpr]
                        ) [PrintStmt]
                      ) [MatchedStmt]
                    ) [Statements]
                    MatchedStmt(
                      PrintStmt(
                        TermExpr(
                          FactorTerm(
                            VarFactor(
                              Designator_0(
                               nizch
                                TermExpr(
                                  MulTerm(
                                    VarFactor(
                                      Designator_1(
                                       jedan
                                      ) [Designator_1]
                                    ) [VarFactor]
                                    MoreFactorSingle(
                                      MoreFactorPart(
                                        Mulop(
                                        ) [Mulop]
                                        ValFactor(
                                          NumConst(
                                           2
                                          ) [NumConst]
                                        ) [ValFactor]
                                      ) [MoreFactorPart]
                                    ) [MoreFactorSingle]
                                  ) [MulTerm]
                                ) [TermExpr]
                              ) [Designator_0]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [TermExpr]
                      ) [PrintStmt]
                    ) [MatchedStmt]
                  ) [Statements]
                  MatchedStmt(
                    DesignatorStatement(
                      Assignment(
                        Designator_1(
                         bodovi
                        ) [Designator_1]
                        AddExpr(
                          FactorTerm(
                            VarFactor(
                              Designator_1(
                               bodovi
                              ) [Designator_1]
                            ) [VarFactor]
                          ) [FactorTerm]
                          MoreTermMulti(
                            MoreTermSingle(
                              MoreTermPart(
                                Addop(
                                ) [Addop]
                                MulTerm(
                                  FactorExpr(
                                    AddExpr(
                                      MulTerm(
                                        VarFactor(
                                          Designator_1(
                                           pet
                                          ) [Designator_1]
                                        ) [VarFactor]
                                        MoreFactorSingle(
                                          MoreFactorPart(
                                            Mulop(
                                            ) [Mulop]
                                            VarFactor(
                                              Designator_1(
                                               jedan
                                              ) [Designator_1]
                                            ) [VarFactor]
                                          ) [MoreFactorPart]
                                        ) [MoreFactorSingle]
                                      ) [MulTerm]
                                      MoreTermSingle(
                                        MoreTermPart(
                                          Subop(
                                          ) [Subop]
                                          FactorTerm(
                                            ValFactor(
                                              NumConst(
                                               1
                                              ) [NumConst]
                                            ) [ValFactor]
                                          ) [FactorTerm]
                                        ) [MoreTermPart]
                                      ) [MoreTermSingle]
                                    ) [AddExpr]
                                  ) [FactorExpr]
                                  MoreFactorSingle(
                                    MoreFactorPart(
                                      Mulop(
                                      ) [Mulop]
                                      VarFactor(
                                        Designator_1(
                                         bodovi
                                        ) [Designator_1]
                                      ) [VarFactor]
                                    ) [MoreFactorPart]
                                  ) [MoreFactorSingle]
                                ) [MulTerm]
                              ) [MoreTermPart]
                            ) [MoreTermSingle]
                            MoreTermPart(
                              Subop(
                              ) [Subop]
                              FactorTerm(
                                FactorExpr(
                                  AddExpr(
                                    MulTerm(
                                      ValFactor(
                                        NumConst(
                                         3
                                        ) [NumConst]
                                      ) [ValFactor]
                                      MoreFactorSingle(
                                        MoreFactorPart(
                                          Modop(
                                          ) [Modop]
                                          ValFactor(
                                            NumConst(
                                             2
                                            ) [NumConst]
                                          ) [ValFactor]
                                        ) [MoreFactorPart]
                                      ) [MoreFactorSingle]
                                    ) [MulTerm]
                                    MoreTermMulti(
                                      MoreTermSingle(
                                        MoreTermPart(
                                          Addop(
                                          ) [Addop]
                                          MulTerm(
                                            ValFactor(
                                              NumConst(
                                               3
                                              ) [NumConst]
                                            ) [ValFactor]
                                            MoreFactorSingle(
                                              MoreFactorPart(
                                                Mulop(
                                                ) [Mulop]
                                                ValFactor(
                                                  NumConst(
                                                   2
                                                  ) [NumConst]
                                                ) [ValFactor]
                                              ) [MoreFactorPart]
                                            ) [MoreFactorSingle]
                                          ) [MulTerm]
                                        ) [MoreTermPart]
                                      ) [MoreTermSingle]
                                      MoreTermPart(
                                        Subop(
                                        ) [Subop]
                                        FactorTerm(
                                          ValFactor(
                                            NumConst(
                                             3
                                            ) [NumConst]
                                          ) [ValFactor]
                                        ) [FactorTerm]
                                      ) [MoreTermPart]
                                    ) [MoreTermMulti]
                                  ) [AddExpr]
                                ) [FactorExpr]
                              ) [FactorTerm]
                            ) [MoreTermPart]
                          ) [MoreTermMulti]
                        ) [AddExpr]
                      ) [Assignment]
                    ) [DesignatorStatement]
                  ) [MatchedStmt]
                ) [Statements]
                MatchedStmt(
                  PrintStmt(
                    TermExpr(
                      FactorTerm(
                        VarFactor(
                          Designator_1(
                           bodovi
                          ) [Designator_1]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                  ) [PrintStmt]
                ) [MatchedStmt]
              ) [Statements]
              MatchedStmt(
                StmtRead(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                ) [StmtRead]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   bt
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        BoolConst(
                         true
                        ) [BoolConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            MatchedStatement(
              CondDerived1(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      TermExpr(
                        FactorTerm(
                          VarFactor(
                            Designator_1(
                             bt
                            ) [Designator_1]
                          ) [VarFactor]
                        ) [FactorTerm]
                      ) [TermExpr]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [CondDerived1]
              PrintStmt(
                TermExpr(
                  FactorTerm(
                    VarFactor(
                      Designator_1(
                       bodovi
                      ) [Designator_1]
                    ) [VarFactor]
                  ) [FactorTerm]
                ) [TermExpr]
              ) [PrintStmt]
              PrintStmt(
                AddExpr(
                  FactorTerm(
                    VarFactor(
                      Designator_1(
                       bodovi
                      ) [Designator_1]
                    ) [VarFactor]
                  ) [FactorTerm]
                  MoreTermSingle(
                    MoreTermPart(
                      Addop(
                      ) [Addop]
                      FactorTerm(
                        ValFactor(
                          NumConst(
                           10
                          ) [NumConst]
                        ) [ValFactor]
                      ) [FactorTerm]
                    ) [MoreTermPart]
                  ) [MoreTermSingle]
                ) [AddExpr]
              ) [PrintStmt]
            ) [MatchedStatement]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          MatchedStatement(
            CondDerived1(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    TermExpr(
                      FactorTerm(
                        VarFactor(
                          Designator_1(
                           bodovi
                          ) [Designator_1]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                    RelopGT(
                    ) [RelopGT]
                    TermExpr(
                      FactorTerm(
                        ValFactor(
                          NumConst(
                           10
                          ) [NumConst]
                        ) [ValFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
            ) [CondDerived1]
            PrintStmt(
              TermExpr(
                FactorTerm(
                  ValFactor(
                    CharConst(
                     +
                    ) [CharConst]
                  ) [ValFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
            PrintStmt(
              TermExpr(
                FactorTerm(
                  ValFactor(
                    CharConst(
                     -
                    ) [CharConst]
                  ) [ValFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStatement]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:03:25,229 - 
================SEMANTICKA OBRADA====================

INFO  21:03:25,232 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  21:03:25,232 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  21:03:25,232 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  21:03:25,233 - Deklarisan niz niz na liniji 9
INFO  21:03:25,233 - Deklarisan niz nizch na liniji 10
INFO  21:03:25,233 - Obradjuje se funkcija main na liniji 13
INFO  21:03:25,233 - Deklarisana promenljiva bodovi na liniji 14
INFO  21:03:25,233 - Deklarisana promenljiva bt na liniji 15
ERROR 21:03:25,233 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 21:03:25,233 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 34
ERROR 21:03:25,234 - Ulazni fajl [test/program.mj] ima semantickih gresaka!
Parsiranje nije uspesno zavrseno!
INFO  21:11:42,067 - Kompajliranje ulaznog fajla test\program.mj
INFO  21:11:42,108 - #2 program
INFO  21:11:42,108 - #9 test301
INFO  21:11:42,108 - #5 const
INFO  21:11:42,109 - #9 int
INFO  21:11:42,109 - #9 nula
INFO  21:11:42,109 - #25 =
INFO  21:11:42,109 - #10 0
INFO  21:11:42,109 - #28 ;
INFO  21:11:42,110 - #5 const
INFO  21:11:42,111 - #9 int
INFO  21:11:42,111 - #9 jedan
INFO  21:11:42,111 - #25 =
INFO  21:11:42,111 - #10 1
INFO  21:11:42,111 - #28 ;
INFO  21:11:42,111 - #5 const
INFO  21:11:42,111 - #9 int
INFO  21:11:42,111 - #9 pet
INFO  21:11:42,111 - #25 =
INFO  21:11:42,111 - #10 5
INFO  21:11:42,111 - #28 ;
INFO  21:11:42,111 - #9 int
INFO  21:11:42,111 - #9 niz
INFO  21:11:42,112 - #23 [
INFO  21:11:42,112 - #24 ]
INFO  21:11:42,112 - #28 ;
INFO  21:11:42,112 - #9 char
INFO  21:11:42,112 - #9 nizch
INFO  21:11:42,113 - #23 [
INFO  21:11:42,113 - #24 ]
INFO  21:11:42,113 - #28 ;
INFO  21:11:42,113 - #21 {
INFO  21:11:42,113 - #9 int
INFO  21:11:42,113 - #9 main
INFO  21:11:42,113 - #30 (
INFO  21:11:42,114 - #31 )
INFO  21:11:42,114 - #9 int
INFO  21:11:42,114 - #9 bodovi
INFO  21:11:42,115 - #28 ;
INFO  21:11:42,115 - #9 bool
INFO  21:11:42,115 - #9 bt
INFO  21:11:42,115 - #28 ;
INFO  21:11:42,115 - #21 {
INFO  21:11:42,115 - #9 bodovi
INFO  21:11:42,115 - #25 =
INFO  21:11:42,115 - #10 0
INFO  21:11:42,115 - #28 ;
INFO  21:11:42,116 - #9 bodovi
INFO  21:11:42,116 - #26 ++
INFO  21:11:42,116 - #28 ;
INFO  21:11:42,116 - #9 bodovi
INFO  21:11:42,116 - #25 =
INFO  21:11:42,116 - #9 bodovi
INFO  21:11:42,117 - #14 +
INFO  21:11:42,117 - #9 jedan
INFO  21:11:42,117 - #28 ;
INFO  21:11:42,118 - #9 bodovi
INFO  21:11:42,118 - #25 =
INFO  21:11:42,118 - #9 bodovi
INFO  21:11:42,118 - #16 *
INFO  21:11:42,118 - #9 pet
INFO  21:11:42,118 - #28 ;
INFO  21:11:42,119 - #9 bodovi
INFO  21:11:42,119 - #27 --
INFO  21:11:42,119 - #28 ;
INFO  21:11:42,119 - #3 print
INFO  21:11:42,120 - #30 (
INFO  21:11:42,120 - #9 bodovi
INFO  21:11:42,120 - #31 )
INFO  21:11:42,120 - #28 ;
INFO  21:11:42,120 - #9 niz
INFO  21:11:42,120 - #25 =
INFO  21:11:42,120 - #7 new
INFO  21:11:42,120 - #9 int
INFO  21:11:42,120 - #23 [
INFO  21:11:42,120 - #10 3
INFO  21:11:42,120 - #24 ]
INFO  21:11:42,120 - #28 ;
INFO  21:11:42,120 - #9 niz
INFO  21:11:42,120 - #23 [
INFO  21:11:42,120 - #9 nula
INFO  21:11:42,120 - #24 ]
INFO  21:11:42,120 - #25 =
INFO  21:11:42,121 - #9 jedan
INFO  21:11:42,121 - #28 ;
INFO  21:11:42,124 - #9 niz
INFO  21:11:42,125 - #23 [
INFO  21:11:42,125 - #10 1
INFO  21:11:42,125 - #24 ]
INFO  21:11:42,125 - #25 =
INFO  21:11:42,125 - #10 2
INFO  21:11:42,125 - #28 ;
INFO  21:11:42,125 - #9 niz
INFO  21:11:42,125 - #23 [
INFO  21:11:42,125 - #9 niz
INFO  21:11:42,125 - #23 [
INFO  21:11:42,125 - #9 jedan
INFO  21:11:42,125 - #24 ]
INFO  21:11:42,125 - #24 ]
INFO  21:11:42,125 - #25 =
INFO  21:11:42,125 - #9 niz
INFO  21:11:42,125 - #23 [
INFO  21:11:42,125 - #9 niz
INFO  21:11:42,125 - #23 [
INFO  21:11:42,125 - #10 0
INFO  21:11:42,125 - #24 ]
INFO  21:11:42,126 - #24 ]
INFO  21:11:42,126 - #16 *
INFO  21:11:42,126 - #10 3
INFO  21:11:42,126 - #28 ;
INFO  21:11:42,126 - #9 bodovi
INFO  21:11:42,126 - #25 =
INFO  21:11:42,126 - #9 niz
INFO  21:11:42,126 - #23 [
INFO  21:11:42,126 - #10 2
INFO  21:11:42,126 - #24 ]
INFO  21:11:42,126 - #17 /
INFO  21:11:42,126 - #9 niz
INFO  21:11:42,127 - #23 [
INFO  21:11:42,127 - #10 0
INFO  21:11:42,127 - #24 ]
INFO  21:11:42,127 - #28 ;
INFO  21:11:42,127 - #3 print
INFO  21:11:42,127 - #30 (
INFO  21:11:42,127 - #9 bodovi
INFO  21:11:42,127 - #31 )
INFO  21:11:42,127 - #28 ;
INFO  21:11:42,127 - #3 print
INFO  21:11:42,127 - #30 (
INFO  21:11:42,127 - #9 niz
INFO  21:11:42,127 - #23 [
INFO  21:11:42,127 - #10 2
INFO  21:11:42,127 - #24 ]
INFO  21:11:42,127 - #31 )
INFO  21:11:42,127 - #28 ;
INFO  21:11:42,128 - #9 nizch
INFO  21:11:42,128 - #25 =
INFO  21:11:42,128 - #7 new
INFO  21:11:42,128 - #9 char
INFO  21:11:42,128 - #23 [
INFO  21:11:42,128 - #10 3
INFO  21:11:42,128 - #24 ]
INFO  21:11:42,128 - #28 ;
INFO  21:11:42,128 - #9 nizch
INFO  21:11:42,128 - #23 [
INFO  21:11:42,128 - #10 0
INFO  21:11:42,128 - #24 ]
INFO  21:11:42,128 - #25 =
INFO  21:11:42,128 - #11 a
INFO  21:11:42,128 - #28 ;
INFO  21:11:42,128 - #9 nizch
INFO  21:11:42,128 - #23 [
INFO  21:11:42,128 - #9 jedan
INFO  21:11:42,128 - #24 ]
INFO  21:11:42,129 - #25 =
INFO  21:11:42,129 - #11 b
INFO  21:11:42,129 - #28 ;
INFO  21:11:42,129 - #9 nizch
INFO  21:11:42,129 - #23 [
INFO  21:11:42,129 - #9 pet
INFO  21:11:42,129 - #15 -
INFO  21:11:42,129 - #10 3
INFO  21:11:42,129 - #24 ]
INFO  21:11:42,129 - #25 =
INFO  21:11:42,129 - #11 c
INFO  21:11:42,129 - #28 ;
INFO  21:11:42,129 - #3 print
INFO  21:11:42,129 - #30 (
INFO  21:11:42,130 - #9 nizch
INFO  21:11:42,130 - #23 [
INFO  21:11:42,130 - #10 1
INFO  21:11:42,130 - #24 ]
INFO  21:11:42,130 - #31 )
INFO  21:11:42,130 - #28 ;
INFO  21:11:42,130 - #3 print
INFO  21:11:42,130 - #30 (
INFO  21:11:42,130 - #9 nizch
INFO  21:11:42,130 - #23 [
INFO  21:11:42,130 - #9 jedan
INFO  21:11:42,130 - #16 *
INFO  21:11:42,130 - #10 2
INFO  21:11:42,130 - #24 ]
INFO  21:11:42,130 - #31 )
INFO  21:11:42,130 - #28 ;
INFO  21:11:42,131 - #9 bodovi
INFO  21:11:42,131 - #25 =
INFO  21:11:42,131 - #9 bodovi
INFO  21:11:42,131 - #14 +
INFO  21:11:42,131 - #30 (
INFO  21:11:42,131 - #9 pet
INFO  21:11:42,131 - #16 *
INFO  21:11:42,131 - #9 jedan
INFO  21:11:42,131 - #15 -
INFO  21:11:42,131 - #10 1
INFO  21:11:42,131 - #31 )
INFO  21:11:42,131 - #16 *
INFO  21:11:42,131 - #9 bodovi
INFO  21:11:42,131 - #15 -
INFO  21:11:42,132 - #30 (
INFO  21:11:42,132 - #10 3
INFO  21:11:42,132 - #18 %
INFO  21:11:42,132 - #10 2
INFO  21:11:42,132 - #14 +
INFO  21:11:42,132 - #10 3
INFO  21:11:42,132 - #16 *
INFO  21:11:42,133 - #10 2
INFO  21:11:42,133 - #15 -
INFO  21:11:42,133 - #10 3
INFO  21:11:42,133 - #31 )
INFO  21:11:42,133 - #28 ;
INFO  21:11:42,133 - #3 print
INFO  21:11:42,133 - #30 (
INFO  21:11:42,133 - #9 bodovi
INFO  21:11:42,133 - #31 )
INFO  21:11:42,133 - #28 ;
INFO  21:11:42,133 - #4 read
INFO  21:11:42,133 - #30 (
INFO  21:11:42,133 - #9 bodovi
INFO  21:11:42,133 - #31 )
INFO  21:11:42,133 - #28 ;
INFO  21:11:42,133 - #9 bt
INFO  21:11:42,134 - #25 =
INFO  21:11:42,134 - #8 true
INFO  21:11:42,134 - #28 ;
INFO  21:11:42,134 - #32 if
INFO  21:11:42,134 - #30 (
INFO  21:11:42,134 - #9 bt
INFO  21:11:42,134 - #31 )
INFO  21:11:42,135 - #21 {
INFO  21:11:42,135 - #3 print
INFO  21:11:42,135 - #30 (
INFO  21:11:42,135 - #9 bodovi
INFO  21:11:42,135 - #31 )
INFO  21:11:42,135 - #28 ;
INFO  21:11:42,135 - #22 }
INFO  21:11:42,135 - #33 else
INFO  21:11:42,135 - #21 {
INFO  21:11:42,135 - #3 print
INFO  21:11:42,135 - #30 (
INFO  21:11:42,135 - #9 bodovi
INFO  21:11:42,135 - #14 +
INFO  21:11:42,135 - #10 10
INFO  21:11:42,135 - #31 )
INFO  21:11:42,135 - #28 ;
INFO  21:11:42,135 - #22 }
INFO  21:11:42,135 - #32 if
INFO  21:11:42,135 - #30 (
INFO  21:11:42,135 - #9 bodovi
INFO  21:11:42,135 - #38 >
INFO  21:11:42,135 - #10 10
INFO  21:11:42,136 - #31 )
INFO  21:11:42,136 - #21 {
INFO  21:11:42,136 - #3 print
INFO  21:11:42,136 - #30 (
INFO  21:11:42,136 - #11 +
INFO  21:11:42,137 - #31 )
INFO  21:11:42,137 - #28 ;
INFO  21:11:42,137 - #22 }
INFO  21:11:42,137 - #33 else
INFO  21:11:42,137 - #21 {
INFO  21:11:42,137 - #3 print
INFO  21:11:42,137 - #30 (
INFO  21:11:42,137 - #11 -
INFO  21:11:42,137 - #31 )
INFO  21:11:42,137 - #28 ;
INFO  21:11:42,137 - #22 }
INFO  21:11:42,137 - #22 }
INFO  21:11:42,137 - #22 }
INFO  21:11:42,138 - 
================SINTAKSNO STABLO====================

INFO  21:11:42,144 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 bodovi
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            Statements(
                                              Statements(
                                                Statements(
                                                  Statements(
                                                    Statements(
                                                      Statements(
                                                        NoStmt(
                                                        ) [NoStmt]
                                                        MatchedStmt(
                                                          DesignatorStatement(
                                                            Assignment(
                                                              Designator_1(
                                                               bodovi
                                                              ) [Designator_1]
                                                              TermExpr(
                                                                FactorTerm(
                                                                  ValFactor(
                                                                    NumConst(
                                                                     0
                                                                    ) [NumConst]
                                                                  ) [ValFactor]
                                                                ) [FactorTerm]
                                                              ) [TermExpr]
                                                            ) [Assignment]
                                                          ) [DesignatorStatement]
                                                        ) [MatchedStmt]
                                                      ) [Statements]
                                                      MatchedStmt(
                                                        DesignatorStatement(
                                                          Increment(
                                                            Designator_1(
                                                             bodovi
                                                            ) [Designator_1]
                                                          ) [Increment]
                                                        ) [DesignatorStatement]
                                                      ) [MatchedStmt]
                                                    ) [Statements]
                                                    MatchedStmt(
                                                      DesignatorStatement(
                                                        Assignment(
                                                          Designator_1(
                                                           bodovi
                                                          ) [Designator_1]
                                                          AddExpr(
                                                            FactorTerm(
                                                              VarFactor(
                                                                Designator_1(
                                                                 bodovi
                                                                ) [Designator_1]
                                                              ) [VarFactor]
                                                            ) [FactorTerm]
                                                            MoreTermSingle(
                                                              MoreTermPart(
                                                                Addop(
                                                                ) [Addop]
                                                                FactorTerm(
                                                                  VarFactor(
                                                                    Designator_1(
                                                                     jedan
                                                                    ) [Designator_1]
                                                                  ) [VarFactor]
                                                                ) [FactorTerm]
                                                              ) [MoreTermPart]
                                                            ) [MoreTermSingle]
                                                          ) [AddExpr]
                                                        ) [Assignment]
                                                      ) [DesignatorStatement]
                                                    ) [MatchedStmt]
                                                  ) [Statements]
                                                  MatchedStmt(
                                                    DesignatorStatement(
                                                      Assignment(
                                                        Designator_1(
                                                         bodovi
                                                        ) [Designator_1]
                                                        TermExpr(
                                                          MulTerm(
                                                            VarFactor(
                                                              Designator_1(
                                                               bodovi
                                                              ) [Designator_1]
                                                            ) [VarFactor]
                                                            MoreFactorSingle(
                                                              MoreFactorPart(
                                                                Mulop(
                                                                ) [Mulop]
                                                                VarFactor(
                                                                  Designator_1(
                                                                   pet
                                                                  ) [Designator_1]
                                                                ) [VarFactor]
                                                              ) [MoreFactorPart]
                                                            ) [MoreFactorSingle]
                                                          ) [MulTerm]
                                                        ) [TermExpr]
                                                      ) [Assignment]
                                                    ) [DesignatorStatement]
                                                  ) [MatchedStmt]
                                                ) [Statements]
                                                MatchedStmt(
                                                  DesignatorStatement(
                                                    Decrement(
                                                      Designator_1(
                                                       bodovi
                                                      ) [Designator_1]
                                                    ) [Decrement]
                                                  ) [DesignatorStatement]
                                                ) [MatchedStmt]
                                              ) [Statements]
                                              MatchedStmt(
                                                PrintStmt(
                                                  TermExpr(
                                                    FactorTerm(
                                                      VarFactor(
                                                        Designator_1(
                                                         bodovi
                                                        ) [Designator_1]
                                                      ) [VarFactor]
                                                    ) [FactorTerm]
                                                  ) [TermExpr]
                                                ) [PrintStmt]
                                              ) [MatchedStmt]
                                            ) [Statements]
                                            MatchedStmt(
                                              DesignatorStatement(
                                                Assignment(
                                                  Designator_1(
                                                   niz
                                                  ) [Designator_1]
                                                  TermExpr(
                                                    FactorTerm(
                                                      NewOperator(
                                                        Type(
                                                         int
                                                        ) [Type]
                                                        TermExpr(
                                                          FactorTerm(
                                                            ValFactor(
                                                              NumConst(
                                                               3
                                                              ) [NumConst]
                                                            ) [ValFactor]
                                                          ) [FactorTerm]
                                                        ) [TermExpr]
                                                      ) [NewOperator]
                                                    ) [FactorTerm]
                                                  ) [TermExpr]
                                                ) [Assignment]
                                              ) [DesignatorStatement]
                                            ) [MatchedStmt]
                                          ) [Statements]
                                          MatchedStmt(
                                            DesignatorStatement(
                                              Assignment(
                                                Designator_0(
                                                 niz
                                                  TermExpr(
                                                    FactorTerm(
                                                      VarFactor(
                                                        Designator_1(
                                                         nula
                                                        ) [Designator_1]
                                                      ) [VarFactor]
                                                    ) [FactorTerm]
                                                  ) [TermExpr]
                                                ) [Designator_0]
                                                TermExpr(
                                                  FactorTerm(
                                                    VarFactor(
                                                      Designator_1(
                                                       jedan
                                                      ) [Designator_1]
                                                    ) [VarFactor]
                                                  ) [FactorTerm]
                                                ) [TermExpr]
                                              ) [Assignment]
                                            ) [DesignatorStatement]
                                          ) [MatchedStmt]
                                        ) [Statements]
                                        MatchedStmt(
                                          DesignatorStatement(
                                            Assignment(
                                              Designator_0(
                                               niz
                                                TermExpr(
                                                  FactorTerm(
                                                    ValFactor(
                                                      NumConst(
                                                       1
                                                      ) [NumConst]
                                                    ) [ValFactor]
                                                  ) [FactorTerm]
                                                ) [TermExpr]
                                              ) [Designator_0]
                                              TermExpr(
                                                FactorTerm(
                                                  ValFactor(
                                                    NumConst(
                                                     2
                                                    ) [NumConst]
                                                  ) [ValFactor]
                                                ) [FactorTerm]
                                              ) [TermExpr]
                                            ) [Assignment]
                                          ) [DesignatorStatement]
                                        ) [MatchedStmt]
                                      ) [Statements]
                                      MatchedStmt(
                                        DesignatorStatement(
                                          Assignment(
                                            Designator_0(
                                             niz
                                              TermExpr(
                                                FactorTerm(
                                                  VarFactor(
                                                    Designator_0(
                                                     niz
                                                      TermExpr(
                                                        FactorTerm(
                                                          VarFactor(
                                                            Designator_1(
                                                             jedan
                                                            ) [Designator_1]
                                                          ) [VarFactor]
                                                        ) [FactorTerm]
                                                      ) [TermExpr]
                                                    ) [Designator_0]
                                                  ) [VarFactor]
                                                ) [FactorTerm]
                                              ) [TermExpr]
                                            ) [Designator_0]
                                            TermExpr(
                                              MulTerm(
                                                VarFactor(
                                                  Designator_0(
                                                   niz
                                                    TermExpr(
                                                      FactorTerm(
                                                        VarFactor(
                                                          Designator_0(
                                                           niz
                                                            TermExpr(
                                                              FactorTerm(
                                                                ValFactor(
                                                                  NumConst(
                                                                   0
                                                                  ) [NumConst]
                                                                ) [ValFactor]
                                                              ) [FactorTerm]
                                                            ) [TermExpr]
                                                          ) [Designator_0]
                                                        ) [VarFactor]
                                                      ) [FactorTerm]
                                                    ) [TermExpr]
                                                  ) [Designator_0]
                                                ) [VarFactor]
                                                MoreFactorSingle(
                                                  MoreFactorPart(
                                                    Mulop(
                                                    ) [Mulop]
                                                    ValFactor(
                                                      NumConst(
                                                       3
                                                      ) [NumConst]
                                                    ) [ValFactor]
                                                  ) [MoreFactorPart]
                                                ) [MoreFactorSingle]
                                              ) [MulTerm]
                                            ) [TermExpr]
                                          ) [Assignment]
                                        ) [DesignatorStatement]
                                      ) [MatchedStmt]
                                    ) [Statements]
                                    MatchedStmt(
                                      DesignatorStatement(
                                        Assignment(
                                          Designator_1(
                                           bodovi
                                          ) [Designator_1]
                                          TermExpr(
                                            MulTerm(
                                              VarFactor(
                                                Designator_0(
                                                 niz
                                                  TermExpr(
                                                    FactorTerm(
                                                      ValFactor(
                                                        NumConst(
                                                         2
                                                        ) [NumConst]
                                                      ) [ValFactor]
                                                    ) [FactorTerm]
                                                  ) [TermExpr]
                                                ) [Designator_0]
                                              ) [VarFactor]
                                              MoreFactorSingle(
                                                MoreFactorPart(
                                                  Divop(
                                                  ) [Divop]
                                                  VarFactor(
                                                    Designator_0(
                                                     niz
                                                      TermExpr(
                                                        FactorTerm(
                                                          ValFactor(
                                                            NumConst(
                                                             0
                                                            ) [NumConst]
                                                          ) [ValFactor]
                                                        ) [FactorTerm]
                                                      ) [TermExpr]
                                                    ) [Designator_0]
                                                  ) [VarFactor]
                                                ) [MoreFactorPart]
                                              ) [MoreFactorSingle]
                                            ) [MulTerm]
                                          ) [TermExpr]
                                        ) [Assignment]
                                      ) [DesignatorStatement]
                                    ) [MatchedStmt]
                                  ) [Statements]
                                  MatchedStmt(
                                    PrintStmt(
                                      TermExpr(
                                        FactorTerm(
                                          VarFactor(
                                            Designator_1(
                                             bodovi
                                            ) [Designator_1]
                                          ) [VarFactor]
                                        ) [FactorTerm]
                                      ) [TermExpr]
                                    ) [PrintStmt]
                                  ) [MatchedStmt]
                                ) [Statements]
                                MatchedStmt(
                                  PrintStmt(
                                    TermExpr(
                                      FactorTerm(
                                        VarFactor(
                                          Designator_0(
                                           niz
                                            TermExpr(
                                              FactorTerm(
                                                ValFactor(
                                                  NumConst(
                                                   2
                                                  ) [NumConst]
                                                ) [ValFactor]
                                              ) [FactorTerm]
                                            ) [TermExpr]
                                          ) [Designator_0]
                                        ) [VarFactor]
                                      ) [FactorTerm]
                                    ) [TermExpr]
                                  ) [PrintStmt]
                                ) [MatchedStmt]
                              ) [Statements]
                              MatchedStmt(
                                DesignatorStatement(
                                  Assignment(
                                    Designator_1(
                                     nizch
                                    ) [Designator_1]
                                    TermExpr(
                                      FactorTerm(
                                        NewOperator(
                                          Type(
                                           char
                                          ) [Type]
                                          TermExpr(
                                            FactorTerm(
                                              ValFactor(
                                                NumConst(
                                                 3
                                                ) [NumConst]
                                              ) [ValFactor]
                                            ) [FactorTerm]
                                          ) [TermExpr]
                                        ) [NewOperator]
                                      ) [FactorTerm]
                                    ) [TermExpr]
                                  ) [Assignment]
                                ) [DesignatorStatement]
                              ) [MatchedStmt]
                            ) [Statements]
                            MatchedStmt(
                              DesignatorStatement(
                                Assignment(
                                  Designator_0(
                                   nizch
                                    TermExpr(
                                      FactorTerm(
                                        ValFactor(
                                          NumConst(
                                           0
                                          ) [NumConst]
                                        ) [ValFactor]
                                      ) [FactorTerm]
                                    ) [TermExpr]
                                  ) [Designator_0]
                                  TermExpr(
                                    FactorTerm(
                                      ValFactor(
                                        CharConst(
                                         a
                                        ) [CharConst]
                                      ) [ValFactor]
                                    ) [FactorTerm]
                                  ) [TermExpr]
                                ) [Assignment]
                              ) [DesignatorStatement]
                            ) [MatchedStmt]
                          ) [Statements]
                          MatchedStmt(
                            DesignatorStatement(
                              Assignment(
                                Designator_0(
                                 nizch
                                  TermExpr(
                                    FactorTerm(
                                      VarFactor(
                                        Designator_1(
                                         jedan
                                        ) [Designator_1]
                                      ) [VarFactor]
                                    ) [FactorTerm]
                                  ) [TermExpr]
                                ) [Designator_0]
                                TermExpr(
                                  FactorTerm(
                                    ValFactor(
                                      CharConst(
                                       b
                                      ) [CharConst]
                                    ) [ValFactor]
                                  ) [FactorTerm]
                                ) [TermExpr]
                              ) [Assignment]
                            ) [DesignatorStatement]
                          ) [MatchedStmt]
                        ) [Statements]
                        MatchedStmt(
                          DesignatorStatement(
                            Assignment(
                              Designator_0(
                               nizch
                                AddExpr(
                                  FactorTerm(
                                    VarFactor(
                                      Designator_1(
                                       pet
                                      ) [Designator_1]
                                    ) [VarFactor]
                                  ) [FactorTerm]
                                  MoreTermSingle(
                                    MoreTermPart(
                                      Subop(
                                      ) [Subop]
                                      FactorTerm(
                                        ValFactor(
                                          NumConst(
                                           3
                                          ) [NumConst]
                                        ) [ValFactor]
                                      ) [FactorTerm]
                                    ) [MoreTermPart]
                                  ) [MoreTermSingle]
                                ) [AddExpr]
                              ) [Designator_0]
                              TermExpr(
                                FactorTerm(
                                  ValFactor(
                                    CharConst(
                                     c
                                    ) [CharConst]
                                  ) [ValFactor]
                                ) [FactorTerm]
                              ) [TermExpr]
                            ) [Assignment]
                          ) [DesignatorStatement]
                        ) [MatchedStmt]
                      ) [Statements]
                      MatchedStmt(
                        PrintStmt(
                          TermExpr(
                            FactorTerm(
                              VarFactor(
                                Designator_0(
                                 nizch
                                  TermExpr(
                                    FactorTerm(
                                      ValFactor(
                                        NumConst(
                                         1
                                        ) [NumConst]
                                      ) [ValFactor]
                                    ) [FactorTerm]
                                  ) [TermExpr]
                                ) [Designator_0]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [TermExpr]
                        ) [PrintStmt]
                      ) [MatchedStmt]
                    ) [Statements]
                    MatchedStmt(
                      PrintStmt(
                        TermExpr(
                          FactorTerm(
                            VarFactor(
                              Designator_0(
                               nizch
                                TermExpr(
                                  MulTerm(
                                    VarFactor(
                                      Designator_1(
                                       jedan
                                      ) [Designator_1]
                                    ) [VarFactor]
                                    MoreFactorSingle(
                                      MoreFactorPart(
                                        Mulop(
                                        ) [Mulop]
                                        ValFactor(
                                          NumConst(
                                           2
                                          ) [NumConst]
                                        ) [ValFactor]
                                      ) [MoreFactorPart]
                                    ) [MoreFactorSingle]
                                  ) [MulTerm]
                                ) [TermExpr]
                              ) [Designator_0]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [TermExpr]
                      ) [PrintStmt]
                    ) [MatchedStmt]
                  ) [Statements]
                  MatchedStmt(
                    DesignatorStatement(
                      Assignment(
                        Designator_1(
                         bodovi
                        ) [Designator_1]
                        AddExpr(
                          FactorTerm(
                            VarFactor(
                              Designator_1(
                               bodovi
                              ) [Designator_1]
                            ) [VarFactor]
                          ) [FactorTerm]
                          MoreTermMulti(
                            MoreTermSingle(
                              MoreTermPart(
                                Addop(
                                ) [Addop]
                                MulTerm(
                                  FactorExpr(
                                    AddExpr(
                                      MulTerm(
                                        VarFactor(
                                          Designator_1(
                                           pet
                                          ) [Designator_1]
                                        ) [VarFactor]
                                        MoreFactorSingle(
                                          MoreFactorPart(
                                            Mulop(
                                            ) [Mulop]
                                            VarFactor(
                                              Designator_1(
                                               jedan
                                              ) [Designator_1]
                                            ) [VarFactor]
                                          ) [MoreFactorPart]
                                        ) [MoreFactorSingle]
                                      ) [MulTerm]
                                      MoreTermSingle(
                                        MoreTermPart(
                                          Subop(
                                          ) [Subop]
                                          FactorTerm(
                                            ValFactor(
                                              NumConst(
                                               1
                                              ) [NumConst]
                                            ) [ValFactor]
                                          ) [FactorTerm]
                                        ) [MoreTermPart]
                                      ) [MoreTermSingle]
                                    ) [AddExpr]
                                  ) [FactorExpr]
                                  MoreFactorSingle(
                                    MoreFactorPart(
                                      Mulop(
                                      ) [Mulop]
                                      VarFactor(
                                        Designator_1(
                                         bodovi
                                        ) [Designator_1]
                                      ) [VarFactor]
                                    ) [MoreFactorPart]
                                  ) [MoreFactorSingle]
                                ) [MulTerm]
                              ) [MoreTermPart]
                            ) [MoreTermSingle]
                            MoreTermPart(
                              Subop(
                              ) [Subop]
                              FactorTerm(
                                FactorExpr(
                                  AddExpr(
                                    MulTerm(
                                      ValFactor(
                                        NumConst(
                                         3
                                        ) [NumConst]
                                      ) [ValFactor]
                                      MoreFactorSingle(
                                        MoreFactorPart(
                                          Modop(
                                          ) [Modop]
                                          ValFactor(
                                            NumConst(
                                             2
                                            ) [NumConst]
                                          ) [ValFactor]
                                        ) [MoreFactorPart]
                                      ) [MoreFactorSingle]
                                    ) [MulTerm]
                                    MoreTermMulti(
                                      MoreTermSingle(
                                        MoreTermPart(
                                          Addop(
                                          ) [Addop]
                                          MulTerm(
                                            ValFactor(
                                              NumConst(
                                               3
                                              ) [NumConst]
                                            ) [ValFactor]
                                            MoreFactorSingle(
                                              MoreFactorPart(
                                                Mulop(
                                                ) [Mulop]
                                                ValFactor(
                                                  NumConst(
                                                   2
                                                  ) [NumConst]
                                                ) [ValFactor]
                                              ) [MoreFactorPart]
                                            ) [MoreFactorSingle]
                                          ) [MulTerm]
                                        ) [MoreTermPart]
                                      ) [MoreTermSingle]
                                      MoreTermPart(
                                        Subop(
                                        ) [Subop]
                                        FactorTerm(
                                          ValFactor(
                                            NumConst(
                                             3
                                            ) [NumConst]
                                          ) [ValFactor]
                                        ) [FactorTerm]
                                      ) [MoreTermPart]
                                    ) [MoreTermMulti]
                                  ) [AddExpr]
                                ) [FactorExpr]
                              ) [FactorTerm]
                            ) [MoreTermPart]
                          ) [MoreTermMulti]
                        ) [AddExpr]
                      ) [Assignment]
                    ) [DesignatorStatement]
                  ) [MatchedStmt]
                ) [Statements]
                MatchedStmt(
                  PrintStmt(
                    TermExpr(
                      FactorTerm(
                        VarFactor(
                          Designator_1(
                           bodovi
                          ) [Designator_1]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                  ) [PrintStmt]
                ) [MatchedStmt]
              ) [Statements]
              MatchedStmt(
                StmtRead(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                ) [StmtRead]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   bt
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        BoolConst(
                         true
                        ) [BoolConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            MatchedStatement(
              CondDerived1(
                Condition_one(
                  Cond_term_one(
                    Cond_fact_one(
                      TermExpr(
                        FactorTerm(
                          VarFactor(
                            Designator_1(
                             bt
                            ) [Designator_1]
                          ) [VarFactor]
                        ) [FactorTerm]
                      ) [TermExpr]
                    ) [Cond_fact_one]
                  ) [Cond_term_one]
                ) [Condition_one]
              ) [CondDerived1]
              PrintStmt(
                TermExpr(
                  FactorTerm(
                    VarFactor(
                      Designator_1(
                       bodovi
                      ) [Designator_1]
                    ) [VarFactor]
                  ) [FactorTerm]
                ) [TermExpr]
              ) [PrintStmt]
              PrintStmt(
                AddExpr(
                  FactorTerm(
                    VarFactor(
                      Designator_1(
                       bodovi
                      ) [Designator_1]
                    ) [VarFactor]
                  ) [FactorTerm]
                  MoreTermSingle(
                    MoreTermPart(
                      Addop(
                      ) [Addop]
                      FactorTerm(
                        ValFactor(
                          NumConst(
                           10
                          ) [NumConst]
                        ) [ValFactor]
                      ) [FactorTerm]
                    ) [MoreTermPart]
                  ) [MoreTermSingle]
                ) [AddExpr]
              ) [PrintStmt]
            ) [MatchedStatement]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          MatchedStatement(
            CondDerived1(
              Condition_one(
                Cond_term_one(
                  Cond_fact_two(
                    TermExpr(
                      FactorTerm(
                        VarFactor(
                          Designator_1(
                           bodovi
                          ) [Designator_1]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                    RelopGT(
                    ) [RelopGT]
                    TermExpr(
                      FactorTerm(
                        ValFactor(
                          NumConst(
                           10
                          ) [NumConst]
                        ) [ValFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                  ) [Cond_fact_two]
                ) [Cond_term_one]
              ) [Condition_one]
            ) [CondDerived1]
            PrintStmt(
              TermExpr(
                FactorTerm(
                  ValFactor(
                    CharConst(
                     +
                    ) [CharConst]
                  ) [ValFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
            PrintStmt(
              TermExpr(
                FactorTerm(
                  ValFactor(
                    CharConst(
                     -
                    ) [CharConst]
                  ) [ValFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStatement]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:11:42,156 - 
================SEMANTICKA OBRADA====================

INFO  21:11:42,159 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  21:11:42,159 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  21:11:42,159 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  21:11:42,159 - Deklarisan niz niz na liniji 9
INFO  21:11:42,159 - Deklarisan niz nizch na liniji 10
INFO  21:11:42,159 - Obradjuje se funkcija main na liniji 13
INFO  21:11:42,160 - Deklarisana promenljiva bodovi na liniji 14
INFO  21:11:42,160 - Deklarisana promenljiva bt na liniji 15
INFO  21:11:42,161 - 
================GENERISANJE KODA====================

INFO  21:11:42,169 - Parsiranje uspesno zavrseno!
INFO  22:04:04,677 - Kompajliranje ulaznog fajla test\program.mj
INFO  22:04:04,711 - #2 program
INFO  22:04:04,711 - #9 test301
INFO  22:04:04,712 - #5 const
INFO  22:04:04,712 - #9 int
INFO  22:04:04,713 - #9 nula
INFO  22:04:04,713 - #25 =
INFO  22:04:04,713 - #10 0
INFO  22:04:04,713 - #28 ;
INFO  22:04:04,714 - #5 const
INFO  22:04:04,715 - #9 int
INFO  22:04:04,715 - #9 jedan
INFO  22:04:04,715 - #25 =
INFO  22:04:04,715 - #10 1
INFO  22:04:04,715 - #28 ;
INFO  22:04:04,715 - #5 const
INFO  22:04:04,715 - #9 int
INFO  22:04:04,716 - #9 pet
INFO  22:04:04,716 - #25 =
INFO  22:04:04,716 - #10 5
INFO  22:04:04,716 - #28 ;
INFO  22:04:04,716 - #9 int
INFO  22:04:04,716 - #9 niz
INFO  22:04:04,716 - #23 [
INFO  22:04:04,716 - #24 ]
INFO  22:04:04,716 - #28 ;
INFO  22:04:04,716 - #9 char
INFO  22:04:04,717 - #9 nizch
INFO  22:04:04,717 - #23 [
INFO  22:04:04,717 - #24 ]
INFO  22:04:04,717 - #28 ;
INFO  22:04:04,717 - #21 {
INFO  22:04:04,717 - #9 int
INFO  22:04:04,717 - #9 main
INFO  22:04:04,718 - #30 (
INFO  22:04:04,718 - #31 )
INFO  22:04:04,719 - #9 int
INFO  22:04:04,719 - #9 bodovi
INFO  22:04:04,719 - #28 ;
INFO  22:04:04,719 - #9 bool
INFO  22:04:04,719 - #9 bt
INFO  22:04:04,719 - #28 ;
INFO  22:04:04,719 - #21 {
INFO  22:04:04,719 - #9 bodovi
INFO  22:04:04,719 - #25 =
INFO  22:04:04,720 - #10 0
INFO  22:04:04,720 - #28 ;
INFO  22:04:04,720 - #9 bodovi
INFO  22:04:04,720 - #26 ++
INFO  22:04:04,720 - #28 ;
INFO  22:04:04,721 - #9 bodovi
INFO  22:04:04,721 - #25 =
INFO  22:04:04,721 - #9 bodovi
INFO  22:04:04,721 - #14 +
INFO  22:04:04,721 - #9 jedan
INFO  22:04:04,721 - #28 ;
INFO  22:04:04,722 - #9 bodovi
INFO  22:04:04,722 - #25 =
INFO  22:04:04,722 - #9 bodovi
INFO  22:04:04,722 - #16 *
INFO  22:04:04,722 - #9 pet
INFO  22:04:04,723 - #28 ;
INFO  22:04:04,723 - #9 bodovi
INFO  22:04:04,724 - #27 --
INFO  22:04:04,724 - #28 ;
INFO  22:04:04,724 - #3 print
INFO  22:04:04,724 - #30 (
INFO  22:04:04,724 - #9 bodovi
INFO  22:04:04,724 - #31 )
INFO  22:04:04,724 - #28 ;
INFO  22:04:04,724 - #22 }
INFO  22:04:04,724 - #22 }
INFO  22:04:04,725 - 
================SINTAKSNO STABLO====================

INFO  22:04:04,726 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 bodovi
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  MatchedStmt(
                    DesignatorStatement(
                      Assignment(
                        Designator_1(
                         bodovi
                        ) [Designator_1]
                        TermExpr(
                          FactorTerm(
                            ValFactor(
                              NumConst(
                               0
                              ) [NumConst]
                            ) [ValFactor]
                          ) [FactorTerm]
                        ) [TermExpr]
                      ) [Assignment]
                    ) [DesignatorStatement]
                  ) [MatchedStmt]
                ) [Statements]
                MatchedStmt(
                  DesignatorStatement(
                    Increment(
                      Designator_1(
                       bodovi
                      ) [Designator_1]
                    ) [Increment]
                  ) [DesignatorStatement]
                ) [MatchedStmt]
              ) [Statements]
              MatchedStmt(
                DesignatorStatement(
                  Assignment(
                    Designator_1(
                     bodovi
                    ) [Designator_1]
                    AddExpr(
                      FactorTerm(
                        VarFactor(
                          Designator_1(
                           bodovi
                          ) [Designator_1]
                        ) [VarFactor]
                      ) [FactorTerm]
                      MoreTermSingle(
                        MoreTermPart(
                          Addop(
                          ) [Addop]
                          FactorTerm(
                            VarFactor(
                              Designator_1(
                               jedan
                              ) [Designator_1]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [MoreTermPart]
                      ) [MoreTermSingle]
                    ) [AddExpr]
                  ) [Assignment]
                ) [DesignatorStatement]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                  TermExpr(
                    MulTerm(
                      VarFactor(
                        Designator_1(
                         bodovi
                        ) [Designator_1]
                      ) [VarFactor]
                      MoreFactorSingle(
                        MoreFactorPart(
                          Mulop(
                          ) [Mulop]
                          VarFactor(
                            Designator_1(
                             pet
                            ) [Designator_1]
                          ) [VarFactor]
                        ) [MoreFactorPart]
                      ) [MoreFactorSingle]
                    ) [MulTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            DesignatorStatement(
              Decrement(
                Designator_1(
                 bodovi
                ) [Designator_1]
              ) [Decrement]
            ) [DesignatorStatement]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              FactorTerm(
                VarFactor(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                ) [VarFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:04:04,737 - 
================SEMANTICKA OBRADA====================

INFO  22:04:04,740 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  22:04:04,740 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  22:04:04,741 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  22:04:04,741 - Deklarisan niz niz na liniji 9
INFO  22:04:04,741 - Deklarisan niz nizch na liniji 10
INFO  22:04:04,741 - Obradjuje se funkcija main na liniji 13
INFO  22:04:04,741 - Deklarisana promenljiva bodovi na liniji 14
INFO  22:04:04,741 - Deklarisana promenljiva bt na liniji 15
INFO  22:04:04,742 - 
================GENERISANJE KODA====================

INFO  22:04:04,750 - Parsiranje uspesno zavrseno!
INFO  22:04:41,312 - Kompajliranje ulaznog fajla test\program.mj
INFO  22:04:41,347 - #2 program
INFO  22:04:41,347 - #9 test301
INFO  22:04:41,347 - #5 const
INFO  22:04:41,348 - #9 int
INFO  22:04:41,348 - #9 nula
INFO  22:04:41,348 - #25 =
INFO  22:04:41,348 - #10 0
INFO  22:04:41,348 - #28 ;
INFO  22:04:41,349 - #5 const
INFO  22:04:41,350 - #9 int
INFO  22:04:41,350 - #9 jedan
INFO  22:04:41,350 - #25 =
INFO  22:04:41,350 - #10 1
INFO  22:04:41,350 - #28 ;
INFO  22:04:41,350 - #5 const
INFO  22:04:41,350 - #9 int
INFO  22:04:41,350 - #9 pet
INFO  22:04:41,350 - #25 =
INFO  22:04:41,350 - #10 5
INFO  22:04:41,350 - #28 ;
INFO  22:04:41,350 - #9 int
INFO  22:04:41,350 - #9 niz
INFO  22:04:41,350 - #23 [
INFO  22:04:41,350 - #24 ]
INFO  22:04:41,351 - #28 ;
INFO  22:04:41,351 - #9 char
INFO  22:04:41,351 - #9 nizch
INFO  22:04:41,352 - #23 [
INFO  22:04:41,352 - #24 ]
INFO  22:04:41,352 - #28 ;
INFO  22:04:41,352 - #21 {
INFO  22:04:41,352 - #9 int
INFO  22:04:41,353 - #9 main
INFO  22:04:41,353 - #30 (
INFO  22:04:41,353 - #31 )
INFO  22:04:41,354 - #9 int
INFO  22:04:41,354 - #9 bodovi
INFO  22:04:41,354 - #28 ;
INFO  22:04:41,354 - #9 bool
INFO  22:04:41,354 - #9 bt
INFO  22:04:41,354 - #28 ;
INFO  22:04:41,354 - #21 {
INFO  22:04:41,354 - #22 }
INFO  22:04:41,355 - #22 }
INFO  22:04:41,356 - 
================SINTAKSNO STABLO====================

INFO  22:04:41,356 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 bodovi
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      NoStmt(
      ) [NoStmt]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:04:41,366 - 
================SEMANTICKA OBRADA====================

INFO  22:04:41,371 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  22:04:41,371 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  22:04:41,371 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  22:04:41,371 - Deklarisan niz niz na liniji 9
INFO  22:04:41,371 - Deklarisan niz nizch na liniji 10
INFO  22:04:41,371 - Obradjuje se funkcija main na liniji 13
INFO  22:04:41,371 - Deklarisana promenljiva bodovi na liniji 14
INFO  22:04:41,372 - Deklarisana promenljiva bt na liniji 15
INFO  22:04:41,372 - 
================GENERISANJE KODA====================

INFO  22:04:41,377 - Parsiranje uspesno zavrseno!
INFO  22:05:17,820 - Kompajliranje ulaznog fajla test\program.mj
INFO  22:05:17,853 - #2 program
INFO  22:05:17,853 - #9 test301
INFO  22:05:17,853 - #5 const
INFO  22:05:17,854 - #9 int
INFO  22:05:17,854 - #9 nula
INFO  22:05:17,855 - #25 =
INFO  22:05:17,855 - #10 0
INFO  22:05:17,855 - #28 ;
INFO  22:05:17,855 - #5 const
INFO  22:05:17,856 - #9 int
INFO  22:05:17,856 - #9 jedan
INFO  22:05:17,856 - #25 =
INFO  22:05:17,856 - #10 1
INFO  22:05:17,856 - #28 ;
INFO  22:05:17,856 - #5 const
INFO  22:05:17,856 - #9 int
INFO  22:05:17,856 - #9 pet
INFO  22:05:17,857 - #25 =
INFO  22:05:17,857 - #10 5
INFO  22:05:17,857 - #28 ;
INFO  22:05:17,857 - #9 int
INFO  22:05:17,857 - #9 niz
INFO  22:05:17,857 - #23 [
INFO  22:05:17,857 - #24 ]
INFO  22:05:17,857 - #28 ;
INFO  22:05:17,857 - #9 char
INFO  22:05:17,858 - #9 nizch
INFO  22:05:17,858 - #23 [
INFO  22:05:17,858 - #24 ]
INFO  22:05:17,858 - #28 ;
INFO  22:05:17,858 - #21 {
INFO  22:05:17,859 - #9 int
INFO  22:05:17,859 - #9 main
INFO  22:05:17,859 - #30 (
INFO  22:05:17,860 - #31 )
INFO  22:05:17,861 - #9 int
INFO  22:05:17,861 - #9 bodovi
INFO  22:05:17,861 - #28 ;
INFO  22:05:17,861 - #9 bool
INFO  22:05:17,861 - #9 bt
INFO  22:05:17,861 - #28 ;
INFO  22:05:17,861 - #21 {
INFO  22:05:17,861 - #9 bodovi
INFO  22:05:17,862 - #25 =
INFO  22:05:17,862 - #10 0
INFO  22:05:17,862 - #28 ;
INFO  22:05:17,862 - #9 bodovi
INFO  22:05:17,863 - #26 ++
INFO  22:05:17,863 - #28 ;
INFO  22:05:17,863 - #9 bodovi
INFO  22:05:17,863 - #25 =
INFO  22:05:17,863 - #9 bodovi
INFO  22:05:17,863 - #14 +
INFO  22:05:17,863 - #9 jedan
INFO  22:05:17,863 - #28 ;
INFO  22:05:17,864 - #9 bodovi
INFO  22:05:17,864 - #25 =
INFO  22:05:17,864 - #9 bodovi
INFO  22:05:17,864 - #16 *
INFO  22:05:17,864 - #9 pet
INFO  22:05:17,865 - #28 ;
INFO  22:05:17,865 - #9 bodovi
INFO  22:05:17,866 - #27 --
INFO  22:05:17,866 - #28 ;
INFO  22:05:17,866 - #22 }
INFO  22:05:17,866 - #22 }
INFO  22:05:17,867 - 
================SINTAKSNO STABLO====================

INFO  22:05:17,868 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 bodovi
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStmt(
                ) [NoStmt]
                MatchedStmt(
                  DesignatorStatement(
                    Assignment(
                      Designator_1(
                       bodovi
                      ) [Designator_1]
                      TermExpr(
                        FactorTerm(
                          ValFactor(
                            NumConst(
                             0
                            ) [NumConst]
                          ) [ValFactor]
                        ) [FactorTerm]
                      ) [TermExpr]
                    ) [Assignment]
                  ) [DesignatorStatement]
                ) [MatchedStmt]
              ) [Statements]
              MatchedStmt(
                DesignatorStatement(
                  Increment(
                    Designator_1(
                     bodovi
                    ) [Designator_1]
                  ) [Increment]
                ) [DesignatorStatement]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                  AddExpr(
                    FactorTerm(
                      VarFactor(
                        Designator_1(
                         bodovi
                        ) [Designator_1]
                      ) [VarFactor]
                    ) [FactorTerm]
                    MoreTermSingle(
                      MoreTermPart(
                        Addop(
                        ) [Addop]
                        FactorTerm(
                          VarFactor(
                            Designator_1(
                             jedan
                            ) [Designator_1]
                          ) [VarFactor]
                        ) [FactorTerm]
                      ) [MoreTermPart]
                    ) [MoreTermSingle]
                  ) [AddExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            DesignatorStatement(
              Assignment(
                Designator_1(
                 bodovi
                ) [Designator_1]
                TermExpr(
                  MulTerm(
                    VarFactor(
                      Designator_1(
                       bodovi
                      ) [Designator_1]
                    ) [VarFactor]
                    MoreFactorSingle(
                      MoreFactorPart(
                        Mulop(
                        ) [Mulop]
                        VarFactor(
                          Designator_1(
                           pet
                          ) [Designator_1]
                        ) [VarFactor]
                      ) [MoreFactorPart]
                    ) [MoreFactorSingle]
                  ) [MulTerm]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStatement]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          DesignatorStatement(
            Decrement(
              Designator_1(
               bodovi
              ) [Designator_1]
            ) [Decrement]
          ) [DesignatorStatement]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:05:17,878 - 
================SEMANTICKA OBRADA====================

INFO  22:05:17,882 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  22:05:17,882 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  22:05:17,882 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  22:05:17,882 - Deklarisan niz niz na liniji 9
INFO  22:05:17,882 - Deklarisan niz nizch na liniji 10
INFO  22:05:17,882 - Obradjuje se funkcija main na liniji 13
INFO  22:05:17,882 - Deklarisana promenljiva bodovi na liniji 14
INFO  22:05:17,882 - Deklarisana promenljiva bt na liniji 15
INFO  22:05:17,883 - 
================GENERISANJE KODA====================

INFO  22:05:17,888 - Parsiranje uspesno zavrseno!
INFO  22:06:03,302 - Kompajliranje ulaznog fajla test\program.mj
INFO  22:06:03,339 - #2 program
INFO  22:06:03,340 - #9 test301
INFO  22:06:03,340 - #5 const
INFO  22:06:03,341 - #9 int
INFO  22:06:03,341 - #9 nula
INFO  22:06:03,341 - #25 =
INFO  22:06:03,341 - #10 0
INFO  22:06:03,342 - #28 ;
INFO  22:06:03,342 - #5 const
INFO  22:06:03,343 - #9 int
INFO  22:06:03,343 - #9 jedan
INFO  22:06:03,343 - #25 =
INFO  22:06:03,343 - #10 1
INFO  22:06:03,343 - #28 ;
INFO  22:06:03,343 - #5 const
INFO  22:06:03,343 - #9 int
INFO  22:06:03,343 - #9 pet
INFO  22:06:03,343 - #25 =
INFO  22:06:03,343 - #10 5
INFO  22:06:03,343 - #28 ;
INFO  22:06:03,344 - #9 int
INFO  22:06:03,344 - #9 niz
INFO  22:06:03,344 - #23 [
INFO  22:06:03,344 - #24 ]
INFO  22:06:03,344 - #28 ;
INFO  22:06:03,344 - #9 char
INFO  22:06:03,345 - #9 nizch
INFO  22:06:03,345 - #23 [
INFO  22:06:03,345 - #24 ]
INFO  22:06:03,345 - #28 ;
INFO  22:06:03,345 - #21 {
INFO  22:06:03,345 - #9 int
INFO  22:06:03,346 - #9 main
INFO  22:06:03,346 - #30 (
INFO  22:06:03,346 - #31 )
INFO  22:06:03,347 - #9 int
INFO  22:06:03,347 - #9 bodovi
INFO  22:06:03,347 - #28 ;
INFO  22:06:03,347 - #9 bool
INFO  22:06:03,347 - #9 bt
INFO  22:06:03,347 - #28 ;
INFO  22:06:03,347 - #21 {
INFO  22:06:03,347 - #9 bodovi
INFO  22:06:03,348 - #25 =
INFO  22:06:03,348 - #10 0
INFO  22:06:03,348 - #28 ;
INFO  22:06:03,348 - #22 }
INFO  22:06:03,349 - #22 }
INFO  22:06:03,350 - 
================SINTAKSNO STABLO====================

INFO  22:06:03,351 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 bodovi
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        NoStmt(
        ) [NoStmt]
        MatchedStmt(
          DesignatorStatement(
            Assignment(
              Designator_1(
               bodovi
              ) [Designator_1]
              TermExpr(
                FactorTerm(
                  ValFactor(
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ValFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [Assignment]
          ) [DesignatorStatement]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:06:03,362 - 
================SEMANTICKA OBRADA====================

INFO  22:06:03,367 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  22:06:03,367 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  22:06:03,367 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  22:06:03,367 - Deklarisan niz niz na liniji 9
INFO  22:06:03,367 - Deklarisan niz nizch na liniji 10
INFO  22:06:03,368 - Obradjuje se funkcija main na liniji 13
INFO  22:06:03,368 - Deklarisana promenljiva bodovi na liniji 14
INFO  22:06:03,368 - Deklarisana promenljiva bt na liniji 15
INFO  22:06:03,369 - 
================GENERISANJE KODA====================

INFO  22:06:03,376 - Parsiranje uspesno zavrseno!
INFO  22:06:26,196 - Kompajliranje ulaznog fajla test\program.mj
INFO  22:06:26,229 - #2 program
INFO  22:06:26,229 - #9 test301
INFO  22:06:26,229 - #5 const
INFO  22:06:26,230 - #9 int
INFO  22:06:26,230 - #9 nula
INFO  22:06:26,231 - #25 =
INFO  22:06:26,231 - #10 0
INFO  22:06:26,231 - #28 ;
INFO  22:06:26,231 - #5 const
INFO  22:06:26,232 - #9 int
INFO  22:06:26,232 - #9 jedan
INFO  22:06:26,232 - #25 =
INFO  22:06:26,232 - #10 1
INFO  22:06:26,232 - #28 ;
INFO  22:06:26,232 - #5 const
INFO  22:06:26,232 - #9 int
INFO  22:06:26,233 - #9 pet
INFO  22:06:26,233 - #25 =
INFO  22:06:26,233 - #10 5
INFO  22:06:26,233 - #28 ;
INFO  22:06:26,233 - #9 int
INFO  22:06:26,233 - #9 niz
INFO  22:06:26,233 - #23 [
INFO  22:06:26,233 - #24 ]
INFO  22:06:26,233 - #28 ;
INFO  22:06:26,233 - #9 char
INFO  22:06:26,234 - #9 nizch
INFO  22:06:26,234 - #23 [
INFO  22:06:26,234 - #24 ]
INFO  22:06:26,234 - #28 ;
INFO  22:06:26,234 - #21 {
INFO  22:06:26,234 - #9 int
INFO  22:06:26,235 - #9 main
INFO  22:06:26,235 - #30 (
INFO  22:06:26,235 - #31 )
INFO  22:06:26,236 - #9 int
INFO  22:06:26,236 - #9 bodovi
INFO  22:06:26,236 - #28 ;
INFO  22:06:26,236 - #9 bool
INFO  22:06:26,237 - #9 bt
INFO  22:06:26,237 - #28 ;
INFO  22:06:26,237 - #21 {
INFO  22:06:26,237 - #9 bodovi
INFO  22:06:26,237 - #25 =
INFO  22:06:26,237 - #10 0
INFO  22:06:26,237 - #28 ;
INFO  22:06:26,238 - #9 bodovi
INFO  22:06:26,239 - #26 ++
INFO  22:06:26,239 - #28 ;
INFO  22:06:26,239 - #22 }
INFO  22:06:26,239 - #22 }
INFO  22:06:26,240 - 
================SINTAKSNO STABLO====================

INFO  22:06:26,241 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 bodovi
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          MatchedStmt(
            DesignatorStatement(
              Assignment(
                Designator_1(
                 bodovi
                ) [Designator_1]
                TermExpr(
                  FactorTerm(
                    ValFactor(
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ValFactor]
                  ) [FactorTerm]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStatement]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          DesignatorStatement(
            Increment(
              Designator_1(
               bodovi
              ) [Designator_1]
            ) [Increment]
          ) [DesignatorStatement]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:06:26,253 - 
================SEMANTICKA OBRADA====================

INFO  22:06:26,257 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  22:06:26,257 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  22:06:26,257 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  22:06:26,257 - Deklarisan niz niz na liniji 9
INFO  22:06:26,257 - Deklarisan niz nizch na liniji 10
INFO  22:06:26,257 - Obradjuje se funkcija main na liniji 13
INFO  22:06:26,258 - Deklarisana promenljiva bodovi na liniji 14
INFO  22:06:26,258 - Deklarisana promenljiva bt na liniji 15
INFO  22:06:26,258 - 
================GENERISANJE KODA====================

INFO  22:06:26,263 - Parsiranje uspesno zavrseno!
INFO  22:06:51,258 - Kompajliranje ulaznog fajla test\program.mj
INFO  22:06:51,292 - #2 program
INFO  22:06:51,293 - #9 test301
INFO  22:06:51,293 - #5 const
INFO  22:06:51,294 - #9 int
INFO  22:06:51,294 - #9 nula
INFO  22:06:51,294 - #25 =
INFO  22:06:51,294 - #10 0
INFO  22:06:51,294 - #28 ;
INFO  22:06:51,295 - #5 const
INFO  22:06:51,296 - #9 int
INFO  22:06:51,296 - #9 jedan
INFO  22:06:51,296 - #25 =
INFO  22:06:51,296 - #10 1
INFO  22:06:51,296 - #28 ;
INFO  22:06:51,296 - #5 const
INFO  22:06:51,296 - #9 int
INFO  22:06:51,296 - #9 pet
INFO  22:06:51,296 - #25 =
INFO  22:06:51,296 - #10 5
INFO  22:06:51,296 - #28 ;
INFO  22:06:51,296 - #9 int
INFO  22:06:51,296 - #9 niz
INFO  22:06:51,296 - #23 [
INFO  22:06:51,296 - #24 ]
INFO  22:06:51,296 - #28 ;
INFO  22:06:51,297 - #9 char
INFO  22:06:51,298 - #9 nizch
INFO  22:06:51,298 - #23 [
INFO  22:06:51,298 - #24 ]
INFO  22:06:51,298 - #28 ;
INFO  22:06:51,298 - #21 {
INFO  22:06:51,298 - #9 int
INFO  22:06:51,299 - #9 main
INFO  22:06:51,299 - #30 (
INFO  22:06:51,299 - #31 )
INFO  22:06:51,300 - #9 int
INFO  22:06:51,300 - #9 bodovi
INFO  22:06:51,300 - #28 ;
INFO  22:06:51,300 - #9 bool
INFO  22:06:51,300 - #9 bt
INFO  22:06:51,300 - #28 ;
INFO  22:06:51,300 - #21 {
INFO  22:06:51,300 - #9 bodovi
INFO  22:06:51,301 - #25 =
INFO  22:06:51,301 - #10 0
INFO  22:06:51,301 - #28 ;
INFO  22:06:51,301 - #9 bodovi
INFO  22:06:51,301 - #26 ++
INFO  22:06:51,302 - #28 ;
INFO  22:06:51,302 - #9 bodovi
INFO  22:06:51,302 - #25 =
INFO  22:06:51,302 - #9 bodovi
INFO  22:06:51,302 - #14 +
INFO  22:06:51,302 - #9 jedan
INFO  22:06:51,303 - #28 ;
INFO  22:06:51,304 - #22 }
INFO  22:06:51,304 - #22 }
INFO  22:06:51,306 - 
================SINTAKSNO STABLO====================

INFO  22:06:51,307 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 bodovi
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         0
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            DesignatorStatement(
              Increment(
                Designator_1(
                 bodovi
                ) [Designator_1]
              ) [Increment]
            ) [DesignatorStatement]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          DesignatorStatement(
            Assignment(
              Designator_1(
               bodovi
              ) [Designator_1]
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     bodovi
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      VarFactor(
                        Designator_1(
                         jedan
                        ) [Designator_1]
                      ) [VarFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [Assignment]
          ) [DesignatorStatement]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:06:51,316 - 
================SEMANTICKA OBRADA====================

INFO  22:06:51,320 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  22:06:51,320 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  22:06:51,320 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  22:06:51,320 - Deklarisan niz niz na liniji 9
INFO  22:06:51,320 - Deklarisan niz nizch na liniji 10
INFO  22:06:51,320 - Obradjuje se funkcija main na liniji 13
INFO  22:06:51,321 - Deklarisana promenljiva bodovi na liniji 14
INFO  22:06:51,321 - Deklarisana promenljiva bt na liniji 15
INFO  22:06:51,321 - 
================GENERISANJE KODA====================

INFO  22:06:51,328 - Parsiranje uspesno zavrseno!
INFO  22:07:40,820 - Kompajliranje ulaznog fajla test\program.mj
INFO  22:07:40,853 - #2 program
INFO  22:07:40,853 - #9 test301
INFO  22:07:40,853 - #5 const
INFO  22:07:40,854 - #9 int
INFO  22:07:40,854 - #9 nula
INFO  22:07:40,855 - #25 =
INFO  22:07:40,855 - #10 0
INFO  22:07:40,855 - #28 ;
INFO  22:07:40,856 - #5 const
INFO  22:07:40,857 - #9 int
INFO  22:07:40,857 - #9 jedan
INFO  22:07:40,857 - #25 =
INFO  22:07:40,857 - #10 1
INFO  22:07:40,857 - #28 ;
INFO  22:07:40,857 - #5 const
INFO  22:07:40,857 - #9 int
INFO  22:07:40,857 - #9 pet
INFO  22:07:40,857 - #25 =
INFO  22:07:40,857 - #10 5
INFO  22:07:40,857 - #28 ;
INFO  22:07:40,857 - #9 int
INFO  22:07:40,857 - #9 niz
INFO  22:07:40,857 - #23 [
INFO  22:07:40,858 - #24 ]
INFO  22:07:40,858 - #28 ;
INFO  22:07:40,858 - #9 char
INFO  22:07:40,859 - #9 nizch
INFO  22:07:40,859 - #23 [
INFO  22:07:40,859 - #24 ]
INFO  22:07:40,859 - #28 ;
INFO  22:07:40,859 - #21 {
INFO  22:07:40,859 - #9 int
INFO  22:07:40,860 - #9 main
INFO  22:07:40,860 - #30 (
INFO  22:07:40,861 - #31 )
INFO  22:07:40,861 - #9 int
INFO  22:07:40,862 - #9 bodovi
INFO  22:07:40,862 - #28 ;
INFO  22:07:40,862 - #9 bool
INFO  22:07:40,862 - #9 bt
INFO  22:07:40,862 - #28 ;
INFO  22:07:40,862 - #21 {
INFO  22:07:40,862 - #9 bodovi
INFO  22:07:40,863 - #25 =
INFO  22:07:40,863 - #10 0
INFO  22:07:40,863 - #28 ;
INFO  22:07:40,863 - #9 bodovi
INFO  22:07:40,864 - #26 ++
INFO  22:07:40,864 - #28 ;
INFO  22:07:40,864 - #9 bodovi
INFO  22:07:40,864 - #25 =
INFO  22:07:40,864 - #9 pet
INFO  22:07:40,864 - #14 +
INFO  22:07:40,864 - #9 jedan
INFO  22:07:40,865 - #28 ;
INFO  22:07:40,866 - #22 }
INFO  22:07:40,866 - #22 }
INFO  22:07:40,867 - 
================SINTAKSNO STABLO====================

INFO  22:07:40,868 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 bodovi
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         0
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            DesignatorStatement(
              Increment(
                Designator_1(
                 bodovi
                ) [Designator_1]
              ) [Increment]
            ) [DesignatorStatement]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          DesignatorStatement(
            Assignment(
              Designator_1(
               bodovi
              ) [Designator_1]
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     pet
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      VarFactor(
                        Designator_1(
                         jedan
                        ) [Designator_1]
                      ) [VarFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [Assignment]
          ) [DesignatorStatement]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:07:40,878 - 
================SEMANTICKA OBRADA====================

INFO  22:07:40,881 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  22:07:40,882 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  22:07:40,882 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  22:07:40,882 - Deklarisan niz niz na liniji 9
INFO  22:07:40,882 - Deklarisan niz nizch na liniji 10
INFO  22:07:40,882 - Obradjuje se funkcija main na liniji 13
INFO  22:07:40,883 - Deklarisana promenljiva bodovi na liniji 14
INFO  22:07:40,883 - Deklarisana promenljiva bt na liniji 15
INFO  22:07:40,884 - 
================GENERISANJE KODA====================

INFO  22:07:40,889 - Parsiranje uspesno zavrseno!
INFO  22:08:52,718 - Kompajliranje ulaznog fajla test\program.mj
INFO  22:08:52,752 - #2 program
INFO  22:08:52,752 - #9 test301
INFO  22:08:52,752 - #5 const
INFO  22:08:52,753 - #9 int
INFO  22:08:52,753 - #9 nula
INFO  22:08:52,754 - #25 =
INFO  22:08:52,754 - #10 0
INFO  22:08:52,754 - #28 ;
INFO  22:08:52,754 - #5 const
INFO  22:08:52,755 - #9 int
INFO  22:08:52,755 - #9 jedan
INFO  22:08:52,755 - #25 =
INFO  22:08:52,755 - #10 1
INFO  22:08:52,755 - #28 ;
INFO  22:08:52,755 - #5 const
INFO  22:08:52,755 - #9 int
INFO  22:08:52,756 - #9 pet
INFO  22:08:52,756 - #25 =
INFO  22:08:52,756 - #10 5
INFO  22:08:52,756 - #28 ;
INFO  22:08:52,756 - #9 int
INFO  22:08:52,756 - #9 niz
INFO  22:08:52,756 - #23 [
INFO  22:08:52,756 - #24 ]
INFO  22:08:52,756 - #28 ;
INFO  22:08:52,756 - #9 char
INFO  22:08:52,757 - #9 nizch
INFO  22:08:52,757 - #23 [
INFO  22:08:52,757 - #24 ]
INFO  22:08:52,757 - #28 ;
INFO  22:08:52,757 - #21 {
INFO  22:08:52,757 - #9 int
INFO  22:08:52,758 - #9 main
INFO  22:08:52,758 - #30 (
INFO  22:08:52,758 - #31 )
INFO  22:08:52,759 - #9 int
INFO  22:08:52,759 - #9 bodovi
INFO  22:08:52,759 - #28 ;
INFO  22:08:52,760 - #9 int
INFO  22:08:52,760 - #9 bb
INFO  22:08:52,760 - #28 ;
INFO  22:08:52,760 - #9 bool
INFO  22:08:52,760 - #9 bt
INFO  22:08:52,760 - #28 ;
INFO  22:08:52,760 - #21 {
INFO  22:08:52,760 - #9 bodovi
INFO  22:08:52,761 - #25 =
INFO  22:08:52,761 - #10 0
INFO  22:08:52,761 - #28 ;
INFO  22:08:52,762 - #9 bodovi
INFO  22:08:52,762 - #26 ++
INFO  22:08:52,762 - #28 ;
INFO  22:08:52,762 - #9 bodovi
INFO  22:08:52,762 - #25 =
INFO  22:08:52,762 - #9 bb
INFO  22:08:52,763 - #14 +
INFO  22:08:52,763 - #9 jedan
INFO  22:08:52,763 - #28 ;
INFO  22:08:52,764 - #22 }
INFO  22:08:52,764 - #22 }
INFO  22:08:52,766 - 
================SINTAKSNO STABLO====================

INFO  22:08:52,767 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgVar(
              VarDecl(
                Type(
                 int
                ) [Type]
                VarDecl_0(
                  Variable(
                   bodovi
                  ) [Variable]
                ) [VarDecl_0]
              ) [VarDecl]
            ) [ProgVar]
          ) [VarDeclarations]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 bb
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         0
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            DesignatorStatement(
              Increment(
                Designator_1(
                 bodovi
                ) [Designator_1]
              ) [Increment]
            ) [DesignatorStatement]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          DesignatorStatement(
            Assignment(
              Designator_1(
               bodovi
              ) [Designator_1]
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     bb
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      VarFactor(
                        Designator_1(
                         jedan
                        ) [Designator_1]
                      ) [VarFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [Assignment]
          ) [DesignatorStatement]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:08:52,780 - 
================SEMANTICKA OBRADA====================

INFO  22:08:52,785 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  22:08:52,785 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  22:08:52,785 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  22:08:52,785 - Deklarisan niz niz na liniji 9
INFO  22:08:52,785 - Deklarisan niz nizch na liniji 10
INFO  22:08:52,785 - Obradjuje se funkcija main na liniji 13
INFO  22:08:52,785 - Deklarisana promenljiva bodovi na liniji 14
INFO  22:08:52,785 - Deklarisana promenljiva bb na liniji 15
INFO  22:08:52,785 - Deklarisana promenljiva bt na liniji 16
INFO  22:08:52,786 - 
================GENERISANJE KODA====================

INFO  22:08:52,791 - Parsiranje uspesno zavrseno!
INFO  22:12:59,359 - Kompajliranje ulaznog fajla test\program.mj
INFO  22:12:59,394 - #2 program
INFO  22:12:59,394 - #9 test301
INFO  22:12:59,394 - #5 const
INFO  22:12:59,395 - #9 int
INFO  22:12:59,395 - #9 nula
INFO  22:12:59,395 - #25 =
INFO  22:12:59,395 - #10 0
INFO  22:12:59,395 - #28 ;
INFO  22:12:59,396 - #5 const
INFO  22:12:59,397 - #9 int
INFO  22:12:59,397 - #9 jedan
INFO  22:12:59,397 - #25 =
INFO  22:12:59,397 - #10 1
INFO  22:12:59,397 - #28 ;
INFO  22:12:59,397 - #5 const
INFO  22:12:59,397 - #9 int
INFO  22:12:59,397 - #9 pet
INFO  22:12:59,397 - #25 =
INFO  22:12:59,397 - #10 5
INFO  22:12:59,397 - #28 ;
INFO  22:12:59,397 - #9 int
INFO  22:12:59,397 - #9 niz
INFO  22:12:59,397 - #23 [
INFO  22:12:59,397 - #24 ]
INFO  22:12:59,397 - #28 ;
INFO  22:12:59,398 - #9 char
INFO  22:12:59,399 - #9 nizch
INFO  22:12:59,399 - #23 [
INFO  22:12:59,399 - #24 ]
INFO  22:12:59,399 - #28 ;
INFO  22:12:59,399 - #21 {
INFO  22:12:59,399 - #9 int
INFO  22:12:59,400 - #9 main
INFO  22:12:59,400 - #30 (
INFO  22:12:59,401 - #31 )
INFO  22:12:59,401 - #9 int
INFO  22:12:59,401 - #9 bodovi
INFO  22:12:59,401 - #28 ;
INFO  22:12:59,401 - #9 int
INFO  22:12:59,401 - #9 bb
INFO  22:12:59,401 - #28 ;
INFO  22:12:59,402 - #9 bool
INFO  22:12:59,402 - #9 bt
INFO  22:12:59,402 - #28 ;
INFO  22:12:59,402 - #21 {
INFO  22:12:59,402 - #9 bodovi
INFO  22:12:59,402 - #25 =
INFO  22:12:59,402 - #10 0
INFO  22:12:59,403 - #28 ;
INFO  22:12:59,403 - #9 bodovi
INFO  22:12:59,403 - #26 ++
INFO  22:12:59,403 - #28 ;
INFO  22:12:59,404 - #3 print
INFO  22:12:59,404 - #30 (
INFO  22:12:59,404 - #9 bodovi
INFO  22:12:59,404 - #31 )
INFO  22:12:59,404 - #28 ;
INFO  22:12:59,404 - #9 bodovi
INFO  22:12:59,404 - #25 =
INFO  22:12:59,404 - #9 bb
INFO  22:12:59,404 - #14 +
INFO  22:12:59,404 - #9 jedan
INFO  22:12:59,405 - #28 ;
INFO  22:12:59,406 - #22 }
INFO  22:12:59,406 - #22 }
INFO  22:12:59,407 - 
================SINTAKSNO STABLO====================

INFO  22:12:59,408 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgVar(
              VarDecl(
                Type(
                 int
                ) [Type]
                VarDecl_0(
                  Variable(
                   bodovi
                  ) [Variable]
                ) [VarDecl_0]
              ) [VarDecl]
            ) [ProgVar]
          ) [VarDeclarations]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 bb
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                DesignatorStatement(
                  Assignment(
                    Designator_1(
                     bodovi
                    ) [Designator_1]
                    TermExpr(
                      FactorTerm(
                        ValFactor(
                          NumConst(
                           0
                          ) [NumConst]
                        ) [ValFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStatement]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Increment(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                ) [Increment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     bodovi
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          DesignatorStatement(
            Assignment(
              Designator_1(
               bodovi
              ) [Designator_1]
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     bb
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      VarFactor(
                        Designator_1(
                         jedan
                        ) [Designator_1]
                      ) [VarFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [Assignment]
          ) [DesignatorStatement]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:12:59,417 - 
================SEMANTICKA OBRADA====================

INFO  22:12:59,421 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  22:12:59,421 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  22:12:59,421 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  22:12:59,421 - Deklarisan niz niz na liniji 9
INFO  22:12:59,421 - Deklarisan niz nizch na liniji 10
INFO  22:12:59,421 - Obradjuje se funkcija main na liniji 13
INFO  22:12:59,421 - Deklarisana promenljiva bodovi na liniji 14
INFO  22:12:59,421 - Deklarisana promenljiva bb na liniji 15
INFO  22:12:59,421 - Deklarisana promenljiva bt na liniji 16
INFO  22:12:59,422 - 
================GENERISANJE KODA====================

INFO  22:12:59,428 - Parsiranje uspesno zavrseno!
INFO  22:13:14,356 - Kompajliranje ulaznog fajla test\program.mj
INFO  22:13:14,391 - #2 program
INFO  22:13:14,391 - #9 test301
INFO  22:13:14,391 - #5 const
INFO  22:13:14,392 - #9 int
INFO  22:13:14,392 - #9 nula
INFO  22:13:14,392 - #25 =
INFO  22:13:14,393 - #10 0
INFO  22:13:14,393 - #28 ;
INFO  22:13:14,393 - #5 const
INFO  22:13:14,394 - #9 int
INFO  22:13:14,394 - #9 jedan
INFO  22:13:14,394 - #25 =
INFO  22:13:14,394 - #10 1
INFO  22:13:14,394 - #28 ;
INFO  22:13:14,394 - #5 const
INFO  22:13:14,395 - #9 int
INFO  22:13:14,395 - #9 pet
INFO  22:13:14,395 - #25 =
INFO  22:13:14,395 - #10 5
INFO  22:13:14,395 - #28 ;
INFO  22:13:14,395 - #9 int
INFO  22:13:14,395 - #9 niz
INFO  22:13:14,395 - #23 [
INFO  22:13:14,395 - #24 ]
INFO  22:13:14,395 - #28 ;
INFO  22:13:14,395 - #9 char
INFO  22:13:14,396 - #9 nizch
INFO  22:13:14,396 - #23 [
INFO  22:13:14,396 - #24 ]
INFO  22:13:14,396 - #28 ;
INFO  22:13:14,396 - #21 {
INFO  22:13:14,396 - #9 int
INFO  22:13:14,397 - #9 main
INFO  22:13:14,397 - #30 (
INFO  22:13:14,397 - #31 )
INFO  22:13:14,398 - #9 int
INFO  22:13:14,398 - #9 bodovi
INFO  22:13:14,398 - #28 ;
INFO  22:13:14,398 - #9 int
INFO  22:13:14,398 - #9 bb
INFO  22:13:14,398 - #28 ;
INFO  22:13:14,398 - #9 bool
INFO  22:13:14,398 - #9 bt
INFO  22:13:14,398 - #28 ;
INFO  22:13:14,398 - #21 {
INFO  22:13:14,398 - #9 bodovi
INFO  22:13:14,399 - #25 =
INFO  22:13:14,399 - #10 0
INFO  22:13:14,399 - #28 ;
INFO  22:13:14,400 - #9 bodovi
INFO  22:13:14,400 - #26 ++
INFO  22:13:14,400 - #28 ;
INFO  22:13:14,400 - #3 print
INFO  22:13:14,400 - #30 (
INFO  22:13:14,401 - #9 bodovi
INFO  22:13:14,401 - #31 )
INFO  22:13:14,401 - #28 ;
INFO  22:13:14,401 - #22 }
INFO  22:13:14,401 - #22 }
INFO  22:13:14,402 - 
================SINTAKSNO STABLO====================

INFO  22:13:14,403 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgVar(
              VarDecl(
                Type(
                 int
                ) [Type]
                VarDecl_0(
                  Variable(
                   bodovi
                  ) [Variable]
                ) [VarDecl_0]
              ) [VarDecl]
            ) [ProgVar]
          ) [VarDeclarations]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 bb
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         0
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            DesignatorStatement(
              Increment(
                Designator_1(
                 bodovi
                ) [Designator_1]
              ) [Increment]
            ) [DesignatorStatement]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              FactorTerm(
                VarFactor(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                ) [VarFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:13:14,413 - 
================SEMANTICKA OBRADA====================

INFO  22:13:14,417 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  22:13:14,417 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  22:13:14,417 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  22:13:14,417 - Deklarisan niz niz na liniji 9
INFO  22:13:14,417 - Deklarisan niz nizch na liniji 10
INFO  22:13:14,417 - Obradjuje se funkcija main na liniji 13
INFO  22:13:14,418 - Deklarisana promenljiva bodovi na liniji 14
INFO  22:13:14,418 - Deklarisana promenljiva bb na liniji 15
INFO  22:13:14,418 - Deklarisana promenljiva bt na liniji 16
INFO  22:13:14,419 - 
================GENERISANJE KODA====================

INFO  22:13:14,425 - Parsiranje uspesno zavrseno!
INFO  22:16:05,922 - Kompajliranje ulaznog fajla test\program.mj
INFO  22:16:05,957 - #2 program
INFO  22:16:05,957 - #9 test301
INFO  22:16:05,957 - #5 const
INFO  22:16:05,958 - #9 int
INFO  22:16:05,959 - #9 nula
INFO  22:16:05,959 - #25 =
INFO  22:16:05,959 - #10 0
INFO  22:16:05,959 - #28 ;
INFO  22:16:05,960 - #5 const
INFO  22:16:05,960 - #9 int
INFO  22:16:05,961 - #9 jedan
INFO  22:16:05,961 - #25 =
INFO  22:16:05,961 - #10 1
INFO  22:16:05,961 - #28 ;
INFO  22:16:05,961 - #5 const
INFO  22:16:05,961 - #9 int
INFO  22:16:05,961 - #9 pet
INFO  22:16:05,961 - #25 =
INFO  22:16:05,961 - #10 5
INFO  22:16:05,961 - #28 ;
INFO  22:16:05,961 - #9 int
INFO  22:16:05,961 - #9 niz
INFO  22:16:05,961 - #23 [
INFO  22:16:05,961 - #24 ]
INFO  22:16:05,961 - #28 ;
INFO  22:16:05,962 - #9 char
INFO  22:16:05,962 - #9 nizch
INFO  22:16:05,962 - #23 [
INFO  22:16:05,962 - #24 ]
INFO  22:16:05,962 - #28 ;
INFO  22:16:05,963 - #21 {
INFO  22:16:05,963 - #9 int
INFO  22:16:05,963 - #9 main
INFO  22:16:05,963 - #30 (
INFO  22:16:05,964 - #31 )
INFO  22:16:05,964 - #9 int
INFO  22:16:05,964 - #9 bodovi
INFO  22:16:05,965 - #28 ;
INFO  22:16:05,965 - #9 bool
INFO  22:16:05,965 - #9 bt
INFO  22:16:05,965 - #28 ;
INFO  22:16:05,965 - #21 {
INFO  22:16:05,965 - #9 bodovi
INFO  22:16:05,965 - #25 =
INFO  22:16:05,966 - #10 0
INFO  22:16:05,966 - #28 ;
INFO  22:16:05,966 - #9 bodovi
INFO  22:16:05,966 - #26 ++
INFO  22:16:05,966 - #28 ;
INFO  22:16:05,967 - #22 }
INFO  22:16:05,967 - #22 }
INFO  22:16:05,968 - 
================SINTAKSNO STABLO====================

INFO  22:16:05,969 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 bodovi
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          MatchedStmt(
            DesignatorStatement(
              Assignment(
                Designator_1(
                 bodovi
                ) [Designator_1]
                TermExpr(
                  FactorTerm(
                    ValFactor(
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ValFactor]
                  ) [FactorTerm]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStatement]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          DesignatorStatement(
            Increment(
              Designator_1(
               bodovi
              ) [Designator_1]
            ) [Increment]
          ) [DesignatorStatement]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:16:05,983 - 
================SEMANTICKA OBRADA====================

INFO  22:16:05,986 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  22:16:05,986 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  22:16:05,986 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  22:16:05,987 - Deklarisan niz niz na liniji 9
INFO  22:16:05,987 - Deklarisan niz nizch na liniji 10
INFO  22:16:05,987 - Obradjuje se funkcija main na liniji 13
INFO  22:16:05,987 - Deklarisana promenljiva bodovi na liniji 14
INFO  22:16:05,987 - Deklarisana promenljiva bt na liniji 15
INFO  22:16:05,988 - 
================GENERISANJE KODA====================

INFO  22:16:05,992 - Parsiranje uspesno zavrseno!
INFO  22:16:46,975 - Kompajliranje ulaznog fajla test\program.mj
INFO  22:16:47,011 - #2 program
INFO  22:16:47,011 - #9 test301
INFO  22:16:47,012 - #5 const
INFO  22:16:47,012 - #9 int
INFO  22:16:47,013 - #9 nula
INFO  22:16:47,013 - #25 =
INFO  22:16:47,013 - #10 0
INFO  22:16:47,013 - #28 ;
INFO  22:16:47,014 - #5 const
INFO  22:16:47,015 - #9 int
INFO  22:16:47,015 - #9 jedan
INFO  22:16:47,015 - #25 =
INFO  22:16:47,015 - #10 1
INFO  22:16:47,015 - #28 ;
INFO  22:16:47,015 - #5 const
INFO  22:16:47,015 - #9 int
INFO  22:16:47,015 - #9 pet
INFO  22:16:47,015 - #25 =
INFO  22:16:47,015 - #10 5
INFO  22:16:47,015 - #28 ;
INFO  22:16:47,015 - #9 int
INFO  22:16:47,015 - #9 niz
INFO  22:16:47,015 - #23 [
INFO  22:16:47,016 - #24 ]
INFO  22:16:47,016 - #28 ;
INFO  22:16:47,016 - #9 char
INFO  22:16:47,017 - #9 nizch
INFO  22:16:47,017 - #23 [
INFO  22:16:47,017 - #24 ]
INFO  22:16:47,017 - #28 ;
INFO  22:16:47,017 - #21 {
INFO  22:16:47,017 - #9 int
INFO  22:16:47,018 - #9 main
INFO  22:16:47,018 - #30 (
INFO  22:16:47,019 - #31 )
INFO  22:16:47,019 - #9 int
INFO  22:16:47,019 - #9 bodovi
INFO  22:16:47,019 - #28 ;
INFO  22:16:47,020 - #9 bool
INFO  22:16:47,020 - #9 bt
INFO  22:16:47,020 - #28 ;
INFO  22:16:47,020 - #21 {
INFO  22:16:47,020 - #9 bodovi
INFO  22:16:47,020 - #25 =
INFO  22:16:47,020 - #10 0
INFO  22:16:47,021 - #28 ;
INFO  22:16:47,021 - #9 bodovi
INFO  22:16:47,021 - #26 ++
INFO  22:16:47,021 - #28 ;
INFO  22:16:47,022 - #3 print
INFO  22:16:47,022 - #30 (
INFO  22:16:47,022 - #9 bodovi
INFO  22:16:47,022 - #31 )
INFO  22:16:47,022 - #28 ;
INFO  22:16:47,022 - #22 }
INFO  22:16:47,022 - #22 }
INFO  22:16:47,024 - 
================SINTAKSNO STABLO====================

INFO  22:16:47,025 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 bodovi
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         0
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            DesignatorStatement(
              Increment(
                Designator_1(
                 bodovi
                ) [Designator_1]
              ) [Increment]
            ) [DesignatorStatement]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              FactorTerm(
                VarFactor(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                ) [VarFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:16:47,035 - 
================SEMANTICKA OBRADA====================

INFO  22:16:47,039 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  22:16:47,039 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  22:16:47,039 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  22:16:47,039 - Deklarisan niz niz na liniji 9
INFO  22:16:47,039 - Deklarisan niz nizch na liniji 10
INFO  22:16:47,040 - Obradjuje se funkcija main na liniji 13
INFO  22:16:47,040 - Deklarisana promenljiva bodovi na liniji 14
INFO  22:16:47,040 - Deklarisana promenljiva bt na liniji 15
INFO  22:16:47,040 - 
================GENERISANJE KODA====================

INFO  22:16:47,045 - Parsiranje uspesno zavrseno!
INFO  22:18:00,303 - Kompajliranje ulaznog fajla test\program.mj
INFO  22:18:00,337 - #2 program
INFO  22:18:00,338 - #9 test301
INFO  22:18:00,338 - #5 const
INFO  22:18:00,338 - #9 int
INFO  22:18:00,339 - #9 nula
INFO  22:18:00,339 - #25 =
INFO  22:18:00,339 - #10 0
INFO  22:18:00,339 - #28 ;
INFO  22:18:00,340 - #5 const
INFO  22:18:00,341 - #9 int
INFO  22:18:00,341 - #9 jedan
INFO  22:18:00,341 - #25 =
INFO  22:18:00,341 - #10 1
INFO  22:18:00,341 - #28 ;
INFO  22:18:00,341 - #5 const
INFO  22:18:00,341 - #9 int
INFO  22:18:00,341 - #9 pet
INFO  22:18:00,341 - #25 =
INFO  22:18:00,341 - #10 5
INFO  22:18:00,341 - #28 ;
INFO  22:18:00,341 - #9 int
INFO  22:18:00,341 - #9 niz
INFO  22:18:00,341 - #23 [
INFO  22:18:00,341 - #24 ]
INFO  22:18:00,341 - #28 ;
INFO  22:18:00,342 - #9 char
INFO  22:18:00,343 - #9 nizch
INFO  22:18:00,343 - #23 [
INFO  22:18:00,343 - #24 ]
INFO  22:18:00,343 - #28 ;
INFO  22:18:00,343 - #21 {
INFO  22:18:00,343 - #9 int
INFO  22:18:00,344 - #9 main
INFO  22:18:00,344 - #30 (
INFO  22:18:00,344 - #31 )
INFO  22:18:00,345 - #9 int
INFO  22:18:00,345 - #9 bodovi
INFO  22:18:00,345 - #28 ;
INFO  22:18:00,345 - #9 bool
INFO  22:18:00,345 - #9 bt
INFO  22:18:00,345 - #28 ;
INFO  22:18:00,345 - #21 {
INFO  22:18:00,345 - #9 bodovi
INFO  22:18:00,346 - #25 =
INFO  22:18:00,346 - #10 0
INFO  22:18:00,347 - #28 ;
INFO  22:18:00,347 - #9 bodovi
INFO  22:18:00,348 - #26 ++
INFO  22:18:00,348 - #28 ;
INFO  22:18:00,348 - #3 print
INFO  22:18:00,348 - #30 (
INFO  22:18:00,348 - #10 5
INFO  22:18:00,348 - #31 )
INFO  22:18:00,348 - #28 ;
INFO  22:18:00,348 - #22 }
INFO  22:18:00,348 - #22 }
INFO  22:18:00,350 - 
================SINTAKSNO STABLO====================

INFO  22:18:00,351 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 bodovi
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         0
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            DesignatorStatement(
              Increment(
                Designator_1(
                 bodovi
                ) [Designator_1]
              ) [Increment]
            ) [DesignatorStatement]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              FactorTerm(
                ValFactor(
                  NumConst(
                   5
                  ) [NumConst]
                ) [ValFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:18:00,361 - 
================SEMANTICKA OBRADA====================

INFO  22:18:00,364 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  22:18:00,364 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  22:18:00,365 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  22:18:00,365 - Deklarisan niz niz na liniji 9
INFO  22:18:00,365 - Deklarisan niz nizch na liniji 10
INFO  22:18:00,365 - Obradjuje se funkcija main na liniji 13
INFO  22:18:00,365 - Deklarisana promenljiva bodovi na liniji 14
INFO  22:18:00,365 - Deklarisana promenljiva bt na liniji 15
INFO  22:18:00,366 - 
================GENERISANJE KODA====================

INFO  22:18:00,370 - Parsiranje uspesno zavrseno!
INFO  22:18:25,104 - Kompajliranje ulaznog fajla test\program.mj
INFO  22:18:25,136 - #2 program
INFO  22:18:25,136 - #9 test301
INFO  22:18:25,136 - #5 const
INFO  22:18:25,137 - #9 int
INFO  22:18:25,137 - #9 nula
INFO  22:18:25,138 - #25 =
INFO  22:18:25,138 - #10 0
INFO  22:18:25,138 - #28 ;
INFO  22:18:25,139 - #5 const
INFO  22:18:25,139 - #9 int
INFO  22:18:25,139 - #9 jedan
INFO  22:18:25,140 - #25 =
INFO  22:18:25,140 - #10 1
INFO  22:18:25,140 - #28 ;
INFO  22:18:25,140 - #5 const
INFO  22:18:25,140 - #9 int
INFO  22:18:25,140 - #9 pet
INFO  22:18:25,140 - #25 =
INFO  22:18:25,140 - #10 5
INFO  22:18:25,140 - #28 ;
INFO  22:18:25,140 - #9 int
INFO  22:18:25,140 - #9 niz
INFO  22:18:25,140 - #23 [
INFO  22:18:25,140 - #24 ]
INFO  22:18:25,140 - #28 ;
INFO  22:18:25,140 - #9 char
INFO  22:18:25,141 - #9 nizch
INFO  22:18:25,141 - #23 [
INFO  22:18:25,141 - #24 ]
INFO  22:18:25,141 - #28 ;
INFO  22:18:25,141 - #21 {
INFO  22:18:25,141 - #9 int
INFO  22:18:25,142 - #9 main
INFO  22:18:25,142 - #30 (
INFO  22:18:25,142 - #31 )
INFO  22:18:25,143 - #9 int
INFO  22:18:25,143 - #9 bodovi
INFO  22:18:25,143 - #28 ;
INFO  22:18:25,143 - #9 bool
INFO  22:18:25,143 - #9 bt
INFO  22:18:25,143 - #28 ;
INFO  22:18:25,143 - #21 {
INFO  22:18:25,143 - #9 bodovi
INFO  22:18:25,144 - #25 =
INFO  22:18:25,144 - #10 0
INFO  22:18:25,144 - #28 ;
INFO  22:18:25,145 - #9 bodovi
INFO  22:18:25,145 - #26 ++
INFO  22:18:25,145 - #28 ;
INFO  22:18:25,145 - #3 print
INFO  22:18:25,146 - #30 (
INFO  22:18:25,146 - #9 bodovi
INFO  22:18:25,146 - #31 )
INFO  22:18:25,146 - #28 ;
INFO  22:18:25,146 - #22 }
INFO  22:18:25,146 - #22 }
INFO  22:18:25,148 - 
================SINTAKSNO STABLO====================

INFO  22:18:25,149 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 bodovi
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         0
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            DesignatorStatement(
              Increment(
                Designator_1(
                 bodovi
                ) [Designator_1]
              ) [Increment]
            ) [DesignatorStatement]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              FactorTerm(
                VarFactor(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                ) [VarFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:18:25,159 - 
================SEMANTICKA OBRADA====================

INFO  22:18:25,162 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  22:18:25,162 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  22:18:25,162 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  22:18:25,162 - Deklarisan niz niz na liniji 9
INFO  22:18:25,163 - Deklarisan niz nizch na liniji 10
INFO  22:18:25,163 - Obradjuje se funkcija main na liniji 13
INFO  22:18:25,163 - Deklarisana promenljiva bodovi na liniji 14
INFO  22:18:25,163 - Deklarisana promenljiva bt na liniji 15
INFO  22:18:25,164 - 
================GENERISANJE KODA====================

INFO  22:18:25,171 - Parsiranje uspesno zavrseno!
INFO  22:19:04,951 - Kompajliranje ulaznog fajla test\program.mj
INFO  22:19:04,987 - #2 program
INFO  22:19:04,987 - #9 test301
INFO  22:19:04,987 - #5 const
INFO  22:19:04,988 - #9 int
INFO  22:19:04,988 - #9 nula
INFO  22:19:04,988 - #25 =
INFO  22:19:04,988 - #10 0
INFO  22:19:04,989 - #28 ;
INFO  22:19:04,989 - #5 const
INFO  22:19:04,990 - #9 int
INFO  22:19:04,991 - #9 jedan
INFO  22:19:04,991 - #25 =
INFO  22:19:04,991 - #10 1
INFO  22:19:04,991 - #28 ;
INFO  22:19:04,991 - #5 const
INFO  22:19:04,991 - #9 int
INFO  22:19:04,991 - #9 pet
INFO  22:19:04,991 - #25 =
INFO  22:19:04,991 - #10 5
INFO  22:19:04,991 - #28 ;
INFO  22:19:04,991 - #9 int
INFO  22:19:04,991 - #9 niz
INFO  22:19:04,991 - #23 [
INFO  22:19:04,991 - #24 ]
INFO  22:19:04,991 - #28 ;
INFO  22:19:04,992 - #9 char
INFO  22:19:04,992 - #9 nizch
INFO  22:19:04,992 - #23 [
INFO  22:19:04,992 - #24 ]
INFO  22:19:04,993 - #28 ;
INFO  22:19:04,993 - #21 {
INFO  22:19:04,993 - #9 int
INFO  22:19:04,993 - #9 main
INFO  22:19:04,993 - #30 (
INFO  22:19:04,994 - #31 )
INFO  22:19:04,994 - #9 int
INFO  22:19:04,994 - #9 bodovi
INFO  22:19:04,994 - #25 =
ERROR 22:19:04,994 - 
Sintaksna greska na liniji 14
INFO  22:19:04,994 - #10 0
INFO  22:19:04,995 - #28 ;
INFO  22:19:04,995 - #9 bool
INFO  22:19:04,995 - #9 bt
INFO  22:19:04,995 - #28 ;
DEBUG 22:19:04,995 - Izvrsen oporavak od greske (varDecl) do ; 
INFO  22:19:04,996 - #21 {
INFO  22:19:04,996 - #9 bodovi
INFO  22:19:04,996 - #25 =
INFO  22:19:04,996 - #10 0
INFO  22:19:04,996 - #28 ;
INFO  22:19:04,997 - #3 print
INFO  22:19:04,997 - #30 (
INFO  22:19:04,997 - #9 bodovi
INFO  22:19:04,997 - #31 )
INFO  22:19:04,997 - #28 ;
INFO  22:19:04,997 - #22 }
INFO  22:19:04,997 - #22 }
INFO  22:19:04,999 - 
================SINTAKSNO STABLO====================

INFO  22:19:04,999 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        ErrorVarSemi(
        ) [ErrorVarSemi]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          MatchedStmt(
            DesignatorStatement(
              Assignment(
                Designator_1(
                 bodovi
                ) [Designator_1]
                TermExpr(
                  FactorTerm(
                    ValFactor(
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ValFactor]
                  ) [FactorTerm]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStatement]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              FactorTerm(
                VarFactor(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                ) [VarFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:19:05,010 - 
================SEMANTICKA OBRADA====================

INFO  22:19:05,014 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  22:19:05,014 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  22:19:05,014 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  22:19:05,014 - Deklarisan niz niz na liniji 9
INFO  22:19:05,014 - Deklarisan niz nizch na liniji 10
INFO  22:19:05,014 - Obradjuje se funkcija main na liniji 13
INFO  22:19:05,015 - Deklarisana promenljiva bt na liniji 15
ERROR 22:19:05,015 - Semanticka greska - ime bodovi nije deklarisano na liniji 17
ERROR 22:19:05,015 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 22:19:05,015 - Semanticka greska - ime bodovi nije deklarisano na liniji 20
ERROR 22:19:05,015 - Semanticka greska na liniji 20: Operand instrukcije PRINT mora biti char ili int tipa, a on je rs.etf.pp1.symboltable.concepts.Struct@300ffa5d
ERROR 22:19:05,016 - Ulazni fajl [test/program.mj] ima semantickih gresaka!
Parsiranje nije uspesno zavrseno!
INFO  22:19:22,917 - Kompajliranje ulaznog fajla test\program.mj
INFO  22:19:22,952 - #2 program
INFO  22:19:22,952 - #9 test301
INFO  22:19:22,952 - #5 const
INFO  22:19:22,953 - #9 int
INFO  22:19:22,953 - #9 nula
INFO  22:19:22,953 - #25 =
INFO  22:19:22,953 - #10 0
INFO  22:19:22,953 - #28 ;
INFO  22:19:22,954 - #5 const
INFO  22:19:22,954 - #9 int
INFO  22:19:22,955 - #9 jedan
INFO  22:19:22,955 - #25 =
INFO  22:19:22,955 - #10 1
INFO  22:19:22,955 - #28 ;
INFO  22:19:22,955 - #5 const
INFO  22:19:22,955 - #9 int
INFO  22:19:22,955 - #9 pet
INFO  22:19:22,955 - #25 =
INFO  22:19:22,955 - #10 5
INFO  22:19:22,955 - #28 ;
INFO  22:19:22,955 - #9 int
INFO  22:19:22,955 - #9 niz
INFO  22:19:22,955 - #23 [
INFO  22:19:22,955 - #24 ]
INFO  22:19:22,955 - #28 ;
INFO  22:19:22,956 - #9 char
INFO  22:19:22,956 - #9 nizch
INFO  22:19:22,956 - #23 [
INFO  22:19:22,956 - #24 ]
INFO  22:19:22,956 - #28 ;
INFO  22:19:22,957 - #21 {
INFO  22:19:22,957 - #9 int
INFO  22:19:22,957 - #9 main
INFO  22:19:22,957 - #30 (
INFO  22:19:22,958 - #31 )
INFO  22:19:22,958 - #5 const
INFO  22:19:22,958 - #9 int
INFO  22:19:22,958 - #9 bodovi
INFO  22:19:22,958 - #25 =
INFO  22:19:22,958 - #10 0
INFO  22:19:22,958 - #28 ;
INFO  22:19:22,958 - #9 bool
INFO  22:19:22,958 - #9 bt
INFO  22:19:22,959 - #28 ;
INFO  22:19:22,959 - #21 {
INFO  22:19:22,959 - #9 bodovi
INFO  22:19:22,959 - #25 =
INFO  22:19:22,959 - #10 0
INFO  22:19:22,960 - #28 ;
INFO  22:19:22,960 - #9 bodovi
INFO  22:19:22,961 - #26 ++
INFO  22:19:22,961 - #28 ;
INFO  22:19:22,961 - #3 print
INFO  22:19:22,961 - #30 (
INFO  22:19:22,961 - #9 bodovi
INFO  22:19:22,961 - #31 )
INFO  22:19:22,961 - #28 ;
INFO  22:19:22,961 - #22 }
INFO  22:19:22,961 - #22 }
INFO  22:19:22,962 - 
================SINTAKSNO STABLO====================

INFO  22:19:22,963 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 bodovi
                  NumConst(
                   0
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         0
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            DesignatorStatement(
              Increment(
                Designator_1(
                 bodovi
                ) [Designator_1]
              ) [Increment]
            ) [DesignatorStatement]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              FactorTerm(
                VarFactor(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                ) [VarFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:19:22,974 - 
================SEMANTICKA OBRADA====================

INFO  22:19:22,979 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  22:19:22,979 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  22:19:22,979 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  22:19:22,979 - Deklarisan niz niz na liniji 9
INFO  22:19:22,980 - Deklarisan niz nizch na liniji 10
INFO  22:19:22,980 - Obradjuje se funkcija main na liniji 13
INFO  22:19:22,980 - Deklarisana konstanta bodovi sa vrednoscu 0 na liniji 14
INFO  22:19:22,980 - Deklarisana promenljiva bt na liniji 15
INFO  22:19:22,981 - 
================GENERISANJE KODA====================

INFO  22:19:22,985 - Parsiranje uspesno zavrseno!
INFO  22:20:13,649 - Kompajliranje ulaznog fajla test\program.mj
INFO  22:20:13,681 - #2 program
INFO  22:20:13,681 - #9 test301
INFO  22:20:13,681 - #5 const
INFO  22:20:13,682 - #9 int
INFO  22:20:13,682 - #9 nula
INFO  22:20:13,683 - #25 =
INFO  22:20:13,683 - #10 0
INFO  22:20:13,683 - #28 ;
INFO  22:20:13,684 - #5 const
INFO  22:20:13,684 - #9 int
INFO  22:20:13,684 - #9 jedan
INFO  22:20:13,685 - #25 =
INFO  22:20:13,685 - #10 1
INFO  22:20:13,685 - #28 ;
INFO  22:20:13,685 - #5 const
INFO  22:20:13,685 - #9 int
INFO  22:20:13,685 - #9 pet
INFO  22:20:13,685 - #25 =
INFO  22:20:13,685 - #10 5
INFO  22:20:13,685 - #28 ;
INFO  22:20:13,685 - #9 int
INFO  22:20:13,685 - #9 niz
INFO  22:20:13,685 - #23 [
INFO  22:20:13,685 - #24 ]
INFO  22:20:13,685 - #28 ;
INFO  22:20:13,685 - #9 char
INFO  22:20:13,686 - #9 nizch
INFO  22:20:13,686 - #23 [
INFO  22:20:13,686 - #24 ]
INFO  22:20:13,686 - #28 ;
INFO  22:20:13,686 - #21 {
INFO  22:20:13,687 - #9 int
INFO  22:20:13,687 - #9 main
INFO  22:20:13,687 - #30 (
INFO  22:20:13,688 - #31 )
INFO  22:20:13,688 - #9 int
INFO  22:20:13,688 - #9 bodovi
INFO  22:20:13,689 - #25 =
ERROR 22:20:13,689 - 
Sintaksna greska na liniji 14
INFO  22:20:13,689 - #10 0
INFO  22:20:13,689 - #28 ;
INFO  22:20:13,689 - #9 bool
INFO  22:20:13,689 - #9 bt
INFO  22:20:13,689 - #28 ;
DEBUG 22:20:13,690 - Izvrsen oporavak od greske (varDecl) do ; 
INFO  22:20:13,690 - #21 {
INFO  22:20:13,690 - #9 bodovi
INFO  22:20:13,691 - #25 =
INFO  22:20:13,691 - #10 0
INFO  22:20:13,691 - #28 ;
INFO  22:20:13,691 - #3 print
INFO  22:20:13,691 - #30 (
INFO  22:20:13,692 - #9 bodovi
INFO  22:20:13,692 - #31 )
INFO  22:20:13,692 - #28 ;
INFO  22:20:13,692 - #22 }
INFO  22:20:13,692 - #22 }
INFO  22:20:13,693 - 
================SINTAKSNO STABLO====================

INFO  22:20:13,694 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        ErrorVarSemi(
        ) [ErrorVarSemi]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          MatchedStmt(
            DesignatorStatement(
              Assignment(
                Designator_1(
                 bodovi
                ) [Designator_1]
                TermExpr(
                  FactorTerm(
                    ValFactor(
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ValFactor]
                  ) [FactorTerm]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStatement]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              FactorTerm(
                VarFactor(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                ) [VarFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:20:13,705 - 
================SEMANTICKA OBRADA====================

INFO  22:20:13,709 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  22:20:13,709 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  22:20:13,709 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  22:20:13,709 - Deklarisan niz niz na liniji 9
INFO  22:20:13,709 - Deklarisan niz nizch na liniji 10
INFO  22:20:13,709 - Obradjuje se funkcija main na liniji 13
INFO  22:20:13,709 - Deklarisana promenljiva bt na liniji 15
ERROR 22:20:13,709 - Semanticka greska - ime bodovi nije deklarisano na liniji 17
ERROR 22:20:13,709 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 22:20:13,709 - Semanticka greska - ime bodovi nije deklarisano na liniji 20
ERROR 22:20:13,710 - Semanticka greska na liniji 20: Operand instrukcije PRINT mora biti char ili int tipa, a on je rs.etf.pp1.symboltable.concepts.Struct@300ffa5d
ERROR 22:20:13,710 - Ulazni fajl [test/program.mj] ima semantickih gresaka!
Parsiranje nije uspesno zavrseno!
INFO  22:20:23,908 - Kompajliranje ulaznog fajla test\program.mj
INFO  22:20:23,945 - #2 program
INFO  22:20:23,945 - #9 test301
INFO  22:20:23,945 - #5 const
INFO  22:20:23,946 - #9 int
INFO  22:20:23,946 - #9 nula
INFO  22:20:23,946 - #25 =
INFO  22:20:23,947 - #10 0
INFO  22:20:23,947 - #28 ;
INFO  22:20:23,947 - #5 const
INFO  22:20:23,948 - #9 int
INFO  22:20:23,948 - #9 jedan
INFO  22:20:23,948 - #25 =
INFO  22:20:23,948 - #10 1
INFO  22:20:23,948 - #28 ;
INFO  22:20:23,948 - #5 const
INFO  22:20:23,949 - #9 int
INFO  22:20:23,949 - #9 pet
INFO  22:20:23,949 - #25 =
INFO  22:20:23,949 - #10 5
INFO  22:20:23,949 - #28 ;
INFO  22:20:23,949 - #9 int
INFO  22:20:23,949 - #9 niz
INFO  22:20:23,949 - #23 [
INFO  22:20:23,949 - #24 ]
INFO  22:20:23,949 - #28 ;
INFO  22:20:23,949 - #9 char
INFO  22:20:23,950 - #9 nizch
INFO  22:20:23,950 - #23 [
INFO  22:20:23,950 - #24 ]
INFO  22:20:23,950 - #28 ;
INFO  22:20:23,950 - #21 {
INFO  22:20:23,950 - #9 int
INFO  22:20:23,951 - #9 main
INFO  22:20:23,951 - #30 (
INFO  22:20:23,952 - #31 )
INFO  22:20:23,952 - #9 int
INFO  22:20:23,952 - #9 bodovi
INFO  22:20:23,952 - #25 =
ERROR 22:20:23,952 - 
Sintaksna greska na liniji 14
INFO  22:20:23,952 - #10 0
INFO  22:20:23,952 - #28 ;
INFO  22:20:23,952 - #9 bool
INFO  22:20:23,953 - #9 bt
INFO  22:20:23,953 - #28 ;
DEBUG 22:20:23,953 - Izvrsen oporavak od greske (varDecl) do ; 
INFO  22:20:23,954 - #21 {
INFO  22:20:23,954 - #9 bodovi
INFO  22:20:23,954 - #25 =
INFO  22:20:23,954 - #10 0
INFO  22:20:23,954 - #28 ;
INFO  22:20:23,955 - #3 print
INFO  22:20:23,955 - #30 (
INFO  22:20:23,955 - #9 bodovi
INFO  22:20:23,955 - #31 )
INFO  22:20:23,955 - #28 ;
INFO  22:20:23,955 - #22 }
INFO  22:20:23,956 - #22 }
INFO  22:20:23,957 - 
================SINTAKSNO STABLO====================

INFO  22:20:23,958 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        ErrorVarSemi(
        ) [ErrorVarSemi]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          MatchedStmt(
            DesignatorStatement(
              Assignment(
                Designator_1(
                 bodovi
                ) [Designator_1]
                TermExpr(
                  FactorTerm(
                    ValFactor(
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ValFactor]
                  ) [FactorTerm]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStatement]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              FactorTerm(
                VarFactor(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                ) [VarFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:20:23,968 - 
================SEMANTICKA OBRADA====================

INFO  22:20:23,973 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  22:20:23,974 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  22:20:23,974 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  22:20:23,974 - Deklarisan niz niz na liniji 9
INFO  22:20:23,974 - Deklarisan niz nizch na liniji 10
INFO  22:20:23,974 - Obradjuje se funkcija main na liniji 13
INFO  22:20:23,974 - Deklarisana promenljiva bt na liniji 15
ERROR 22:20:23,974 - Semanticka greska - ime bodovi nije deklarisano na liniji 17
ERROR 22:20:23,974 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 22:20:23,974 - Semanticka greska - ime bodovi nije deklarisano na liniji 20
ERROR 22:20:23,974 - Semanticka greska na liniji 20: Operand instrukcije PRINT mora biti char ili int tipa, a on je rs.etf.pp1.symboltable.concepts.Struct@300ffa5d
ERROR 22:20:23,975 - Ulazni fajl [test/program.mj] ima semantickih gresaka!
Parsiranje nije uspesno zavrseno!
INFO  22:20:39,635 - Kompajliranje ulaznog fajla test\program.mj
INFO  22:20:39,671 - #2 program
INFO  22:20:39,671 - #9 test301
INFO  22:20:39,671 - #5 const
INFO  22:20:39,672 - #9 int
INFO  22:20:39,672 - #9 nula
INFO  22:20:39,673 - #25 =
INFO  22:20:39,673 - #10 0
INFO  22:20:39,673 - #28 ;
INFO  22:20:39,674 - #5 const
INFO  22:20:39,675 - #9 int
INFO  22:20:39,675 - #9 jedan
INFO  22:20:39,675 - #25 =
INFO  22:20:39,675 - #10 1
INFO  22:20:39,675 - #28 ;
INFO  22:20:39,675 - #5 const
INFO  22:20:39,676 - #9 int
INFO  22:20:39,676 - #9 pet
INFO  22:20:39,676 - #25 =
INFO  22:20:39,676 - #10 5
INFO  22:20:39,676 - #28 ;
INFO  22:20:39,676 - #9 int
INFO  22:20:39,676 - #9 niz
INFO  22:20:39,676 - #23 [
INFO  22:20:39,676 - #24 ]
INFO  22:20:39,676 - #28 ;
INFO  22:20:39,676 - #9 char
INFO  22:20:39,677 - #9 nizch
INFO  22:20:39,678 - #23 [
INFO  22:20:39,678 - #24 ]
INFO  22:20:39,678 - #28 ;
INFO  22:20:39,678 - #21 {
INFO  22:20:39,678 - #9 int
INFO  22:20:39,678 - #9 main
INFO  22:20:39,679 - #30 (
INFO  22:20:39,679 - #31 )
INFO  22:20:39,680 - #9 int
INFO  22:20:39,680 - #9 bodovi
INFO  22:20:39,680 - #28 ;
INFO  22:20:39,680 - #9 bool
INFO  22:20:39,680 - #9 bt
INFO  22:20:39,680 - #28 ;
INFO  22:20:39,680 - #21 {
INFO  22:20:39,680 - #9 bodovi
INFO  22:20:39,681 - #25 =
INFO  22:20:39,681 - #10 0
INFO  22:20:39,681 - #28 ;
INFO  22:20:39,682 - #3 print
INFO  22:20:39,682 - #30 (
INFO  22:20:39,682 - #9 bodovi
INFO  22:20:39,682 - #31 )
INFO  22:20:39,682 - #28 ;
INFO  22:20:39,682 - #22 }
INFO  22:20:39,683 - #22 }
INFO  22:20:39,684 - 
================SINTAKSNO STABLO====================

INFO  22:20:39,685 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 bodovi
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          MatchedStmt(
            DesignatorStatement(
              Assignment(
                Designator_1(
                 bodovi
                ) [Designator_1]
                TermExpr(
                  FactorTerm(
                    ValFactor(
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ValFactor]
                  ) [FactorTerm]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStatement]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              FactorTerm(
                VarFactor(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                ) [VarFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:20:39,695 - 
================SEMANTICKA OBRADA====================

INFO  22:20:39,699 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  22:20:39,699 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  22:20:39,699 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  22:20:39,700 - Deklarisan niz niz na liniji 9
INFO  22:20:39,700 - Deklarisan niz nizch na liniji 10
INFO  22:20:39,700 - Obradjuje se funkcija main na liniji 13
INFO  22:20:39,700 - Deklarisana promenljiva bodovi na liniji 14
INFO  22:20:39,700 - Deklarisana promenljiva bt na liniji 15
INFO  22:20:39,701 - 
================GENERISANJE KODA====================

INFO  22:20:39,707 - Parsiranje uspesno zavrseno!
INFO  22:23:59,693 - Kompajliranje ulaznog fajla test\program.mj
INFO  22:23:59,729 - #2 program
INFO  22:23:59,729 - #9 test301
INFO  22:23:59,729 - #5 const
INFO  22:23:59,730 - #9 int
INFO  22:23:59,730 - #9 nula
INFO  22:23:59,730 - #25 =
INFO  22:23:59,730 - #10 0
INFO  22:23:59,730 - #28 ;
INFO  22:23:59,731 - #5 const
INFO  22:23:59,731 - #9 int
INFO  22:23:59,732 - #9 jedan
INFO  22:23:59,732 - #25 =
INFO  22:23:59,732 - #10 1
INFO  22:23:59,732 - #28 ;
INFO  22:23:59,732 - #5 const
INFO  22:23:59,732 - #9 int
INFO  22:23:59,732 - #9 pet
INFO  22:23:59,732 - #25 =
INFO  22:23:59,732 - #10 5
INFO  22:23:59,732 - #28 ;
INFO  22:23:59,732 - #9 int
INFO  22:23:59,732 - #9 niz
INFO  22:23:59,732 - #23 [
INFO  22:23:59,732 - #24 ]
INFO  22:23:59,732 - #28 ;
INFO  22:23:59,732 - #9 char
INFO  22:23:59,733 - #9 nizch
INFO  22:23:59,733 - #23 [
INFO  22:23:59,733 - #24 ]
INFO  22:23:59,733 - #28 ;
INFO  22:23:59,733 - #21 {
INFO  22:23:59,734 - #9 int
INFO  22:23:59,734 - #9 main
INFO  22:23:59,734 - #30 (
INFO  22:23:59,735 - #31 )
INFO  22:23:59,735 - #9 int
INFO  22:23:59,735 - #9 bodovi
INFO  22:23:59,735 - #28 ;
INFO  22:23:59,735 - #9 bool
INFO  22:23:59,735 - #9 bt
INFO  22:23:59,736 - #28 ;
INFO  22:23:59,736 - #21 {
INFO  22:23:59,736 - #9 bodovi
INFO  22:23:59,736 - #25 =
INFO  22:23:59,736 - #10 0
INFO  22:23:59,736 - #28 ;
INFO  22:23:59,737 - #22 }
INFO  22:23:59,738 - #22 }
INFO  22:23:59,742 - 
================SINTAKSNO STABLO====================

INFO  22:23:59,743 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 bodovi
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        NoStmt(
        ) [NoStmt]
        MatchedStmt(
          DesignatorStatement(
            Assignment(
              Designator_1(
               bodovi
              ) [Designator_1]
              TermExpr(
                FactorTerm(
                  ValFactor(
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ValFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [Assignment]
          ) [DesignatorStatement]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:23:59,754 - 
================SEMANTICKA OBRADA====================

INFO  22:23:59,758 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  22:23:59,758 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  22:23:59,758 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  22:23:59,758 - Deklarisan niz niz na liniji 9
INFO  22:23:59,758 - Deklarisan niz nizch na liniji 10
INFO  22:23:59,758 - Obradjuje se funkcija main na liniji 13
INFO  22:23:59,759 - Deklarisana promenljiva bodovi na liniji 14
INFO  22:23:59,759 - Deklarisana promenljiva bt na liniji 15
INFO  22:23:59,759 - 
================GENERISANJE KODA====================

INFO  22:23:59,764 - Parsiranje uspesno zavrseno!
INFO  22:24:15,390 - Kompajliranje ulaznog fajla test\program.mj
INFO  22:24:15,429 - #2 program
INFO  22:24:15,429 - #9 test301
INFO  22:24:15,429 - #5 const
INFO  22:24:15,430 - #9 int
INFO  22:24:15,430 - #9 nula
INFO  22:24:15,431 - #25 =
INFO  22:24:15,431 - #10 0
INFO  22:24:15,431 - #28 ;
INFO  22:24:15,432 - #5 const
INFO  22:24:15,433 - #9 int
INFO  22:24:15,433 - #9 jedan
INFO  22:24:15,433 - #25 =
INFO  22:24:15,433 - #10 1
INFO  22:24:15,433 - #28 ;
INFO  22:24:15,433 - #5 const
INFO  22:24:15,433 - #9 int
INFO  22:24:15,433 - #9 pet
INFO  22:24:15,433 - #25 =
INFO  22:24:15,433 - #10 5
INFO  22:24:15,433 - #28 ;
INFO  22:24:15,434 - #9 int
INFO  22:24:15,434 - #9 niz
INFO  22:24:15,434 - #23 [
INFO  22:24:15,434 - #24 ]
INFO  22:24:15,434 - #28 ;
INFO  22:24:15,434 - #9 char
INFO  22:24:15,435 - #9 nizch
INFO  22:24:15,435 - #23 [
INFO  22:24:15,435 - #24 ]
INFO  22:24:15,435 - #28 ;
INFO  22:24:15,435 - #21 {
INFO  22:24:15,435 - #9 int
INFO  22:24:15,436 - #9 main
INFO  22:24:15,436 - #30 (
INFO  22:24:15,437 - #31 )
INFO  22:24:15,437 - #9 int
INFO  22:24:15,438 - #9 bodovi
INFO  22:24:15,438 - #28 ;
INFO  22:24:15,438 - #9 bool
INFO  22:24:15,438 - #9 bt
INFO  22:24:15,438 - #28 ;
INFO  22:24:15,438 - #21 {
INFO  22:24:15,438 - #9 bodovi
INFO  22:24:15,439 - #25 =
INFO  22:24:15,439 - #10 0
INFO  22:24:15,439 - #28 ;
INFO  22:24:15,439 - #9 bodovi
INFO  22:24:15,440 - #26 ++
INFO  22:24:15,440 - #28 ;
INFO  22:24:15,440 - #22 }
INFO  22:24:15,440 - #22 }
INFO  22:24:15,441 - 
================SINTAKSNO STABLO====================

INFO  22:24:15,442 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 bodovi
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          MatchedStmt(
            DesignatorStatement(
              Assignment(
                Designator_1(
                 bodovi
                ) [Designator_1]
                TermExpr(
                  FactorTerm(
                    ValFactor(
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ValFactor]
                  ) [FactorTerm]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStatement]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          DesignatorStatement(
            Increment(
              Designator_1(
               bodovi
              ) [Designator_1]
            ) [Increment]
          ) [DesignatorStatement]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:24:15,452 - 
================SEMANTICKA OBRADA====================

INFO  22:24:15,455 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  22:24:15,456 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  22:24:15,456 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  22:24:15,456 - Deklarisan niz niz na liniji 9
INFO  22:24:15,456 - Deklarisan niz nizch na liniji 10
INFO  22:24:15,456 - Obradjuje se funkcija main na liniji 13
INFO  22:24:15,456 - Deklarisana promenljiva bodovi na liniji 14
INFO  22:24:15,456 - Deklarisana promenljiva bt na liniji 15
INFO  22:24:15,458 - 
================GENERISANJE KODA====================

INFO  22:24:15,464 - Parsiranje uspesno zavrseno!
INFO  22:24:36,304 - Kompajliranje ulaznog fajla test\program.mj
INFO  22:24:36,340 - #2 program
INFO  22:24:36,340 - #9 test301
INFO  22:24:36,340 - #5 const
INFO  22:24:36,341 - #9 int
INFO  22:24:36,341 - #9 nula
INFO  22:24:36,342 - #25 =
INFO  22:24:36,342 - #10 0
INFO  22:24:36,342 - #28 ;
INFO  22:24:36,343 - #5 const
INFO  22:24:36,344 - #9 int
INFO  22:24:36,344 - #9 jedan
INFO  22:24:36,344 - #25 =
INFO  22:24:36,344 - #10 1
INFO  22:24:36,344 - #28 ;
INFO  22:24:36,344 - #5 const
INFO  22:24:36,344 - #9 int
INFO  22:24:36,344 - #9 pet
INFO  22:24:36,344 - #25 =
INFO  22:24:36,344 - #10 5
INFO  22:24:36,344 - #28 ;
INFO  22:24:36,344 - #9 int
INFO  22:24:36,344 - #9 niz
INFO  22:24:36,344 - #23 [
INFO  22:24:36,344 - #24 ]
INFO  22:24:36,344 - #28 ;
INFO  22:24:36,345 - #9 char
INFO  22:24:36,345 - #9 nizch
INFO  22:24:36,345 - #23 [
INFO  22:24:36,345 - #24 ]
INFO  22:24:36,346 - #28 ;
INFO  22:24:36,346 - #21 {
INFO  22:24:36,346 - #9 int
INFO  22:24:36,346 - #9 main
INFO  22:24:36,346 - #30 (
INFO  22:24:36,347 - #31 )
INFO  22:24:36,347 - #9 int
INFO  22:24:36,347 - #9 bodovi
INFO  22:24:36,347 - #28 ;
INFO  22:24:36,348 - #9 bool
INFO  22:24:36,348 - #9 bt
INFO  22:24:36,348 - #28 ;
INFO  22:24:36,348 - #21 {
INFO  22:24:36,348 - #9 bodovi
INFO  22:24:36,348 - #25 =
INFO  22:24:36,348 - #10 0
INFO  22:24:36,348 - #28 ;
INFO  22:24:36,349 - #9 bodovi
INFO  22:24:36,349 - #26 ++
INFO  22:24:36,349 - #28 ;
INFO  22:24:36,349 - #9 bodovi
INFO  22:24:36,349 - #25 =
INFO  22:24:36,349 - #9 bodovi
INFO  22:24:36,349 - #14 +
INFO  22:24:36,350 - #9 jedan
INFO  22:24:36,350 - #28 ;
INFO  22:24:36,351 - #22 }
INFO  22:24:36,351 - #22 }
INFO  22:24:36,352 - 
================SINTAKSNO STABLO====================

INFO  22:24:36,353 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 bodovi
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         0
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            DesignatorStatement(
              Increment(
                Designator_1(
                 bodovi
                ) [Designator_1]
              ) [Increment]
            ) [DesignatorStatement]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          DesignatorStatement(
            Assignment(
              Designator_1(
               bodovi
              ) [Designator_1]
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     bodovi
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      VarFactor(
                        Designator_1(
                         jedan
                        ) [Designator_1]
                      ) [VarFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [Assignment]
          ) [DesignatorStatement]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:24:36,364 - 
================SEMANTICKA OBRADA====================

INFO  22:24:36,367 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  22:24:36,367 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  22:24:36,367 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  22:24:36,367 - Deklarisan niz niz na liniji 9
INFO  22:24:36,367 - Deklarisan niz nizch na liniji 10
INFO  22:24:36,367 - Obradjuje se funkcija main na liniji 13
INFO  22:24:36,367 - Deklarisana promenljiva bodovi na liniji 14
INFO  22:24:36,368 - Deklarisana promenljiva bt na liniji 15
INFO  22:24:36,368 - 
================GENERISANJE KODA====================

INFO  22:24:36,373 - Parsiranje uspesno zavrseno!
INFO  22:28:51,795 - Kompajliranje ulaznog fajla test\program.mj
INFO  22:28:51,830 - #2 program
INFO  22:28:51,830 - #9 test301
INFO  22:28:51,830 - #5 const
INFO  22:28:51,831 - #9 int
INFO  22:28:51,831 - #9 nula
INFO  22:28:51,832 - #25 =
INFO  22:28:51,832 - #10 0
INFO  22:28:51,832 - #28 ;
INFO  22:28:51,832 - #5 const
INFO  22:28:51,833 - #9 int
INFO  22:28:51,833 - #9 jedan
INFO  22:28:51,833 - #25 =
INFO  22:28:51,833 - #10 1
INFO  22:28:51,833 - #28 ;
INFO  22:28:51,834 - #5 const
INFO  22:28:51,834 - #9 int
INFO  22:28:51,834 - #9 pet
INFO  22:28:51,834 - #25 =
INFO  22:28:51,834 - #10 5
INFO  22:28:51,834 - #28 ;
INFO  22:28:51,834 - #9 int
INFO  22:28:51,834 - #9 niz
INFO  22:28:51,834 - #23 [
INFO  22:28:51,834 - #24 ]
INFO  22:28:51,834 - #28 ;
INFO  22:28:51,835 - #9 char
INFO  22:28:51,836 - #9 nizch
INFO  22:28:51,836 - #23 [
INFO  22:28:51,836 - #24 ]
INFO  22:28:51,836 - #28 ;
INFO  22:28:51,836 - #21 {
INFO  22:28:51,836 - #9 int
INFO  22:28:51,836 - #9 main
INFO  22:28:51,836 - #30 (
INFO  22:28:51,837 - #31 )
INFO  22:28:51,837 - #9 int
INFO  22:28:51,837 - #9 bodovi
INFO  22:28:51,837 - #28 ;
INFO  22:28:51,838 - #9 bool
INFO  22:28:51,838 - #9 bt
INFO  22:28:51,838 - #28 ;
INFO  22:28:51,838 - #21 {
INFO  22:28:51,838 - #9 bodovi
INFO  22:28:51,838 - #25 =
INFO  22:28:51,838 - #10 0
INFO  22:28:51,838 - #28 ;
INFO  22:28:51,839 - #9 bodovi
INFO  22:28:51,839 - #26 ++
INFO  22:28:51,839 - #28 ;
INFO  22:28:51,839 - #9 bodovi
INFO  22:28:51,839 - #25 =
INFO  22:28:51,840 - #9 nula
INFO  22:28:51,840 - #14 +
INFO  22:28:51,840 - #9 jedan
INFO  22:28:51,840 - #28 ;
INFO  22:28:51,841 - #22 }
INFO  22:28:51,841 - #22 }
INFO  22:28:51,842 - 
================SINTAKSNO STABLO====================

INFO  22:28:51,843 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 bodovi
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            MatchedStmt(
              DesignatorStatement(
                Assignment(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                  TermExpr(
                    FactorTerm(
                      ValFactor(
                        NumConst(
                         0
                        ) [NumConst]
                      ) [ValFactor]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            DesignatorStatement(
              Increment(
                Designator_1(
                 bodovi
                ) [Designator_1]
              ) [Increment]
            ) [DesignatorStatement]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          DesignatorStatement(
            Assignment(
              Designator_1(
               bodovi
              ) [Designator_1]
              AddExpr(
                FactorTerm(
                  VarFactor(
                    Designator_1(
                     nula
                    ) [Designator_1]
                  ) [VarFactor]
                ) [FactorTerm]
                MoreTermSingle(
                  MoreTermPart(
                    Addop(
                    ) [Addop]
                    FactorTerm(
                      VarFactor(
                        Designator_1(
                         jedan
                        ) [Designator_1]
                      ) [VarFactor]
                    ) [FactorTerm]
                  ) [MoreTermPart]
                ) [MoreTermSingle]
              ) [AddExpr]
            ) [Assignment]
          ) [DesignatorStatement]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:28:51,855 - 
================SEMANTICKA OBRADA====================

INFO  22:28:51,858 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  22:28:51,858 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  22:28:51,858 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  22:28:51,859 - Deklarisan niz niz na liniji 9
INFO  22:28:51,859 - Deklarisan niz nizch na liniji 10
INFO  22:28:51,859 - Obradjuje se funkcija main na liniji 13
INFO  22:28:51,859 - Deklarisana promenljiva bodovi na liniji 14
INFO  22:28:51,859 - Deklarisana promenljiva bt na liniji 15
INFO  22:28:51,860 - 
================GENERISANJE KODA====================

INFO  22:28:51,864 - Parsiranje uspesno zavrseno!
INFO  22:29:57,628 - Kompajliranje ulaznog fajla test\program.mj
INFO  22:29:57,662 - #2 program
INFO  22:29:57,662 - #9 test301
INFO  22:29:57,662 - #5 const
INFO  22:29:57,663 - #9 int
INFO  22:29:57,663 - #9 nula
INFO  22:29:57,664 - #25 =
INFO  22:29:57,664 - #10 0
INFO  22:29:57,664 - #28 ;
INFO  22:29:57,665 - #5 const
INFO  22:29:57,665 - #9 int
INFO  22:29:57,666 - #9 jedan
INFO  22:29:57,666 - #25 =
INFO  22:29:57,666 - #10 1
INFO  22:29:57,666 - #28 ;
INFO  22:29:57,666 - #5 const
INFO  22:29:57,666 - #9 int
INFO  22:29:57,666 - #9 pet
INFO  22:29:57,666 - #25 =
INFO  22:29:57,666 - #10 5
INFO  22:29:57,666 - #28 ;
INFO  22:29:57,666 - #9 int
INFO  22:29:57,666 - #9 niz
INFO  22:29:57,666 - #23 [
INFO  22:29:57,666 - #24 ]
INFO  22:29:57,666 - #28 ;
INFO  22:29:57,667 - #9 char
INFO  22:29:57,667 - #9 nizch
INFO  22:29:57,667 - #23 [
INFO  22:29:57,667 - #24 ]
INFO  22:29:57,667 - #28 ;
INFO  22:29:57,667 - #21 {
INFO  22:29:57,668 - #9 int
INFO  22:29:57,668 - #9 main
INFO  22:29:57,668 - #30 (
INFO  22:29:57,669 - #31 )
INFO  22:29:57,669 - #9 int
INFO  22:29:57,670 - #9 bodovi
INFO  22:29:57,670 - #28 ;
INFO  22:29:57,670 - #9 bool
INFO  22:29:57,670 - #9 bt
INFO  22:29:57,670 - #28 ;
INFO  22:29:57,670 - #21 {
INFO  22:29:57,670 - #9 bodovi
INFO  22:29:57,671 - #25 =
INFO  22:29:57,671 - #10 0
INFO  22:29:57,671 - #28 ;
INFO  22:29:57,671 - #9 bodovi
INFO  22:29:57,672 - #26 ++
INFO  22:29:57,672 - #28 ;
INFO  22:29:57,672 - #9 bodovi
INFO  22:29:57,672 - #25 =
INFO  22:29:57,672 - #9 nula
INFO  22:29:57,672 - #14 +
INFO  22:29:57,672 - #9 jedan
INFO  22:29:57,673 - #28 ;
INFO  22:29:57,674 - #3 print
INFO  22:29:57,674 - #30 (
INFO  22:29:57,674 - #9 bodovi
INFO  22:29:57,674 - #31 )
INFO  22:29:57,674 - #28 ;
INFO  22:29:57,674 - #22 }
INFO  22:29:57,674 - #22 }
INFO  22:29:57,675 - 
================SINTAKSNO STABLO====================

INFO  22:29:57,676 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 bodovi
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              MatchedStmt(
                DesignatorStatement(
                  Assignment(
                    Designator_1(
                     bodovi
                    ) [Designator_1]
                    TermExpr(
                      FactorTerm(
                        ValFactor(
                          NumConst(
                           0
                          ) [NumConst]
                        ) [ValFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStatement]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              DesignatorStatement(
                Increment(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                ) [Increment]
              ) [DesignatorStatement]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            DesignatorStatement(
              Assignment(
                Designator_1(
                 bodovi
                ) [Designator_1]
                AddExpr(
                  FactorTerm(
                    VarFactor(
                      Designator_1(
                       nula
                      ) [Designator_1]
                    ) [VarFactor]
                  ) [FactorTerm]
                  MoreTermSingle(
                    MoreTermPart(
                      Addop(
                      ) [Addop]
                      FactorTerm(
                        VarFactor(
                          Designator_1(
                           jedan
                          ) [Designator_1]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [MoreTermPart]
                  ) [MoreTermSingle]
                ) [AddExpr]
              ) [Assignment]
            ) [DesignatorStatement]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              FactorTerm(
                VarFactor(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                ) [VarFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:29:57,687 - 
================SEMANTICKA OBRADA====================

INFO  22:29:57,690 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  22:29:57,690 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  22:29:57,690 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  22:29:57,691 - Deklarisan niz niz na liniji 9
INFO  22:29:57,691 - Deklarisan niz nizch na liniji 10
INFO  22:29:57,691 - Obradjuje se funkcija main na liniji 13
INFO  22:29:57,691 - Deklarisana promenljiva bodovi na liniji 14
INFO  22:29:57,691 - Deklarisana promenljiva bt na liniji 15
INFO  22:29:57,692 - 
================GENERISANJE KODA====================

INFO  22:29:57,698 - Parsiranje uspesno zavrseno!
INFO  22:30:17,990 - Kompajliranje ulaznog fajla test\program.mj
INFO  22:30:18,022 - #2 program
INFO  22:30:18,022 - #9 test301
INFO  22:30:18,022 - #5 const
INFO  22:30:18,024 - #9 int
INFO  22:30:18,024 - #9 nula
INFO  22:30:18,024 - #25 =
INFO  22:30:18,025 - #10 0
INFO  22:30:18,025 - #28 ;
INFO  22:30:18,026 - #5 const
INFO  22:30:18,027 - #9 int
INFO  22:30:18,027 - #9 jedan
INFO  22:30:18,027 - #25 =
INFO  22:30:18,027 - #10 1
INFO  22:30:18,027 - #28 ;
INFO  22:30:18,027 - #5 const
INFO  22:30:18,027 - #9 int
INFO  22:30:18,027 - #9 pet
INFO  22:30:18,027 - #25 =
INFO  22:30:18,027 - #10 5
INFO  22:30:18,027 - #28 ;
INFO  22:30:18,028 - #9 int
INFO  22:30:18,028 - #9 niz
INFO  22:30:18,028 - #23 [
INFO  22:30:18,028 - #24 ]
INFO  22:30:18,028 - #28 ;
INFO  22:30:18,028 - #9 char
INFO  22:30:18,029 - #9 nizch
INFO  22:30:18,029 - #23 [
INFO  22:30:18,029 - #24 ]
INFO  22:30:18,029 - #28 ;
INFO  22:30:18,029 - #21 {
INFO  22:30:18,030 - #9 int
INFO  22:30:18,030 - #9 main
INFO  22:30:18,031 - #30 (
INFO  22:30:18,032 - #31 )
INFO  22:30:18,032 - #9 int
INFO  22:30:18,032 - #9 bodovi
INFO  22:30:18,033 - #28 ;
INFO  22:30:18,033 - #9 bool
INFO  22:30:18,033 - #9 bt
INFO  22:30:18,033 - #28 ;
INFO  22:30:18,033 - #21 {
INFO  22:30:18,033 - #9 bodovi
INFO  22:30:18,033 - #25 =
INFO  22:30:18,034 - #10 0
INFO  22:30:18,034 - #28 ;
INFO  22:30:18,034 - #3 print
INFO  22:30:18,034 - #30 (
INFO  22:30:18,035 - #9 bodovi
INFO  22:30:18,035 - #31 )
INFO  22:30:18,035 - #28 ;
INFO  22:30:18,035 - #22 }
INFO  22:30:18,035 - #22 }
INFO  22:30:18,036 - 
================SINTAKSNO STABLO====================

INFO  22:30:18,037 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ProgConst(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDecl_0(
                  SingleConst(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [SingleConst]
                ) [ConstDecl_0]
              ) [ConstDecl]
            ) [ProgConst]
          ) [VarDeclarations]
          ProgConst(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDecl_0(
                SingleConst(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [SingleConst]
              ) [ConstDecl_0]
            ) [ConstDecl]
          ) [ProgConst]
        ) [VarDeclarations]
        ProgConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDecl_0(
              SingleConst(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [SingleConst]
            ) [ConstDecl_0]
          ) [ConstDecl]
        ) [ProgConst]
      ) [VarDeclarations]
      ProgVar(
        VarDecl(
          Type(
           int
          ) [Type]
          VarDecl_0(
            VarArray(
             niz
            ) [VarArray]
          ) [VarDecl_0]
        ) [VarDecl]
      ) [ProgVar]
    ) [VarDeclarations]
    ProgVar(
      VarDecl(
        Type(
         char
        ) [Type]
        VarDecl_0(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarDecl_0]
      ) [VarDecl]
    ) [ProgVar]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeName]
      FormParsParens(
        NoFormalParam(
        ) [NoFormalParam]
      ) [FormParsParens]
      VarDeclarations(
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          ProgVar(
            VarDecl(
              Type(
               int
              ) [Type]
              VarDecl_0(
                Variable(
                 bodovi
                ) [Variable]
              ) [VarDecl_0]
            ) [VarDecl]
          ) [ProgVar]
        ) [VarDeclarations]
        ProgVar(
          VarDecl(
            Type(
             bool
            ) [Type]
            VarDecl_0(
              Variable(
               bt
              ) [Variable]
            ) [VarDecl_0]
          ) [VarDecl]
        ) [ProgVar]
      ) [VarDeclarations]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          MatchedStmt(
            DesignatorStatement(
              Assignment(
                Designator_1(
                 bodovi
                ) [Designator_1]
                TermExpr(
                  FactorTerm(
                    ValFactor(
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ValFactor]
                  ) [FactorTerm]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStatement]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              FactorTerm(
                VarFactor(
                  Designator_1(
                   bodovi
                  ) [Designator_1]
                ) [VarFactor]
              ) [FactorTerm]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:30:18,047 - 
================SEMANTICKA OBRADA====================

INFO  22:30:18,051 - Deklarisana konstanta nula sa vrednoscu 0 na liniji 5
INFO  22:30:18,051 - Deklarisana konstanta jedan sa vrednoscu 1 na liniji 6
INFO  22:30:18,051 - Deklarisana konstanta pet sa vrednoscu 5 na liniji 7
INFO  22:30:18,051 - Deklarisan niz niz na liniji 9
INFO  22:30:18,052 - Deklarisan niz nizch na liniji 10
INFO  22:30:18,052 - Obradjuje se funkcija main na liniji 13
INFO  22:30:18,052 - Deklarisana promenljiva bodovi na liniji 14
INFO  22:30:18,052 - Deklarisana promenljiva bt na liniji 15
INFO  22:30:18,053 - 
================GENERISANJE KODA====================

INFO  22:30:18,058 - Parsiranje uspesno zavrseno!
